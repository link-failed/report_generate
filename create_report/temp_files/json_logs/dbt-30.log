{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": "2022-07-29T23:00:38.396379", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.vitals_first_day", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.400307Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.vitals_first_day", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.400840Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.vitals_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.402908Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.403831Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.vitals_first_day", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.404179Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.vitals_first_day\""}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.vitals_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.418458Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.420026Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "BEGIN"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: BEGIN", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.420816Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.421266Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.429822Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.430419Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"vitals_first_day__dbt_tmp\"\n  as (\n    -- This query pivots the vital signs for the first 24 hours of a patient's stay\n-- Vital signs include heart rate, blood pressure, respiration rate, and temperature\n\nSELECT pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n-- Easier names\n, min(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_min\n, max(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_max\n, avg(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_mean\n, min(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_min\n, max(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_max\n, avg(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_mean\n, min(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_min\n, max(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_max\n, avg(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_mean\n, min(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_min\n, max(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_max\n, avg(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_mean\n, min(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_min\n, max(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_max\n, avg(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_mean\n, min(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_min\n, max(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_max\n, avg(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_mean\n, min(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_min\n, max(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_max\n, avg(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_mean\n, min(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_min\n, max(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_max\n, avg(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_mean\n\nFROM  (\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n    when itemid in (211,220045) and valuenum > 0 and valuenum < 300 then 1 -- HeartRate\n    when itemid in (51,442,455,6701,220179,220050) and valuenum > 0 and valuenum < 400 then 2 -- SysBP\n    when itemid in (8368,8440,8441,8555,220180,220051) and valuenum > 0 and valuenum < 300 then 3 -- DiasBP\n    when itemid in (456,52,6702,443,220052,220181,225312) and valuenum > 0 and valuenum < 300 then 4 -- MeanBP\n    when itemid in (615,618,220210,224690) and valuenum > 0 and valuenum < 70 then 5 -- RespRate\n    when itemid in (223761,678) and valuenum > 70 and valuenum < 120  then 6 -- TempF, converted to degC in valuenum call\n    when itemid in (223762,676) and valuenum > 10 and valuenum < 50  then 6 -- TempC\n    when itemid in (646,220277) and valuenum > 0 and valuenum <= 100 then 7 -- SpO2\n    when itemid in (807,811,1529,3745,3744,225664,220621,226537) and valuenum > 0 then 8 -- Glucose\n\n    else null end as vitalid\n      -- convert F to C\n  , case when itemid in (223761,678) then (valuenum-32)/1.8 else valuenum end as valuenum\n\n  from icustays ie\n  left join chartevents ce\n  on ie.icustay_id = ce.icustay_id\n  and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1 DAY')\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'SECOND') > 0\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'HOUR') <= 24\n  -- exclude rows marked as error\n  and (ce.error IS NULL or ce.error = 0)\n  where ce.itemid in\n  (\n  -- HEART RATE\n  211, --\"Heart Rate\"\n  220045, --\"Heart Rate\"\n\n  -- Systolic/diastolic\n\n  51, --\tArterial BP [Systolic]\n  442, --\tManual BP [Systolic]\n  455, --\tNBP [Systolic]\n  6701, --\tArterial BP #2 [Systolic]\n  220179, --\tNon Invasive Blood Pressure systolic\n  220050, --\tArterial Blood Pressure systolic\n\n  8368, --\tArterial BP [Diastolic]\n  8440, --\tManual BP [Diastolic]\n  8441, --\tNBP [Diastolic]\n  8555, --\tArterial BP #2 [Diastolic]\n  220180, --\tNon Invasive Blood Pressure diastolic\n  220051, --\tArterial Blood Pressure diastolic\n\n\n  -- MEAN ARTERIAL PRESSURE\n  456, --\"NBP Mean\"\n  52, --\"Arterial BP Mean\"\n  6702, --\tArterial BP Mean #2\n  443, --\tManual BP Mean(calc)\n  220052, --\"Arterial Blood Pressure mean\"\n  220181, --\"Non Invasive Blood Pressure mean\"\n  225312, --\"ART BP mean\"\n\n  -- RESPIRATORY RATE\n  618,--\tRespiratory Rate\n  615,--\tResp Rate (Total)\n  220210,--\tRespiratory Rate\n  224690, --\tRespiratory Rate (Total)\n\n\n  -- SPO2, peripheral\n  646, 220277,\n\n  -- GLUCOSE, both lab and fingerstick\n  807,--\tFingerstick Glucose\n  811,--\tGlucose (70-105)\n  1529,--\tGlucose\n  3745,--\tBloodGlucose\n  3744,--\tBlood Glucose\n  225664,--\tGlucose finger stick\n  220621,--\tGlucose (serum)\n  226537,--\tGlucose (whole blood)\n\n  -- TEMPERATURE\n  223762, -- \"Temperature Celsius\"\n  676,\t-- \"Temperature C\"\n  223761, -- \"Temperature Fahrenheit\"\n  678 --\t\"Temperature F\"\n\n  )\n) pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n  );"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"vitals_first_day__dbt_tmp\"\n  as (\n    -- This query pivots the vital signs for the first 24 hours of a patient's stay\n-- Vital signs include heart rate, blood pressure, respiration rate, and temperature\n\nSELECT pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n-- Easier names\n, min(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_min\n, max(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_max\n, avg(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_mean\n, min(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_min\n, max(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_max\n, avg(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_mean\n, min(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_min\n, max(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_max\n, avg(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_mean\n, min(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_min\n, max(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_max\n, avg(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_mean\n, min(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_min\n, max(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_max\n, avg(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_mean\n, min(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_min\n, max(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_max\n, avg(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_mean\n, min(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_min\n, max(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_max\n, avg(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_mean\n, min(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_min\n, max(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_max\n, avg(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_mean\n\nFROM  (\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n    when itemid in (211,220045) and valuenum > 0 and valuenum < 300 then 1 -- HeartRate\n    when itemid in (51,442,455,6701,220179,220050) and valuenum > 0 and valuenum < 400 then 2 -- SysBP\n    when itemid in (8368,8440,8441,8555,220180,220051) and valuenum > 0 and valuenum < 300 then 3 -- DiasBP\n    when itemid in (456,52,6702,443,220052,220181,225312) and valuenum > 0 and valuenum < 300 then 4 -- MeanBP\n    when itemid in (615,618,220210,224690) and valuenum > 0 and valuenum < 70 then 5 -- RespRate\n    when itemid in (223761,678) and valuenum > 70 and valuenum < 120  then 6 -- TempF, converted to degC in valuenum call\n    when itemid in (223762,676) and valuenum > 10 and valuenum < 50  then 6 -- TempC\n    when itemid in (646,220277) and valuenum > 0 and valuenum <= 100 then 7 -- SpO2\n    when itemid in (807,811,1529,3745,3744,225664,220621,226537) and valuenum > 0 then 8 -- Glucose\n\n    else null end as vitalid\n      -- convert F to C\n  , case when itemid in (223761,678) then (valuenum-32)/1.8 else valuenum end as valuenum\n\n  from icustays ie\n  left join chartevents ce\n  on ie.icustay_id = ce.icustay_id\n  and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1 DAY')\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'SECOND') > 0\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'HOUR') <= 24\n  -- exclude rows marked as error\n  and (ce.error IS NULL or ce.error = 0)\n  where ce.itemid in\n  (\n  -- HEART RATE\n  211, --\"Heart Rate\"\n  220045, --\"Heart Rate\"\n\n  -- Systolic/diastolic\n\n  51, --\tArterial BP [Systolic]\n  442, --\tManual BP [Systolic]\n  455, --\tNBP [Systolic]\n  6701, --\tArterial BP #2 [Systolic]\n  220179, --\tNon Invasive Blood Pressure systolic\n  220050, --\tArterial Blood Pressure systolic\n\n  8368, --\tArterial BP [Diastolic]\n  8440, --\tManual BP [Diastolic]\n  8441, --\tNBP [Diastolic]\n  8555, --\tArterial BP #2 [Diastolic]\n  220180, --\tNon Invasive Blood Pressure diastolic\n  220051, --\tArterial Blood Pressure diastolic\n\n\n  -- MEAN ARTERIAL PRESSURE\n  456, --\"NBP Mean\"\n  52, --\"Arterial BP Mean\"\n  6702, --\tArterial BP Mean #2\n  443, --\tManual BP Mean(calc)\n  220052, --\"Arterial Blood Pressure mean\"\n  220181, --\"Non Invasive Blood Pressure mean\"\n  225312, --\"ART BP mean\"\n\n  -- RESPIRATORY RATE\n  618,--\tRespiratory Rate\n  615,--\tResp Rate (Total)\n  220210,--\tRespiratory Rate\n  224690, --\tRespiratory Rate (Total)\n\n\n  -- SPO2, peripheral\n  646, 220277,\n\n  -- GLUCOSE, both lab and fingerstick\n  807,--\tFingerstick Glucose\n  811,--\tGlucose (70-105)\n  1529,--\tGlucose\n  3745,--\tBloodGlucose\n  3744,--\tBlood Glucose\n  225664,--\tGlucose finger stick\n  220621,--\tGlucose (serum)\n  226537,--\tGlucose (whole blood)\n\n  -- TEMPERATURE\n  223762, -- \"Temperature Celsius\"\n  676,\t-- \"Temperature C\"\n  223761, -- \"Temperature Fahrenheit\"\n  678 --\t\"Temperature F\"\n\n  )\n) pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n  );", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.430749Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.02, "status": "SELECT 0"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 0 in 0.02 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.453064Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.457731Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\nalter table \"mimic\".\"public\".\"vitals_first_day\" rename to \"vitals_first_day__dbt_backup\""}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\nalter table \"mimic\".\"public\".\"vitals_first_day\" rename to \"vitals_first_day__dbt_backup\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.457993Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.459335Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.464803Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\nalter table \"mimic\".\"public\".\"vitals_first_day__dbt_tmp\" rename to \"vitals_first_day\""}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\nalter table \"mimic\".\"public\".\"vitals_first_day__dbt_tmp\" rename to \"vitals_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.465081Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.466203Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.vitals_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: COMMIT", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.470672Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.470934Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "COMMIT"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: COMMIT", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.471168Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "COMMIT"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.472736Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.475194Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"vitals_first_day__dbt_backup\" cascade"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"vitals_first_day__dbt_backup\" cascade", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.475446Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.477878Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.482419Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.vitals_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: Close", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.482847Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '1fc17614-c4ac-4308-83ff-170fd628080c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184c57cdc0>]}"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1fc17614-c4ac-4308-83ff-170fd628080c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184c57cdc0>]}", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.483946Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.vitals_first_day", "execution_time": 0, "index": 8, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": "2022-07-29T23:00:38.396379", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "status": "SELECT 0", "total": 10}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "info", "log_version": 2, "msg": "8 of 10 OK created table model public.vitals_first_day ......................... [\u001b[32mSELECT 0\u001b[0m in 0.09s]", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.484745Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:00:38.485566", "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": "2022-07-29T23:00:38.396379", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0}, "agate_table": null, "execution_time": 0.08514904975891113, "failures": null, "message": "SELECT 0", "node": {"alias": "vitals_first_day", "build_path": "target/run/mimic/models/firstday/vitals_first_day.sql", "checksum": {"checksum": "cac09fce3915d79c1814d25b91a41fa78f64bf2678dcf8910fb1d8a1118b1ccd", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/vitals_first_day.sql", "compiled_sql": "-- This query pivots the vital signs for the first 24 hours of a patient's stay\n-- Vital signs include heart rate, blood pressure, respiration rate, and temperature\n\nSELECT pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n-- Easier names\n, min(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_min\n, max(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_max\n, avg(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_mean\n, min(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_min\n, max(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_max\n, avg(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_mean\n, min(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_min\n, max(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_max\n, avg(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_mean\n, min(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_min\n, max(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_max\n, avg(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_mean\n, min(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_min\n, max(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_max\n, avg(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_mean\n, min(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_min\n, max(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_max\n, avg(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_mean\n, min(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_min\n, max(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_max\n, avg(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_mean\n, min(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_min\n, max(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_max\n, avg(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_mean\n\nFROM  (\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n    when itemid in (211,220045) and valuenum > 0 and valuenum < 300 then 1 -- HeartRate\n    when itemid in (51,442,455,6701,220179,220050) and valuenum > 0 and valuenum < 400 then 2 -- SysBP\n    when itemid in (8368,8440,8441,8555,220180,220051) and valuenum > 0 and valuenum < 300 then 3 -- DiasBP\n    when itemid in (456,52,6702,443,220052,220181,225312) and valuenum > 0 and valuenum < 300 then 4 -- MeanBP\n    when itemid in (615,618,220210,224690) and valuenum > 0 and valuenum < 70 then 5 -- RespRate\n    when itemid in (223761,678) and valuenum > 70 and valuenum < 120  then 6 -- TempF, converted to degC in valuenum call\n    when itemid in (223762,676) and valuenum > 10 and valuenum < 50  then 6 -- TempC\n    when itemid in (646,220277) and valuenum > 0 and valuenum <= 100 then 7 -- SpO2\n    when itemid in (807,811,1529,3745,3744,225664,220621,226537) and valuenum > 0 then 8 -- Glucose\n\n    else null end as vitalid\n      -- convert F to C\n  , case when itemid in (223761,678) then (valuenum-32)/1.8 else valuenum end as valuenum\n\n  from icustays ie\n  left join chartevents ce\n  on ie.icustay_id = ce.icustay_id\n  and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1 DAY')\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'SECOND') > 0\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'HOUR') <= 24\n  -- exclude rows marked as error\n  and (ce.error IS NULL or ce.error = 0)\n  where ce.itemid in\n  (\n  -- HEART RATE\n  211, --\"Heart Rate\"\n  220045, --\"Heart Rate\"\n\n  -- Systolic/diastolic\n\n  51, --\tArterial BP [Systolic]\n  442, --\tManual BP [Systolic]\n  455, --\tNBP [Systolic]\n  6701, --\tArterial BP #2 [Systolic]\n  220179, --\tNon Invasive Blood Pressure systolic\n  220050, --\tArterial Blood Pressure systolic\n\n  8368, --\tArterial BP [Diastolic]\n  8440, --\tManual BP [Diastolic]\n  8441, --\tNBP [Diastolic]\n  8555, --\tArterial BP #2 [Diastolic]\n  220180, --\tNon Invasive Blood Pressure diastolic\n  220051, --\tArterial Blood Pressure diastolic\n\n\n  -- MEAN ARTERIAL PRESSURE\n  456, --\"NBP Mean\"\n  52, --\"Arterial BP Mean\"\n  6702, --\tArterial BP Mean #2\n  443, --\tManual BP Mean(calc)\n  220052, --\"Arterial Blood Pressure mean\"\n  220181, --\"Non Invasive Blood Pressure mean\"\n  225312, --\"ART BP mean\"\n\n  -- RESPIRATORY RATE\n  618,--\tRespiratory Rate\n  615,--\tResp Rate (Total)\n  220210,--\tRespiratory Rate\n  224690, --\tRespiratory Rate (Total)\n\n\n  -- SPO2, peripheral\n  646, 220277,\n\n  -- GLUCOSE, both lab and fingerstick\n  807,--\tFingerstick Glucose\n  811,--\tGlucose (70-105)\n  1529,--\tGlucose\n  3745,--\tBloodGlucose\n  3744,--\tBlood Glucose\n  225664,--\tGlucose finger stick\n  220621,--\tGlucose (serum)\n  226537,--\tGlucose (whole blood)\n\n  -- TEMPERATURE\n  223762, -- \"Temperature Celsius\"\n  676,\t-- \"Temperature C\"\n  223761, -- \"Temperature Fahrenheit\"\n  678 --\t\"Temperature F\"\n\n  )\n) pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.13711, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "vitals_first_day"], "meta": {}, "name": "vitals_first_day", "original_file_path": "models/firstday/vitals_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/vitals_first_day.sql", "raw_sql": "-- This query pivots the vital signs for the first 24 hours of a patient's stay\n-- Vital signs include heart rate, blood pressure, respiration rate, and temperature\n\nSELECT pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n-- Easier names\n, min(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_min\n, max(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_max\n, avg(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_mean\n, min(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_min\n, max(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_max\n, avg(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_mean\n, min(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_min\n, max(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_max\n, avg(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_mean\n, min(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_min\n, max(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_max\n, avg(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_mean\n, min(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_min\n, max(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_max\n, avg(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_mean\n, min(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_min\n, max(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_max\n, avg(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_mean\n, min(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_min\n, max(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_max\n, avg(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_mean\n, min(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_min\n, max(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_max\n, avg(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_mean\n\nFROM  (\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n    when itemid in (211,220045) and valuenum > 0 and valuenum < 300 then 1 -- HeartRate\n    when itemid in (51,442,455,6701,220179,220050) and valuenum > 0 and valuenum < 400 then 2 -- SysBP\n    when itemid in (8368,8440,8441,8555,220180,220051) and valuenum > 0 and valuenum < 300 then 3 -- DiasBP\n    when itemid in (456,52,6702,443,220052,220181,225312) and valuenum > 0 and valuenum < 300 then 4 -- MeanBP\n    when itemid in (615,618,220210,224690) and valuenum > 0 and valuenum < 70 then 5 -- RespRate\n    when itemid in (223761,678) and valuenum > 70 and valuenum < 120  then 6 -- TempF, converted to degC in valuenum call\n    when itemid in (223762,676) and valuenum > 10 and valuenum < 50  then 6 -- TempC\n    when itemid in (646,220277) and valuenum > 0 and valuenum <= 100 then 7 -- SpO2\n    when itemid in (807,811,1529,3745,3744,225664,220621,226537) and valuenum > 0 then 8 -- Glucose\n\n    else null end as vitalid\n      -- convert F to C\n  , case when itemid in (223761,678) then (valuenum-32)/1.8 else valuenum end as valuenum\n\n  from icustays ie\n  left join chartevents ce\n  on ie.icustay_id = ce.icustay_id\n  and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1 DAY')\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'SECOND') > 0\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'HOUR') <= 24\n  -- exclude rows marked as error\n  and (ce.error IS NULL or ce.error = 0)\n  where ce.itemid in\n  (\n  -- HEART RATE\n  211, --\"Heart Rate\"\n  220045, --\"Heart Rate\"\n\n  -- Systolic/diastolic\n\n  51, --\tArterial BP [Systolic]\n  442, --\tManual BP [Systolic]\n  455, --\tNBP [Systolic]\n  6701, --\tArterial BP #2 [Systolic]\n  220179, --\tNon Invasive Blood Pressure systolic\n  220050, --\tArterial Blood Pressure systolic\n\n  8368, --\tArterial BP [Diastolic]\n  8440, --\tManual BP [Diastolic]\n  8441, --\tNBP [Diastolic]\n  8555, --\tArterial BP #2 [Diastolic]\n  220180, --\tNon Invasive Blood Pressure diastolic\n  220051, --\tArterial Blood Pressure diastolic\n\n\n  -- MEAN ARTERIAL PRESSURE\n  456, --\"NBP Mean\"\n  52, --\"Arterial BP Mean\"\n  6702, --\tArterial BP Mean #2\n  443, --\tManual BP Mean(calc)\n  220052, --\"Arterial Blood Pressure mean\"\n  220181, --\"Non Invasive Blood Pressure mean\"\n  225312, --\"ART BP mean\"\n\n  -- RESPIRATORY RATE\n  618,--\tRespiratory Rate\n  615,--\tResp Rate (Total)\n  220210,--\tRespiratory Rate\n  224690, --\tRespiratory Rate (Total)\n\n\n  -- SPO2, peripheral\n  646, 220277,\n\n  -- GLUCOSE, both lab and fingerstick\n  807,--\tFingerstick Glucose\n  811,--\tGlucose (70-105)\n  1529,--\tGlucose\n  3745,--\tBloodGlucose\n  3744,--\tBlood Glucose\n  225664,--\tGlucose finger stick\n  220621,--\tGlucose (serum)\n  226537,--\tGlucose (whole blood)\n\n  -- TEMPERATURE\n  223762, -- \"Temperature Celsius\"\n  676,\t-- \"Temperature C\"\n  223761, -- \"Temperature Fahrenheit\"\n  678 --\t\"Temperature F\"\n\n  )\n) pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id", "refs": [], "relation_name": "\"mimic\".\"public\".\"vitals_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.vitals_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:00:38.403745Z", "name": "compile", "started_at": "2022-07-29T23:00:38.400819Z"}, {"completed_at": "2022-07-29T23:00:38.482370Z", "name": "execute", "started_at": "2022-07-29T23:00:38.404452Z"}]}, "unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.vitals_first_day", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.485852Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:00:38.486521", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "unique_id": "model.mimic.weight_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.weight_first_day", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.486616Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.weight_first_day", "index": 9, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:00:38.486521", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "total": 10}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "info", "log_version": 2, "msg": "9 of 10 START table model public.weight_first_day .............................. [RUN]", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.487752Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.488999Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:00:38.486521", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "unique_id": "model.mimic.weight_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.weight_first_day", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.489311Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.weight_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.weight_first_day", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.489515Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.weight_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.492422Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.493580Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "unique_id": "model.mimic.weight_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.weight_first_day", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.494112Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.weight_first_day\""}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.507120Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.508686Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "BEGIN"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: BEGIN", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.509470Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.509681Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.522475Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.523204Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"weight_first_day__dbt_tmp\"\n  as (\n    -- This query extracts weights for adult ICU patients on their first ICU day.\n-- It does *not* use any information after the first ICU day, as weight is\n-- sometimes used to monitor fluid balance.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\nwith ce as\n(\n    SELECT\n      c.icustay_id\n      -- we take the avg value from roughly first day\n      -- TODO: eliminate obvious outliers if there is a reasonable weight\n      -- (e.g. weight of 180kg and 90kg would remove 180kg instead of taking the median)\n      , AVG(VALUENUM) as Weight_Admit\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (762,226512) -- Admit Wt\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n, dwt as\n(\n    SELECT\n      c.icustay_id\n      , AVG(VALUENUM) as Weight_Daily\n    FROM chartevents c\n    INNER JOIN icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (763,224639) -- Daily Weight\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n-- we split in-hospital/out of hospital echoes as we would like to prioritize in-hospital data\n, echo_hadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoInHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ec.hadm_id = ie.hadm_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where\n            ec.HADM_ID is not null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\n, echo_nohadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoPreHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ie.subject_id = ec.subject_id\n        and ie.intime < DATETIME_ADD(ec.charttime, INTERVAL '1' MONTH)\n        and ie.intime > ec.charttime\n    where\n            ec.HADM_ID is null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\nselect\n    ie.icustay_id\n    , round(cast(\n    case\n        when ce.icustay_id is not null\n            then ce.Weight_Admit\n        when dwt.icustay_id is not null\n            then dwt.Weight_Daily\n        when eh.icustay_id is not null\n            then eh.Weight_EchoInHosp\n        when enh.icustay_id is not null\n            then enh.Weight_EchoPreHosp\n        else null end\n        as numeric), 2)\n    as weight\n\n    -- components\n    , ce.weight_admit\n    , dwt.weight_daily\n    , eh.weight_echoinhosp\n    , enh.weight_echoprehosp\n\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\n-- admission weight\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\n-- daily weights\nleft join dwt\n    on ie.icustay_id = dwt.icustay_id\n\n-- in-hospital echo weight\nleft join echo_hadm eh\n    on ie.icustay_id = eh.icustay_id\n\n-- pre-hospitalization echo weights\nleft join echo_nohadm enh\n    on ie.icustay_id = enh.icustay_id\norder by ie.icustay_id\n  );"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"weight_first_day__dbt_tmp\"\n  as (\n    -- This query extracts weights for adult ICU patients on their first ICU day.\n-- It does *not* use any information after the first ICU day, as weight is\n-- sometimes used to monitor fluid balance.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\nwith ce as\n(\n    SELECT\n      c.icustay_id\n      -- we take the avg value from roughly first day\n      -- TODO: eliminate obvious outliers if there is a reasonable weight\n      -- (e.g. weight of 180kg and 90kg would remove 180kg instead of taking the median)\n      , AVG(VALUENUM) as Weight_Admit\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (762,226512) -- Admit Wt\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n, dwt as\n(\n    SELECT\n      c.icustay_id\n      , AVG(VALUENUM) as Weight_Daily\n    FROM chartevents c\n    INNER JOIN icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (763,224639) -- Daily Weight\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n-- we split in-hospital/out of hospital echoes as we would like to prioritize in-hospital data\n, echo_hadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoInHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ec.hadm_id = ie.hadm_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where\n            ec.HADM_ID is not null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\n, echo_nohadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoPreHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ie.subject_id = ec.subject_id\n        and ie.intime < DATETIME_ADD(ec.charttime, INTERVAL '1' MONTH)\n        and ie.intime > ec.charttime\n    where\n            ec.HADM_ID is null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\nselect\n    ie.icustay_id\n    , round(cast(\n    case\n        when ce.icustay_id is not null\n            then ce.Weight_Admit\n        when dwt.icustay_id is not null\n            then dwt.Weight_Daily\n        when eh.icustay_id is not null\n            then eh.Weight_EchoInHosp\n        when enh.icustay_id is not null\n            then enh.Weight_EchoPreHosp\n        else null end\n        as numeric), 2)\n    as weight\n\n    -- components\n    , ce.weight_admit\n    , dwt.weight_daily\n    , eh.weight_echoinhosp\n    , enh.weight_echoprehosp\n\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\n-- admission weight\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\n-- daily weights\nleft join dwt\n    on ie.icustay_id = dwt.icustay_id\n\n-- in-hospital echo weight\nleft join echo_hadm eh\n    on ie.icustay_id = eh.icustay_id\n\n-- pre-hospitalization echo weights\nleft join echo_nohadm enh\n    on ie.icustay_id = enh.icustay_id\norder by ie.icustay_id\n  );", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.524027Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.18, "status": "SELECT 53432"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 53432 in 0.18 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.705018Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.710763Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\nalter table \"mimic\".\"public\".\"weight_first_day\" rename to \"weight_first_day__dbt_backup\""}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\nalter table \"mimic\".\"public\".\"weight_first_day\" rename to \"weight_first_day__dbt_backup\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.711042Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.712095Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.717385Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\nalter table \"mimic\".\"public\".\"weight_first_day__dbt_tmp\" rename to \"weight_first_day\""}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\nalter table \"mimic\".\"public\".\"weight_first_day__dbt_tmp\" rename to \"weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.717652Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.718729Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.weight_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: COMMIT", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.722608Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.722905Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "COMMIT"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: COMMIT", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.723160Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "COMMIT"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.01 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.729707Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.732368Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"weight_first_day__dbt_backup\" cascade"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"weight_first_day__dbt_backup\" cascade", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.732595Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.734973Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.737741Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.weight_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: Close", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.738000Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '1fc17614-c4ac-4308-83ff-170fd628080c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184c54abe0>]}"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1fc17614-c4ac-4308-83ff-170fd628080c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184c54abe0>]}", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.738660Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.weight_first_day", "execution_time": 0, "index": 9, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:00:38.486521", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "status": "SELECT 53432", "total": 10}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "info", "log_version": 2, "msg": "9 of 10 OK created table model public.weight_first_day ......................... [\u001b[32mSELECT 53432\u001b[0m in 0.25s]", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.739375Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:00:38.739897", "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:00:38.486521", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 53432", "code": "SELECT", "rows_affected": 53432}, "agate_table": null, "execution_time": 0.24984216690063477, "failures": null, "message": "SELECT 53432", "node": {"alias": "weight_first_day", "build_path": "target/run/mimic/models/firstday/weight_first_day.sql", "checksum": {"checksum": "61809e0534880d7740cd7d590d3bb52bf1405f76c11092a6a8d3ca26ea8993cf", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/weight_first_day.sql", "compiled_sql": "-- This query extracts weights for adult ICU patients on their first ICU day.\n-- It does *not* use any information after the first ICU day, as weight is\n-- sometimes used to monitor fluid balance.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\nwith ce as\n(\n    SELECT\n      c.icustay_id\n      -- we take the avg value from roughly first day\n      -- TODO: eliminate obvious outliers if there is a reasonable weight\n      -- (e.g. weight of 180kg and 90kg would remove 180kg instead of taking the median)\n      , AVG(VALUENUM) as Weight_Admit\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (762,226512) -- Admit Wt\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n, dwt as\n(\n    SELECT\n      c.icustay_id\n      , AVG(VALUENUM) as Weight_Daily\n    FROM chartevents c\n    INNER JOIN icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (763,224639) -- Daily Weight\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n-- we split in-hospital/out of hospital echoes as we would like to prioritize in-hospital data\n, echo_hadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoInHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ec.hadm_id = ie.hadm_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where\n            ec.HADM_ID is not null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\n, echo_nohadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoPreHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ie.subject_id = ec.subject_id\n        and ie.intime < DATETIME_ADD(ec.charttime, INTERVAL '1' MONTH)\n        and ie.intime > ec.charttime\n    where\n            ec.HADM_ID is null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\nselect\n    ie.icustay_id\n    , round(cast(\n    case\n        when ce.icustay_id is not null\n            then ce.Weight_Admit\n        when dwt.icustay_id is not null\n            then dwt.Weight_Daily\n        when eh.icustay_id is not null\n            then eh.Weight_EchoInHosp\n        when enh.icustay_id is not null\n            then enh.Weight_EchoPreHosp\n        else null end\n        as numeric), 2)\n    as weight\n\n    -- components\n    , ce.weight_admit\n    , dwt.weight_daily\n    , eh.weight_echoinhosp\n    , enh.weight_echoprehosp\n\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\n-- admission weight\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\n-- daily weights\nleft join dwt\n    on ie.icustay_id = dwt.icustay_id\n\n-- in-hospital echo weight\nleft join echo_hadm eh\n    on ie.icustay_id = eh.icustay_id\n\n-- pre-hospitalization echo weights\nleft join echo_nohadm enh\n    on ie.icustay_id = enh.icustay_id\norder by ie.icustay_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.134089, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": ["model.mimic.echo_data", "model.mimic.echo_data"]}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "weight_first_day"], "meta": {}, "name": "weight_first_day", "original_file_path": "models/firstday/weight_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/weight_first_day.sql", "raw_sql": "-- This query extracts weights for adult ICU patients on their first ICU day.\n-- It does *not* use any information after the first ICU day, as weight is\n-- sometimes used to monitor fluid balance.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\nwith ce as\n(\n    SELECT\n      c.icustay_id\n      -- we take the avg value from roughly first day\n      -- TODO: eliminate obvious outliers if there is a reasonable weight\n      -- (e.g. weight of 180kg and 90kg would remove 180kg instead of taking the median)\n      , AVG(VALUENUM) as Weight_Admit\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (762,226512) -- Admit Wt\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n, dwt as\n(\n    SELECT\n      c.icustay_id\n      , AVG(VALUENUM) as Weight_Daily\n    FROM chartevents c\n    INNER JOIN icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (763,224639) -- Daily Weight\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n-- we split in-hospital/out of hospital echoes as we would like to prioritize in-hospital data\n, echo_hadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoInHosp\n    from {{ref('echo_data')}} ec\n    inner join icustays ie\n        on ec.hadm_id = ie.hadm_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where\n            ec.HADM_ID is not null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\n, echo_nohadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoPreHosp\n    from {{ref('echo_data')}} ec\n    inner join icustays ie\n        on ie.subject_id = ec.subject_id\n        and ie.intime < DATETIME_ADD(ec.charttime, INTERVAL '1' MONTH)\n        and ie.intime > ec.charttime\n    where\n            ec.HADM_ID is null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\nselect\n    ie.icustay_id\n    , round(cast(\n    case\n        when ce.icustay_id is not null\n            then ce.Weight_Admit\n        when dwt.icustay_id is not null\n            then dwt.Weight_Daily\n        when eh.icustay_id is not null\n            then eh.Weight_EchoInHosp\n        when enh.icustay_id is not null\n            then enh.Weight_EchoPreHosp\n        else null end\n        as numeric), 2)\n    as weight\n\n    -- components\n    , ce.weight_admit\n    , dwt.weight_daily\n    , eh.weight_echoinhosp\n    , enh.weight_echoprehosp\n\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\n-- admission weight\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\n-- daily weights\nleft join dwt\n    on ie.icustay_id = dwt.icustay_id\n\n-- in-hospital echo weight\nleft join echo_hadm eh\n    on ie.icustay_id = eh.icustay_id\n\n-- pre-hospitalization echo weights\nleft join echo_nohadm enh\n    on ie.icustay_id = enh.icustay_id\norder by ie.icustay_id", "refs": [["echo_data"], ["echo_data"]], "relation_name": "\"mimic\".\"public\".\"weight_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.weight_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:00:38.493527Z", "name": "compile", "started_at": "2022-07-29T23:00:38.489498Z"}, {"completed_at": "2022-07-29T23:00:38.737712Z", "name": "execute", "started_at": "2022-07-29T23:00:38.494476Z"}]}, "unique_id": "model.mimic.weight_first_day"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.weight_first_day", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.740079Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:00:38.740599", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.blood_gas_first_day_arterial", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.740737Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.blood_gas_first_day_arterial", "index": 10, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:00:38.740599", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "total": 10}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "info", "log_version": 2, "msg": "10 of 10 START table model public.blood_gas_first_day_arterial ................. [RUN]", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.741422Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.742555Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:00:38.740599", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.blood_gas_first_day_arterial", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.743066Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.blood_gas_first_day_arterial", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.743351Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.747163Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.747839Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.blood_gas_first_day_arterial", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.748156Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.blood_gas_first_day_arterial\""}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.756308Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.757288Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "BEGIN"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: BEGIN", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.757595Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.757895Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.765928Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.766347Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\n\n\n  create  table \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_tmp\"\n  as (\n    with stg_spo2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- max here is just used to group SpO2 by charttime\n    , max(case when valuenum <= 0 or valuenum > 100 then null else valuenum end) as SpO2\n  FROM chartevents\n  -- o2 sat\n  where ITEMID in\n  (\n    646 -- SpO2\n  , 220277 -- O2 saturation pulseoxymetry\n  )\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg_fio2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- pre-process the FiO2s to ensure they are between 21-100%\n    , max(\n        case\n          when itemid = 223835\n            then case\n              when valuenum > 0 and valuenum <= 1\n                then valuenum * 100\n              -- improperly input data - looks like O2 flow in litres\n              when valuenum > 1 and valuenum < 21\n                then null\n              when valuenum >= 21 and valuenum <= 100\n                then valuenum\n              else null end -- unphysiological\n        when itemid in (3420, 3422)\n        -- all these values are well formatted\n            then valuenum\n        when itemid = 190 and valuenum > 0.20 and valuenum < 1\n        -- well formatted but not in %\n            then valuenum * 100\n      else null end\n    ) as fio2_chartevents\n  FROM chartevents\n  where ITEMID in\n  (\n    3420 -- FiO2\n  , 190 -- FiO2 set\n  , 223835 -- Inspired O2 Fraction (FiO2)\n  , 3422 -- FiO2 [measured]\n  )\n  -- exclude rows marked as error\n  AND (error IS NULL OR error = 0)\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg2 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s1.charttime DESC) as lastRowSpO2\n  , s1.spo2\nfrom \"mimic\".\"public\".\"blood_gas_first_day\" bg\nleft join stg_spo2 s1\n  -- same patient\n  on  bg.icustay_id = s1.icustay_id\n  -- spo2 occurred at most 2 hours before this blood gas\n  and s1.charttime >= DATETIME_SUB(bg.charttime, INTERVAL '2' HOUR)\n  and s1.charttime <= bg.charttime\nwhere bg.po2 is not null\n)\n, stg3 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s2.charttime DESC) as lastRowFiO2\n  , s2.fio2_chartevents\n\n  -- create our specimen prediction\n  ,  1/(1+exp(-(-0.02544\n  +    0.04598 * po2\n  + coalesce(-0.15356 * spo2             , -0.15356 *   97.49420 +    0.13429)\n  + coalesce( 0.00621 * fio2_chartevents ,  0.00621 *   51.49550 +   -0.24958)\n  + coalesce( 0.10559 * hemoglobin       ,  0.10559 *   10.32307 +    0.05954)\n  + coalesce( 0.13251 * so2              ,  0.13251 *   93.66539 +   -0.23172)\n  + coalesce(-0.01511 * pco2             , -0.01511 *   42.08866 +   -0.01630)\n  + coalesce( 0.01480 * fio2             ,  0.01480 *   63.97836 +   -0.31142)\n  + coalesce(-0.00200 * aado2            , -0.00200 *  442.21186 +   -0.01328)\n  + coalesce(-0.03220 * bicarbonate      , -0.03220 *   22.96894 +   -0.06535)\n  + coalesce( 0.05384 * totalco2         ,  0.05384 *   24.72632 +   -0.01405)\n  + coalesce( 0.08202 * lactate          ,  0.08202 *    3.06436 +    0.06038)\n  + coalesce( 0.10956 * ph               ,  0.10956 *    7.36233 +   -0.00617)\n  + coalesce( 0.00848 * o2flow           ,  0.00848 *    7.59362 +   -0.35803)\n  ))) as SPECIMEN_PROB\nfrom stg2 bg\nleft join stg_fio2 s2\n  -- same patient\n  on  bg.icustay_id = s2.icustay_id\n  -- fio2 occurred at most 4 hours before this blood gas\n  and s2.charttime between DATETIME_SUB(bg.charttime, INTERVAL '4' HOUR) and bg.charttime\nwhere bg.lastRowSpO2 = 1 -- only the row with the most recent SpO2 (if no SpO2 found lastRowSpO2 = 1)\n)\n\nselect subject_id, hadm_id,\nicustay_id, charttime\n, specimen -- raw data indicating sample type, only present 80% of the time\n\n-- prediction of specimen for missing data\n, case\n      when SPECIMEN is not null then SPECIMEN\n      when SPECIMEN_PROB > 0.75 then 'ART'\n    else null end as SPECIMEN_PRED\n, specimen_prob\n-- oxygen related parameters\n, so2, spo2 -- note spo2 is FROM chartevents\n, po2, pco2\n, fio2_chartevents, fio2\n, aado2\n-- also calculate AADO2\n, case\n    when  PO2 is not null\n      and pco2 is not null\n      and coalesce(fio2, fio2_chartevents) is not null\n     -- multiple by 100 because FiO2 is in a % but should be a fraction\n      then (coalesce(fio2, fio2_chartevents)/100) * (760 - 47) - (pco2/0.8) - po2\n    else null\n  end as AADO2_calc\n, case\n    when PO2 is not null and coalesce(fio2, fio2_chartevents) is not null\n     -- multiply by 100 because FiO2 is in a % but should be a fraction\n      then 100*PO2/(coalesce(fio2, fio2_chartevents))\n    else null\n  end as PaO2FiO2\n-- acid-base parameters\n, ph, baseexcess\n, bicarbonate, totalco2\n\n-- blood count parameters\n, hematocrit\n, hemoglobin\n, carboxyhemoglobin\n, methemoglobin\n\n-- chemistry\n, chloride, calcium\n, temperature\n, potassium, sodium\n, lactate\n, glucose\n\n-- ventilation stuff that's sometimes input\n, intubated, tidalvolume, ventilationrate, ventilator\n, peep, o2flow\n, requiredo2\n\nfrom stg3\nwhere lastRowFiO2 = 1 -- only the most recent FiO2\n-- restrict it to *only* arterial samples\nand (specimen = 'ART' or specimen_prob > 0.75)\norder by icustay_id, charttime\n  );"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\n\n\n  create  table \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_tmp\"\n  as (\n    with stg_spo2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- max here is just used to group SpO2 by charttime\n    , max(case when valuenum <= 0 or valuenum > 100 then null else valuenum end) as SpO2\n  FROM chartevents\n  -- o2 sat\n  where ITEMID in\n  (\n    646 -- SpO2\n  , 220277 -- O2 saturation pulseoxymetry\n  )\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg_fio2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- pre-process the FiO2s to ensure they are between 21-100%\n    , max(\n        case\n          when itemid = 223835\n            then case\n              when valuenum > 0 and valuenum <= 1\n                then valuenum * 100\n              -- improperly input data - looks like O2 flow in litres\n              when valuenum > 1 and valuenum < 21\n                then null\n              when valuenum >= 21 and valuenum <= 100\n                then valuenum\n              else null end -- unphysiological\n        when itemid in (3420, 3422)\n        -- all these values are well formatted\n            then valuenum\n        when itemid = 190 and valuenum > 0.20 and valuenum < 1\n        -- well formatted but not in %\n            then valuenum * 100\n      else null end\n    ) as fio2_chartevents\n  FROM chartevents\n  where ITEMID in\n  (\n    3420 -- FiO2\n  , 190 -- FiO2 set\n  , 223835 -- Inspired O2 Fraction (FiO2)\n  , 3422 -- FiO2 [measured]\n  )\n  -- exclude rows marked as error\n  AND (error IS NULL OR error = 0)\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg2 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s1.charttime DESC) as lastRowSpO2\n  , s1.spo2\nfrom \"mimic\".\"public\".\"blood_gas_first_day\" bg\nleft join stg_spo2 s1\n  -- same patient\n  on  bg.icustay_id = s1.icustay_id\n  -- spo2 occurred at most 2 hours before this blood gas\n  and s1.charttime >= DATETIME_SUB(bg.charttime, INTERVAL '2' HOUR)\n  and s1.charttime <= bg.charttime\nwhere bg.po2 is not null\n)\n, stg3 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s2.charttime DESC) as lastRowFiO2\n  , s2.fio2_chartevents\n\n  -- create our specimen prediction\n  ,  1/(1+exp(-(-0.02544\n  +    0.04598 * po2\n  + coalesce(-0.15356 * spo2             , -0.15356 *   97.49420 +    0.13429)\n  + coalesce( 0.00621 * fio2_chartevents ,  0.00621 *   51.49550 +   -0.24958)\n  + coalesce( 0.10559 * hemoglobin       ,  0.10559 *   10.32307 +    0.05954)\n  + coalesce( 0.13251 * so2              ,  0.13251 *   93.66539 +   -0.23172)\n  + coalesce(-0.01511 * pco2             , -0.01511 *   42.08866 +   -0.01630)\n  + coalesce( 0.01480 * fio2             ,  0.01480 *   63.97836 +   -0.31142)\n  + coalesce(-0.00200 * aado2            , -0.00200 *  442.21186 +   -0.01328)\n  + coalesce(-0.03220 * bicarbonate      , -0.03220 *   22.96894 +   -0.06535)\n  + coalesce( 0.05384 * totalco2         ,  0.05384 *   24.72632 +   -0.01405)\n  + coalesce( 0.08202 * lactate          ,  0.08202 *    3.06436 +    0.06038)\n  + coalesce( 0.10956 * ph               ,  0.10956 *    7.36233 +   -0.00617)\n  + coalesce( 0.00848 * o2flow           ,  0.00848 *    7.59362 +   -0.35803)\n  ))) as SPECIMEN_PROB\nfrom stg2 bg\nleft join stg_fio2 s2\n  -- same patient\n  on  bg.icustay_id = s2.icustay_id\n  -- fio2 occurred at most 4 hours before this blood gas\n  and s2.charttime between DATETIME_SUB(bg.charttime, INTERVAL '4' HOUR) and bg.charttime\nwhere bg.lastRowSpO2 = 1 -- only the row with the most recent SpO2 (if no SpO2 found lastRowSpO2 = 1)\n)\n\nselect subject_id, hadm_id,\nicustay_id, charttime\n, specimen -- raw data indicating sample type, only present 80% of the time\n\n-- prediction of specimen for missing data\n, case\n      when SPECIMEN is not null then SPECIMEN\n      when SPECIMEN_PROB > 0.75 then 'ART'\n    else null end as SPECIMEN_PRED\n, specimen_prob\n-- oxygen related parameters\n, so2, spo2 -- note spo2 is FROM chartevents\n, po2, pco2\n, fio2_chartevents, fio2\n, aado2\n-- also calculate AADO2\n, case\n    when  PO2 is not null\n      and pco2 is not null\n      and coalesce(fio2, fio2_chartevents) is not null\n     -- multiple by 100 because FiO2 is in a % but should be a fraction\n      then (coalesce(fio2, fio2_chartevents)/100) * (760 - 47) - (pco2/0.8) - po2\n    else null\n  end as AADO2_calc\n, case\n    when PO2 is not null and coalesce(fio2, fio2_chartevents) is not null\n     -- multiply by 100 because FiO2 is in a % but should be a fraction\n      then 100*PO2/(coalesce(fio2, fio2_chartevents))\n    else null\n  end as PaO2FiO2\n-- acid-base parameters\n, ph, baseexcess\n, bicarbonate, totalco2\n\n-- blood count parameters\n, hematocrit\n, hemoglobin\n, carboxyhemoglobin\n, methemoglobin\n\n-- chemistry\n, chloride, calcium\n, temperature\n, potassium, sodium\n, lactate\n, glucose\n\n-- ventilation stuff that's sometimes input\n, intubated, tidalvolume, ventilationrate, ventilator\n, peep, o2flow\n, requiredo2\n\nfrom stg3\nwhere lastRowFiO2 = 1 -- only the most recent FiO2\n-- restrict it to *only* arterial samples\nand (specimen = 'ART' or specimen_prob > 0.75)\norder by icustay_id, charttime\n  );", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.766675Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.03, "status": "SELECT 0"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 0 in 0.03 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.795931Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.804660Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day_arterial\" rename to \"blood_gas_first_day_arterial__dbt_backup\""}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day_arterial\" rename to \"blood_gas_first_day_arterial__dbt_backup\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.804956Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.806133Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.814722Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_tmp\" rename to \"blood_gas_first_day_arterial\""}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_tmp\" rename to \"blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.815220Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.816470Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: COMMIT", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.822550Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.823131Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "COMMIT"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: COMMIT", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.823535Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "COMMIT"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.825872Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.828341Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\ndrop table if exists \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_backup\" cascade"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\ndrop table if exists \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_backup\" cascade", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.828645Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.832678Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.837878Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: Close", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.838593Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '1fc17614-c4ac-4308-83ff-170fd628080c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184c57cfa0>]}"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1fc17614-c4ac-4308-83ff-170fd628080c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184c57cfa0>]}", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.840434Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.blood_gas_first_day_arterial", "execution_time": 0, "index": 10, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:00:38.740599", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "status": "SELECT 0", "total": 10}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "info", "log_version": 2, "msg": "10 of 10 OK created table model public.blood_gas_first_day_arterial ............ [\u001b[32mSELECT 0\u001b[0m in 0.10s]", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.841241Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:00:38.842969", "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:00:38.740599", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "run_result": {"adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0}, "agate_table": null, "execution_time": 0.0980224609375, "failures": null, "message": "SELECT 0", "node": {"alias": "blood_gas_first_day_arterial", "build_path": "target/run/mimic/models/firstday/blood_gas_first_day_arterial.sql", "checksum": {"checksum": "c2e8d35acd151ff031845b14f52bb8ed7954367b6241a32242674dd2931ba17d", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/blood_gas_first_day_arterial.sql", "compiled_sql": "with stg_spo2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- max here is just used to group SpO2 by charttime\n    , max(case when valuenum <= 0 or valuenum > 100 then null else valuenum end) as SpO2\n  FROM chartevents\n  -- o2 sat\n  where ITEMID in\n  (\n    646 -- SpO2\n  , 220277 -- O2 saturation pulseoxymetry\n  )\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg_fio2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- pre-process the FiO2s to ensure they are between 21-100%\n    , max(\n        case\n          when itemid = 223835\n            then case\n              when valuenum > 0 and valuenum <= 1\n                then valuenum * 100\n              -- improperly input data - looks like O2 flow in litres\n              when valuenum > 1 and valuenum < 21\n                then null\n              when valuenum >= 21 and valuenum <= 100\n                then valuenum\n              else null end -- unphysiological\n        when itemid in (3420, 3422)\n        -- all these values are well formatted\n            then valuenum\n        when itemid = 190 and valuenum > 0.20 and valuenum < 1\n        -- well formatted but not in %\n            then valuenum * 100\n      else null end\n    ) as fio2_chartevents\n  FROM chartevents\n  where ITEMID in\n  (\n    3420 -- FiO2\n  , 190 -- FiO2 set\n  , 223835 -- Inspired O2 Fraction (FiO2)\n  , 3422 -- FiO2 [measured]\n  )\n  -- exclude rows marked as error\n  AND (error IS NULL OR error = 0)\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg2 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s1.charttime DESC) as lastRowSpO2\n  , s1.spo2\nfrom \"mimic\".\"public\".\"blood_gas_first_day\" bg\nleft join stg_spo2 s1\n  -- same patient\n  on  bg.icustay_id = s1.icustay_id\n  -- spo2 occurred at most 2 hours before this blood gas\n  and s1.charttime >= DATETIME_SUB(bg.charttime, INTERVAL '2' HOUR)\n  and s1.charttime <= bg.charttime\nwhere bg.po2 is not null\n)\n, stg3 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s2.charttime DESC) as lastRowFiO2\n  , s2.fio2_chartevents\n\n  -- create our specimen prediction\n  ,  1/(1+exp(-(-0.02544\n  +    0.04598 * po2\n  + coalesce(-0.15356 * spo2             , -0.15356 *   97.49420 +    0.13429)\n  + coalesce( 0.00621 * fio2_chartevents ,  0.00621 *   51.49550 +   -0.24958)\n  + coalesce( 0.10559 * hemoglobin       ,  0.10559 *   10.32307 +    0.05954)\n  + coalesce( 0.13251 * so2              ,  0.13251 *   93.66539 +   -0.23172)\n  + coalesce(-0.01511 * pco2             , -0.01511 *   42.08866 +   -0.01630)\n  + coalesce( 0.01480 * fio2             ,  0.01480 *   63.97836 +   -0.31142)\n  + coalesce(-0.00200 * aado2            , -0.00200 *  442.21186 +   -0.01328)\n  + coalesce(-0.03220 * bicarbonate      , -0.03220 *   22.96894 +   -0.06535)\n  + coalesce( 0.05384 * totalco2         ,  0.05384 *   24.72632 +   -0.01405)\n  + coalesce( 0.08202 * lactate          ,  0.08202 *    3.06436 +    0.06038)\n  + coalesce( 0.10956 * ph               ,  0.10956 *    7.36233 +   -0.00617)\n  + coalesce( 0.00848 * o2flow           ,  0.00848 *    7.59362 +   -0.35803)\n  ))) as SPECIMEN_PROB\nfrom stg2 bg\nleft join stg_fio2 s2\n  -- same patient\n  on  bg.icustay_id = s2.icustay_id\n  -- fio2 occurred at most 4 hours before this blood gas\n  and s2.charttime between DATETIME_SUB(bg.charttime, INTERVAL '4' HOUR) and bg.charttime\nwhere bg.lastRowSpO2 = 1 -- only the row with the most recent SpO2 (if no SpO2 found lastRowSpO2 = 1)\n)\n\nselect subject_id, hadm_id,\nicustay_id, charttime\n, specimen -- raw data indicating sample type, only present 80% of the time\n\n-- prediction of specimen for missing data\n, case\n      when SPECIMEN is not null then SPECIMEN\n      when SPECIMEN_PROB > 0.75 then 'ART'\n    else null end as SPECIMEN_PRED\n, specimen_prob\n-- oxygen related parameters\n, so2, spo2 -- note spo2 is FROM chartevents\n, po2, pco2\n, fio2_chartevents, fio2\n, aado2\n-- also calculate AADO2\n, case\n    when  PO2 is not null\n      and pco2 is not null\n      and coalesce(fio2, fio2_chartevents) is not null\n     -- multiple by 100 because FiO2 is in a % but should be a fraction\n      then (coalesce(fio2, fio2_chartevents)/100) * (760 - 47) - (pco2/0.8) - po2\n    else null\n  end as AADO2_calc\n, case\n    when PO2 is not null and coalesce(fio2, fio2_chartevents) is not null\n     -- multiply by 100 because FiO2 is in a % but should be a fraction\n      then 100*PO2/(coalesce(fio2, fio2_chartevents))\n    else null\n  end as PaO2FiO2\n-- acid-base parameters\n, ph, baseexcess\n, bicarbonate, totalco2\n\n-- blood count parameters\n, hematocrit\n, hemoglobin\n, carboxyhemoglobin\n, methemoglobin\n\n-- chemistry\n, chloride, calcium\n, temperature\n, potassium, sodium\n, lactate\n, glucose\n\n-- ventilation stuff that's sometimes input\n, intubated, tidalvolume, ventilationrate, ventilator\n, peep, o2flow\n, requiredo2\n\nfrom stg3\nwhere lastRowFiO2 = 1 -- only the most recent FiO2\n-- restrict it to *only* arterial samples\nand (specimen = 'ART' or specimen_prob > 0.75)\norder by icustay_id, charttime", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.1186428, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": ["model.mimic.blood_gas_first_day"]}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "blood_gas_first_day_arterial"], "meta": {}, "name": "blood_gas_first_day_arterial", "original_file_path": "models/firstday/blood_gas_first_day_arterial.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/blood_gas_first_day_arterial.sql", "raw_sql": "with stg_spo2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- max here is just used to group SpO2 by charttime\n    , max(case when valuenum <= 0 or valuenum > 100 then null else valuenum end) as SpO2\n  FROM chartevents\n  -- o2 sat\n  where ITEMID in\n  (\n    646 -- SpO2\n  , 220277 -- O2 saturation pulseoxymetry\n  )\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg_fio2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- pre-process the FiO2s to ensure they are between 21-100%\n    , max(\n        case\n          when itemid = 223835\n            then case\n              when valuenum > 0 and valuenum <= 1\n                then valuenum * 100\n              -- improperly input data - looks like O2 flow in litres\n              when valuenum > 1 and valuenum < 21\n                then null\n              when valuenum >= 21 and valuenum <= 100\n                then valuenum\n              else null end -- unphysiological\n        when itemid in (3420, 3422)\n        -- all these values are well formatted\n            then valuenum\n        when itemid = 190 and valuenum > 0.20 and valuenum < 1\n        -- well formatted but not in %\n            then valuenum * 100\n      else null end\n    ) as fio2_chartevents\n  FROM chartevents\n  where ITEMID in\n  (\n    3420 -- FiO2\n  , 190 -- FiO2 set\n  , 223835 -- Inspired O2 Fraction (FiO2)\n  , 3422 -- FiO2 [measured]\n  )\n  -- exclude rows marked as error\n  AND (error IS NULL OR error = 0)\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg2 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s1.charttime DESC) as lastRowSpO2\n  , s1.spo2\nfrom {{ref('blood_gas_first_day')}} bg\nleft join stg_spo2 s1\n  -- same patient\n  on  bg.icustay_id = s1.icustay_id\n  -- spo2 occurred at most 2 hours before this blood gas\n  and s1.charttime >= DATETIME_SUB(bg.charttime, INTERVAL '2' HOUR)\n  and s1.charttime <= bg.charttime\nwhere bg.po2 is not null\n)\n, stg3 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s2.charttime DESC) as lastRowFiO2\n  , s2.fio2_chartevents\n\n  -- create our specimen prediction\n  ,  1/(1+exp(-(-0.02544\n  +    0.04598 * po2\n  + coalesce(-0.15356 * spo2             , -0.15356 *   97.49420 +    0.13429)\n  + coalesce( 0.00621 * fio2_chartevents ,  0.00621 *   51.49550 +   -0.24958)\n  + coalesce( 0.10559 * hemoglobin       ,  0.10559 *   10.32307 +    0.05954)\n  + coalesce( 0.13251 * so2              ,  0.13251 *   93.66539 +   -0.23172)\n  + coalesce(-0.01511 * pco2             , -0.01511 *   42.08866 +   -0.01630)\n  + coalesce( 0.01480 * fio2             ,  0.01480 *   63.97836 +   -0.31142)\n  + coalesce(-0.00200 * aado2            , -0.00200 *  442.21186 +   -0.01328)\n  + coalesce(-0.03220 * bicarbonate      , -0.03220 *   22.96894 +   -0.06535)\n  + coalesce( 0.05384 * totalco2         ,  0.05384 *   24.72632 +   -0.01405)\n  + coalesce( 0.08202 * lactate          ,  0.08202 *    3.06436 +    0.06038)\n  + coalesce( 0.10956 * ph               ,  0.10956 *    7.36233 +   -0.00617)\n  + coalesce( 0.00848 * o2flow           ,  0.00848 *    7.59362 +   -0.35803)\n  ))) as SPECIMEN_PROB\nfrom stg2 bg\nleft join stg_fio2 s2\n  -- same patient\n  on  bg.icustay_id = s2.icustay_id\n  -- fio2 occurred at most 4 hours before this blood gas\n  and s2.charttime between DATETIME_SUB(bg.charttime, INTERVAL '4' HOUR) and bg.charttime\nwhere bg.lastRowSpO2 = 1 -- only the row with the most recent SpO2 (if no SpO2 found lastRowSpO2 = 1)\n)\n\nselect subject_id, hadm_id,\nicustay_id, charttime\n, specimen -- raw data indicating sample type, only present 80% of the time\n\n-- prediction of specimen for missing data\n, case\n      when SPECIMEN is not null then SPECIMEN\n      when SPECIMEN_PROB > 0.75 then 'ART'\n    else null end as SPECIMEN_PRED\n, specimen_prob\n-- oxygen related parameters\n, so2, spo2 -- note spo2 is FROM chartevents\n, po2, pco2\n, fio2_chartevents, fio2\n, aado2\n-- also calculate AADO2\n, case\n    when  PO2 is not null\n      and pco2 is not null\n      and coalesce(fio2, fio2_chartevents) is not null\n     -- multiple by 100 because FiO2 is in a % but should be a fraction\n      then (coalesce(fio2, fio2_chartevents)/100) * (760 - 47) - (pco2/0.8) - po2\n    else null\n  end as AADO2_calc\n, case\n    when PO2 is not null and coalesce(fio2, fio2_chartevents) is not null\n     -- multiply by 100 because FiO2 is in a % but should be a fraction\n      then 100*PO2/(coalesce(fio2, fio2_chartevents))\n    else null\n  end as PaO2FiO2\n-- acid-base parameters\n, ph, baseexcess\n, bicarbonate, totalco2\n\n-- blood count parameters\n, hematocrit\n, hemoglobin\n, carboxyhemoglobin\n, methemoglobin\n\n-- chemistry\n, chloride, calcium\n, temperature\n, potassium, sodium\n, lactate\n, glucose\n\n-- ventilation stuff that's sometimes input\n, intubated, tidalvolume, ventilationrate, ventilator\n, peep, o2flow\n, requiredo2\n\nfrom stg3\nwhere lastRowFiO2 = 1 -- only the most recent FiO2\n-- restrict it to *only* arterial samples\nand (specimen = 'ART' or specimen_prob > 0.75)\norder by icustay_id, charttime", "refs": [["blood_gas_first_day"]], "relation_name": "\"mimic\".\"public\".\"blood_gas_first_day_arterial\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.blood_gas_first_day_arterial", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:00:38.747772Z", "name": "compile", "started_at": "2022-07-29T23:00:38.743334Z"}, {"completed_at": "2022-07-29T23:00:38.837657Z", "name": "execute", "started_at": "2022-07-29T23:00:38.748433Z"}]}, "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.blood_gas_first_day_arterial", "pid": 64548, "thread_name": "Thread-1", "ts": "2022-07-29T23:00:38.843351Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"master\"", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.847206Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"master\"", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.847659Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "master", "sql": "BEGIN"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On master: BEGIN", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.847988Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.848158Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.859189Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "master"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On master: COMMIT", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.859615Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"master\"", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.860047Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "master", "sql": "COMMIT"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On master: COMMIT", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.860272Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "COMMIT"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.0 seconds", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.860868Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "master"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "On master: Close", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.861327Z", "type": "log_line"}
{"code": "E040", "data": {"execution": " in 8.93s", "stat_line": "10 table models"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "info", "log_version": 2, "msg": "Finished running 10 table models in 8.93s.", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.862540Z", "type": "log_line"}
{"code": "E008", "data": {"conn_name": "master"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Connection 'master' was properly closed.", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.863308Z", "type": "log_line"}
{"code": "E008", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Connection 'model.mimic.blood_gas_first_day_arterial' was properly closed.", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.863541Z", "type": "log_line"}
{"code": "Z030", "data": {"keyboard_interrupt": false, "num_errors": 0, "num_warnings": 0}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "info", "log_version": 2, "msg": "\u001b[32mCompleted successfully\u001b[0m", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.888224Z", "type": "log_line"}
{"code": "Z023", "data": {"stats": {"error": 0, "pass": 10, "skip": 0, "total": 10, "warn": 0}}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "info", "log_version": 2, "msg": "Done. PASS=10 WARN=0 ERROR=0 SKIP=0 TOTAL=10", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.888922Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1853823e80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184c564f40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184e86c2e0>]}"}, "invocation_id": "1fc17614-c4ac-4308-83ff-170fd628080c", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1853823e80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184c564f40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f184e86c2e0>]}", "pid": 64548, "thread_name": "MainThread", "ts": "2022-07-29T23:00:38.889578Z", "type": "log_line"}
{"code": "A001", "data": {"v": "=1.1.1"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "Running with dbt=1.1.1", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.139762Z", "type": "log_line"}
{"code": "A002", "data": {"args": {"event_buffer_size": 100000, "indirect_selection": "eager", "log_format": "json", "no_print": false, "partial_parse": true, "printer_width": 80, "profiles_dir": "/home/ceci/.dbt", "quiet": false, "rpc_method": "run", "select": ["firstday"], "send_anonymous_usage_stats": true, "static_parser": true, "use_colors": true, "version_check": true, "which": "run", "write_json": true}}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "running dbt with arguments {'log_format': 'json', 'write_json': True, 'use_colors': True, 'printer_width': 80, 'version_check': True, 'partial_parse': True, 'static_parser': True, 'profiles_dir': '/home/ceci/.dbt', 'send_anonymous_usage_stats': True, 'event_buffer_size': 100000, 'quiet': False, 'no_print': False, 'select': ['firstday'], 'which': 'run', 'rpc_method': 'run', 'indirect_selection': 'eager'}", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.140555Z", "type": "log_line"}
{"code": "A003", "data": {"user_state": "tracking"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Tracking: tracking", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.141197Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddbbcd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddbb3d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddbbeb0>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddbbcd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddbb3d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddbbeb0>]}", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.148625Z", "type": "log_line"}
{"code": "I040", "data": {"added": 0, "changed": 0, "deleted": 0}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.312743Z", "type": "log_line"}
{"code": "I017", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Partial parsing enabled, no changes found, skipping parsing", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.313026Z", "type": "log_line"}
{"code": "Z046", "data": {"log_fmt": "[\u001b[33mWARNING\u001b[0m]: {}", "msg": "Configuration paths exist in your dbt_project.yml file which do not apply to any resources.\nThere are 2 unused configuration paths:\n- models.mimic.example\n- models.mimic.diagnosis\n"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "warn", "log_version": 2, "msg": "[\u001b[33mWARNING\u001b[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.\nThere are 2 unused configuration paths:\n- models.mimic.example\n- models.mimic.diagnosis\n", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.315530Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'load_project', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5db15fd0>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5db15fd0>]}", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.323631Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'resource_counts', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5f5ca910>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5f5ca910>]}", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.346103Z", "type": "log_line"}
{"code": "W006", "data": {"stat_line": "107 models, 0 tests, 0 snapshots, 0 analyses, 167 macros, 0 operations, 0 seed files, 0 sources, 0 exposures, 0 metrics"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "Found 107 models, 0 tests, 0 snapshots, 0 analyses, 167 macros, 0 operations, 0 seed files, 0 sources, 0 exposures, 0 metrics", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.346992Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'runnable_timing', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5f5ca490>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5f5ca490>]}", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.347915Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"master\"", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.352481Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "list_mimic", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"list_mimic\"", "pid": 64737, "thread_name": "ThreadPoolExecutor-0_0", "ts": "2022-07-29T23:01:19.356287Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "list_mimic", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"list_mimic\"", "pid": 64737, "thread_name": "ThreadPoolExecutor-0_0", "ts": "2022-07-29T23:01:19.368086Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "list_mimic", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"connection_name\": \"list_mimic\"} */\n\n    select distinct nspname from pg_namespace\n  "}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On list_mimic: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"connection_name\": \"list_mimic\"} */\n\n    select distinct nspname from pg_namespace\n  ", "pid": 64737, "thread_name": "ThreadPoolExecutor-0_0", "ts": "2022-07-29T23:01:19.368856Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "init"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state init", "pid": 64737, "thread_name": "ThreadPoolExecutor-0_0", "ts": "2022-07-29T23:01:19.369052Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "SELECT 6"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 6 in 0.01 seconds", "pid": 64737, "thread_name": "ThreadPoolExecutor-0_0", "ts": "2022-07-29T23:01:19.382445Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "list_mimic"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On list_mimic: Close", "pid": 64737, "thread_name": "ThreadPoolExecutor-0_0", "ts": "2022-07-29T23:01:19.393870Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "list_mimic_public", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"list_mimic_public\"", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.405223Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "list_mimic_public", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"list_mimic_public\"", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.418591Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "list_mimic_public", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On list_mimic_public: BEGIN", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.418896Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.419365Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.431891Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "list_mimic_public", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"list_mimic_public\"", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.432554Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "list_mimic_public", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"connection_name\": \"list_mimic_public\"} */\nselect\n      'mimic' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike 'public'\n    union all\n    select\n      'mimic' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike 'public'\n  "}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On list_mimic_public: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"connection_name\": \"list_mimic_public\"} */\nselect\n      'mimic' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike 'public'\n    union all\n    select\n      'mimic' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike 'public'\n  ", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.433283Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "SELECT 338"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 338 in 0.01 seconds", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.440483Z", "type": "log_line"}
{"code": "E012", "data": {"conn_name": "list_mimic_public"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On list_mimic_public: ROLLBACK", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.452146Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "list_mimic_public"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On list_mimic_public: Close", "pid": 64737, "thread_name": "ThreadPoolExecutor-1_0", "ts": "2022-07-29T23:01:19.452742Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"master\"", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.472288Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "master", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: BEGIN", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.472639Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "init"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state init", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.472883Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.482115Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"master\"", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.482502Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "master", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"connection_name\": \"master\"} */\nwith relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select distinct\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"connection_name\": \"master\"} */\nwith relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select distinct\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.482747Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "SELECT 0"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 0 in 0.0 seconds", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.486848Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'runnable_timing', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5dd7e910>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5dd7e910>]}", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.490829Z", "type": "log_line"}
{"code": "E012", "data": {"conn_name": "master"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: ROLLBACK", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.491288Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"master\"", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.491932Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "master", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: BEGIN", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.492281Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.0 seconds", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.492981Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "master"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: COMMIT", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.493336Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"master\"", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.493514Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "master", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: COMMIT", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.493650Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.0 seconds", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.494326Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "master"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: Close", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.494638Z", "type": "log_line"}
{"code": "Q026", "data": {"num_threads": 1, "target_name": "dev"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "Concurrency: 1 threads (target='dev')", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:19.495415Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day", "node_path": "firstday/blood_gas_first_day.sql", "node_started_at": "2022-07-29T23:01:19.499465", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day"}, "unique_id": "model.mimic.blood_gas_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.blood_gas_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.499532Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.blood_gas_first_day", "index": 1, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day", "node_path": "firstday/blood_gas_first_day.sql", "node_started_at": "2022-07-29T23:01:19.499465", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "1 of 10 START table model public.blood_gas_first_day ........................... [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.500037Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.blood_gas_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.500773Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day", "node_path": "firstday/blood_gas_first_day.sql", "node_started_at": "2022-07-29T23:01:19.499465", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day"}, "unique_id": "model.mimic.blood_gas_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.blood_gas_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.500944Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.blood_gas_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.blood_gas_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.501119Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.blood_gas_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.502918Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.503544Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day", "node_path": "firstday/blood_gas_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day"}, "unique_id": "model.mimic.blood_gas_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.blood_gas_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.503817Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.blood_gas_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.547027Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.548075Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.548355Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.548515Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.557370Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.558005Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"blood_gas_first_day__dbt_tmp\"\n  as (\n    -- The aim of this query is to pivot entries related to blood gases and\n-- chemistry values which were found in LABEVENTS\n\n-- things to check:\n--  when a mixed venous/arterial blood sample are taken at the same time, is the store time different?\n\nwith pvt as\n( -- begin query that extracts the data\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- here we assign labels to ITEMIDs\n  -- this also fuses together multiple ITEMIDs containing the same data\n      , case\n        when itemid = 50800 then 'SPECIMEN'\n        when itemid = 50801 then 'AADO2'\n        when itemid = 50802 then 'BASEEXCESS'\n        when itemid = 50803 then 'BICARBONATE'\n        when itemid = 50804 then 'TOTALCO2'\n        when itemid = 50805 then 'CARBOXYHEMOGLOBIN'\n        when itemid = 50806 then 'CHLORIDE'\n        when itemid = 50808 then 'CALCIUM'\n        when itemid = 50809 then 'GLUCOSE'\n        when itemid = 50810 then 'HEMATOCRIT'\n        when itemid = 50811 then 'HEMOGLOBIN'\n        when itemid = 50812 then 'INTUBATED'\n        when itemid = 50813 then 'LACTATE'\n        when itemid = 50814 then 'METHEMOGLOBIN'\n        when itemid = 50815 then 'O2FLOW'\n        when itemid = 50816 then 'FIO2'\n        when itemid = 50817 then 'SO2' -- OXYGENSATURATION\n        when itemid = 50818 then 'PCO2'\n        when itemid = 50819 then 'PEEP'\n        when itemid = 50820 then 'PH'\n        when itemid = 50821 then 'PO2'\n        when itemid = 50822 then 'POTASSIUM'\n        when itemid = 50823 then 'REQUIREDO2'\n        when itemid = 50824 then 'SODIUM'\n        when itemid = 50825 then 'TEMPERATURE'\n        when itemid = 50826 then 'TIDALVOLUME'\n        when itemid = 50827 then 'VENTILATIONRATE'\n        when itemid = 50828 then 'VENTILATOR'\n        else null\n        end as label\n        , charttime\n        , value\n        -- add in some sanity checks on the values\n        , case\n          when valuenum <= 0 and itemid != 50802 then null -- allow negative baseexcess\n          when itemid = 50810 and valuenum > 100 then null -- hematocrit\n          -- ensure FiO2 is a valid number between 21-100\n          -- mistakes are rare (<100 obs out of ~100,000)\n          -- there are 862 obs of valuenum == 20 - some people round down!\n          -- rather than risk imputing garbage data for FiO2, we simply NULL invalid values\n          when itemid = 50816 and valuenum < 20 then null\n          when itemid = 50816 and valuenum > 100 then null\n          when itemid = 50817 and valuenum > 100 then null -- O2 sat\n          when itemid = 50815 and valuenum >  70 then null -- O2 flow\n          when itemid = 50821 and valuenum > 800 then null -- PO2\n           -- conservative upper limit\n        else valuenum\n        end as valuenum\n\n    FROM icustays ie\n    left join labevents le\n      on le.subject_id = ie.subject_id and le.hadm_id = ie.hadm_id\n      and le.charttime between (DATETIME_SUB(ie.intime, INTERVAL '6' HOUR)) and (DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n      and le.ITEMID in\n      -- blood gases\n      (\n        50800, 50801, 50802, 50803, 50804, 50805, 50806, 50807, 50808, 50809\n        , 50810, 50811, 50812, 50813, 50814, 50815, 50816, 50817, 50818, 50819\n        , 50820, 50821, 50822, 50823, 50824, 50825, 50826, 50827, 50828\n        , 51545\n      )\n)\nselect pvt.SUBJECT_ID, pvt.HADM_ID, pvt.ICUSTAY_ID, pvt.CHARTTIME\n, max(case when label = 'SPECIMEN' then value else null end) as specimen\n, max(case when label = 'AADO2' then valuenum else null end) as aado2\n, max(case when label = 'BASEEXCESS' then valuenum else null end) as baseexcess\n, max(case when label = 'BICARBONATE' then valuenum else null end) as bicarbonate\n, max(case when label = 'TOTALCO2' then valuenum else null end) as totalco2\n, max(case when label = 'CARBOXYHEMOGLOBIN' then valuenum else null end) as carboxyhemoglobin\n, max(case when label = 'CHLORIDE' then valuenum else null end) as chloride\n, max(case when label = 'CALCIUM' then valuenum else null end) as calcium\n, max(case when label = 'GLUCOSE' then valuenum else null end) as glucose\n, max(case when label = 'HEMATOCRIT' then valuenum else null end) as hematocrit\n, max(case when label = 'HEMOGLOBIN' then valuenum else null end) as hemoglobin\n, max(case when label = 'INTUBATED' then valuenum else null end) as intubated\n, max(case when label = 'LACTATE' then valuenum else null end) as lactate\n, max(case when label = 'METHEMOGLOBIN' then valuenum else null end) as methemoglobin\n, max(case when label = 'O2FLOW' then valuenum else null end) as o2flow\n, max(case when label = 'FIO2' then valuenum else null end) as fio2\n, max(case when label = 'SO2' then valuenum else null end) as so2 -- OXYGENSATURATION\n, max(case when label = 'PCO2' then valuenum else null end) as pco2\n, max(case when label = 'PEEP' then valuenum else null end) as peep\n, max(case when label = 'PH' then valuenum else null end) as ph\n, max(case when label = 'PO2' then valuenum else null end) as po2\n, max(case when label = 'POTASSIUM' then valuenum else null end) as potassium\n, max(case when label = 'REQUIREDO2' then valuenum else null end) as requiredo2\n, max(case when label = 'SODIUM' then valuenum else null end) as sodium\n, max(case when label = 'TEMPERATURE' then valuenum else null end) as temperature\n, max(case when label = 'TIDALVOLUME' then valuenum else null end) as tidalvolume\n, max(case when label = 'VENTILATIONRATE' then valuenum else null end) as ventilationrate\n, max(case when label = 'VENTILATOR' then valuenum else null end) as ventilator\nfrom pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id, pvt.CHARTTIME\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id, pvt.CHARTTIME\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"blood_gas_first_day__dbt_tmp\"\n  as (\n    -- The aim of this query is to pivot entries related to blood gases and\n-- chemistry values which were found in LABEVENTS\n\n-- things to check:\n--  when a mixed venous/arterial blood sample are taken at the same time, is the store time different?\n\nwith pvt as\n( -- begin query that extracts the data\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- here we assign labels to ITEMIDs\n  -- this also fuses together multiple ITEMIDs containing the same data\n      , case\n        when itemid = 50800 then 'SPECIMEN'\n        when itemid = 50801 then 'AADO2'\n        when itemid = 50802 then 'BASEEXCESS'\n        when itemid = 50803 then 'BICARBONATE'\n        when itemid = 50804 then 'TOTALCO2'\n        when itemid = 50805 then 'CARBOXYHEMOGLOBIN'\n        when itemid = 50806 then 'CHLORIDE'\n        when itemid = 50808 then 'CALCIUM'\n        when itemid = 50809 then 'GLUCOSE'\n        when itemid = 50810 then 'HEMATOCRIT'\n        when itemid = 50811 then 'HEMOGLOBIN'\n        when itemid = 50812 then 'INTUBATED'\n        when itemid = 50813 then 'LACTATE'\n        when itemid = 50814 then 'METHEMOGLOBIN'\n        when itemid = 50815 then 'O2FLOW'\n        when itemid = 50816 then 'FIO2'\n        when itemid = 50817 then 'SO2' -- OXYGENSATURATION\n        when itemid = 50818 then 'PCO2'\n        when itemid = 50819 then 'PEEP'\n        when itemid = 50820 then 'PH'\n        when itemid = 50821 then 'PO2'\n        when itemid = 50822 then 'POTASSIUM'\n        when itemid = 50823 then 'REQUIREDO2'\n        when itemid = 50824 then 'SODIUM'\n        when itemid = 50825 then 'TEMPERATURE'\n        when itemid = 50826 then 'TIDALVOLUME'\n        when itemid = 50827 then 'VENTILATIONRATE'\n        when itemid = 50828 then 'VENTILATOR'\n        else null\n        end as label\n        , charttime\n        , value\n        -- add in some sanity checks on the values\n        , case\n          when valuenum <= 0 and itemid != 50802 then null -- allow negative baseexcess\n          when itemid = 50810 and valuenum > 100 then null -- hematocrit\n          -- ensure FiO2 is a valid number between 21-100\n          -- mistakes are rare (<100 obs out of ~100,000)\n          -- there are 862 obs of valuenum == 20 - some people round down!\n          -- rather than risk imputing garbage data for FiO2, we simply NULL invalid values\n          when itemid = 50816 and valuenum < 20 then null\n          when itemid = 50816 and valuenum > 100 then null\n          when itemid = 50817 and valuenum > 100 then null -- O2 sat\n          when itemid = 50815 and valuenum >  70 then null -- O2 flow\n          when itemid = 50821 and valuenum > 800 then null -- PO2\n           -- conservative upper limit\n        else valuenum\n        end as valuenum\n\n    FROM icustays ie\n    left join labevents le\n      on le.subject_id = ie.subject_id and le.hadm_id = ie.hadm_id\n      and le.charttime between (DATETIME_SUB(ie.intime, INTERVAL '6' HOUR)) and (DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n      and le.ITEMID in\n      -- blood gases\n      (\n        50800, 50801, 50802, 50803, 50804, 50805, 50806, 50807, 50808, 50809\n        , 50810, 50811, 50812, 50813, 50814, 50815, 50816, 50817, 50818, 50819\n        , 50820, 50821, 50822, 50823, 50824, 50825, 50826, 50827, 50828\n        , 51545\n      )\n)\nselect pvt.SUBJECT_ID, pvt.HADM_ID, pvt.ICUSTAY_ID, pvt.CHARTTIME\n, max(case when label = 'SPECIMEN' then value else null end) as specimen\n, max(case when label = 'AADO2' then valuenum else null end) as aado2\n, max(case when label = 'BASEEXCESS' then valuenum else null end) as baseexcess\n, max(case when label = 'BICARBONATE' then valuenum else null end) as bicarbonate\n, max(case when label = 'TOTALCO2' then valuenum else null end) as totalco2\n, max(case when label = 'CARBOXYHEMOGLOBIN' then valuenum else null end) as carboxyhemoglobin\n, max(case when label = 'CHLORIDE' then valuenum else null end) as chloride\n, max(case when label = 'CALCIUM' then valuenum else null end) as calcium\n, max(case when label = 'GLUCOSE' then valuenum else null end) as glucose\n, max(case when label = 'HEMATOCRIT' then valuenum else null end) as hematocrit\n, max(case when label = 'HEMOGLOBIN' then valuenum else null end) as hemoglobin\n, max(case when label = 'INTUBATED' then valuenum else null end) as intubated\n, max(case when label = 'LACTATE' then valuenum else null end) as lactate\n, max(case when label = 'METHEMOGLOBIN' then valuenum else null end) as methemoglobin\n, max(case when label = 'O2FLOW' then valuenum else null end) as o2flow\n, max(case when label = 'FIO2' then valuenum else null end) as fio2\n, max(case when label = 'SO2' then valuenum else null end) as so2 -- OXYGENSATURATION\n, max(case when label = 'PCO2' then valuenum else null end) as pco2\n, max(case when label = 'PEEP' then valuenum else null end) as peep\n, max(case when label = 'PH' then valuenum else null end) as ph\n, max(case when label = 'PO2' then valuenum else null end) as po2\n, max(case when label = 'POTASSIUM' then valuenum else null end) as potassium\n, max(case when label = 'REQUIREDO2' then valuenum else null end) as requiredo2\n, max(case when label = 'SODIUM' then valuenum else null end) as sodium\n, max(case when label = 'TEMPERATURE' then valuenum else null end) as temperature\n, max(case when label = 'TIDALVOLUME' then valuenum else null end) as tidalvolume\n, max(case when label = 'VENTILATIONRATE' then valuenum else null end) as ventilationrate\n, max(case when label = 'VENTILATOR' then valuenum else null end) as ventilator\nfrom pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id, pvt.CHARTTIME\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id, pvt.CHARTTIME\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.558462Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.17, "status": "SELECT 61532"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 61532 in 0.17 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.725121Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.736783Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day\" rename to \"blood_gas_first_day__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day\" rename to \"blood_gas_first_day__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.737031Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.737947Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.741585Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day__dbt_tmp\" rename to \"blood_gas_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day__dbt_tmp\" rename to \"blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.741956Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.742842Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.blood_gas_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.752918Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.753168Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.753396Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.760670Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.767302Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"blood_gas_first_day__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"blood_gas_first_day__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.767563Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.770315Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.773107Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.blood_gas_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.773398Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2e33a0>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2e33a0>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.774240Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.blood_gas_first_day", "execution_time": 0, "index": 1, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day", "node_path": "firstday/blood_gas_first_day.sql", "node_started_at": "2022-07-29T23:01:19.499465", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day"}, "status": "SELECT 61532", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "1 of 10 OK created table model public.blood_gas_first_day ...................... [\u001b[32mSELECT 61532\u001b[0m in 0.27s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.774771Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:19.775232", "node_name": "blood_gas_first_day", "node_path": "firstday/blood_gas_first_day.sql", "node_started_at": "2022-07-29T23:01:19.499465", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 61532", "code": "SELECT", "rows_affected": 61532}, "agate_table": null, "execution_time": 0.27367115020751953, "failures": null, "message": "SELECT 61532", "node": {"alias": "blood_gas_first_day", "build_path": "target/run/mimic/models/firstday/blood_gas_first_day.sql", "checksum": {"checksum": "35567eeef9fd84231bfcb7dce518c41a9ea48fa42608880536058f53e7ddca67", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/blood_gas_first_day.sql", "compiled_sql": "-- The aim of this query is to pivot entries related to blood gases and\n-- chemistry values which were found in LABEVENTS\n\n-- things to check:\n--  when a mixed venous/arterial blood sample are taken at the same time, is the store time different?\n\nwith pvt as\n( -- begin query that extracts the data\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- here we assign labels to ITEMIDs\n  -- this also fuses together multiple ITEMIDs containing the same data\n      , case\n        when itemid = 50800 then 'SPECIMEN'\n        when itemid = 50801 then 'AADO2'\n        when itemid = 50802 then 'BASEEXCESS'\n        when itemid = 50803 then 'BICARBONATE'\n        when itemid = 50804 then 'TOTALCO2'\n        when itemid = 50805 then 'CARBOXYHEMOGLOBIN'\n        when itemid = 50806 then 'CHLORIDE'\n        when itemid = 50808 then 'CALCIUM'\n        when itemid = 50809 then 'GLUCOSE'\n        when itemid = 50810 then 'HEMATOCRIT'\n        when itemid = 50811 then 'HEMOGLOBIN'\n        when itemid = 50812 then 'INTUBATED'\n        when itemid = 50813 then 'LACTATE'\n        when itemid = 50814 then 'METHEMOGLOBIN'\n        when itemid = 50815 then 'O2FLOW'\n        when itemid = 50816 then 'FIO2'\n        when itemid = 50817 then 'SO2' -- OXYGENSATURATION\n        when itemid = 50818 then 'PCO2'\n        when itemid = 50819 then 'PEEP'\n        when itemid = 50820 then 'PH'\n        when itemid = 50821 then 'PO2'\n        when itemid = 50822 then 'POTASSIUM'\n        when itemid = 50823 then 'REQUIREDO2'\n        when itemid = 50824 then 'SODIUM'\n        when itemid = 50825 then 'TEMPERATURE'\n        when itemid = 50826 then 'TIDALVOLUME'\n        when itemid = 50827 then 'VENTILATIONRATE'\n        when itemid = 50828 then 'VENTILATOR'\n        else null\n        end as label\n        , charttime\n        , value\n        -- add in some sanity checks on the values\n        , case\n          when valuenum <= 0 and itemid != 50802 then null -- allow negative baseexcess\n          when itemid = 50810 and valuenum > 100 then null -- hematocrit\n          -- ensure FiO2 is a valid number between 21-100\n          -- mistakes are rare (<100 obs out of ~100,000)\n          -- there are 862 obs of valuenum == 20 - some people round down!\n          -- rather than risk imputing garbage data for FiO2, we simply NULL invalid values\n          when itemid = 50816 and valuenum < 20 then null\n          when itemid = 50816 and valuenum > 100 then null\n          when itemid = 50817 and valuenum > 100 then null -- O2 sat\n          when itemid = 50815 and valuenum >  70 then null -- O2 flow\n          when itemid = 50821 and valuenum > 800 then null -- PO2\n           -- conservative upper limit\n        else valuenum\n        end as valuenum\n\n    FROM icustays ie\n    left join labevents le\n      on le.subject_id = ie.subject_id and le.hadm_id = ie.hadm_id\n      and le.charttime between (DATETIME_SUB(ie.intime, INTERVAL '6' HOUR)) and (DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n      and le.ITEMID in\n      -- blood gases\n      (\n        50800, 50801, 50802, 50803, 50804, 50805, 50806, 50807, 50808, 50809\n        , 50810, 50811, 50812, 50813, 50814, 50815, 50816, 50817, 50818, 50819\n        , 50820, 50821, 50822, 50823, 50824, 50825, 50826, 50827, 50828\n        , 51545\n      )\n)\nselect pvt.SUBJECT_ID, pvt.HADM_ID, pvt.ICUSTAY_ID, pvt.CHARTTIME\n, max(case when label = 'SPECIMEN' then value else null end) as specimen\n, max(case when label = 'AADO2' then valuenum else null end) as aado2\n, max(case when label = 'BASEEXCESS' then valuenum else null end) as baseexcess\n, max(case when label = 'BICARBONATE' then valuenum else null end) as bicarbonate\n, max(case when label = 'TOTALCO2' then valuenum else null end) as totalco2\n, max(case when label = 'CARBOXYHEMOGLOBIN' then valuenum else null end) as carboxyhemoglobin\n, max(case when label = 'CHLORIDE' then valuenum else null end) as chloride\n, max(case when label = 'CALCIUM' then valuenum else null end) as calcium\n, max(case when label = 'GLUCOSE' then valuenum else null end) as glucose\n, max(case when label = 'HEMATOCRIT' then valuenum else null end) as hematocrit\n, max(case when label = 'HEMOGLOBIN' then valuenum else null end) as hemoglobin\n, max(case when label = 'INTUBATED' then valuenum else null end) as intubated\n, max(case when label = 'LACTATE' then valuenum else null end) as lactate\n, max(case when label = 'METHEMOGLOBIN' then valuenum else null end) as methemoglobin\n, max(case when label = 'O2FLOW' then valuenum else null end) as o2flow\n, max(case when label = 'FIO2' then valuenum else null end) as fio2\n, max(case when label = 'SO2' then valuenum else null end) as so2 -- OXYGENSATURATION\n, max(case when label = 'PCO2' then valuenum else null end) as pco2\n, max(case when label = 'PEEP' then valuenum else null end) as peep\n, max(case when label = 'PH' then valuenum else null end) as ph\n, max(case when label = 'PO2' then valuenum else null end) as po2\n, max(case when label = 'POTASSIUM' then valuenum else null end) as potassium\n, max(case when label = 'REQUIREDO2' then valuenum else null end) as requiredo2\n, max(case when label = 'SODIUM' then valuenum else null end) as sodium\n, max(case when label = 'TEMPERATURE' then valuenum else null end) as temperature\n, max(case when label = 'TIDALVOLUME' then valuenum else null end) as tidalvolume\n, max(case when label = 'VENTILATIONRATE' then valuenum else null end) as ventilationrate\n, max(case when label = 'VENTILATOR' then valuenum else null end) as ventilator\nfrom pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id, pvt.CHARTTIME\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id, pvt.CHARTTIME", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.1396961, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "blood_gas_first_day"], "meta": {}, "name": "blood_gas_first_day", "original_file_path": "models/firstday/blood_gas_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/blood_gas_first_day.sql", "raw_sql": "-- The aim of this query is to pivot entries related to blood gases and\n-- chemistry values which were found in LABEVENTS\n\n-- things to check:\n--  when a mixed venous/arterial blood sample are taken at the same time, is the store time different?\n\nwith pvt as\n( -- begin query that extracts the data\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- here we assign labels to ITEMIDs\n  -- this also fuses together multiple ITEMIDs containing the same data\n      , case\n        when itemid = 50800 then 'SPECIMEN'\n        when itemid = 50801 then 'AADO2'\n        when itemid = 50802 then 'BASEEXCESS'\n        when itemid = 50803 then 'BICARBONATE'\n        when itemid = 50804 then 'TOTALCO2'\n        when itemid = 50805 then 'CARBOXYHEMOGLOBIN'\n        when itemid = 50806 then 'CHLORIDE'\n        when itemid = 50808 then 'CALCIUM'\n        when itemid = 50809 then 'GLUCOSE'\n        when itemid = 50810 then 'HEMATOCRIT'\n        when itemid = 50811 then 'HEMOGLOBIN'\n        when itemid = 50812 then 'INTUBATED'\n        when itemid = 50813 then 'LACTATE'\n        when itemid = 50814 then 'METHEMOGLOBIN'\n        when itemid = 50815 then 'O2FLOW'\n        when itemid = 50816 then 'FIO2'\n        when itemid = 50817 then 'SO2' -- OXYGENSATURATION\n        when itemid = 50818 then 'PCO2'\n        when itemid = 50819 then 'PEEP'\n        when itemid = 50820 then 'PH'\n        when itemid = 50821 then 'PO2'\n        when itemid = 50822 then 'POTASSIUM'\n        when itemid = 50823 then 'REQUIREDO2'\n        when itemid = 50824 then 'SODIUM'\n        when itemid = 50825 then 'TEMPERATURE'\n        when itemid = 50826 then 'TIDALVOLUME'\n        when itemid = 50827 then 'VENTILATIONRATE'\n        when itemid = 50828 then 'VENTILATOR'\n        else null\n        end as label\n        , charttime\n        , value\n        -- add in some sanity checks on the values\n        , case\n          when valuenum <= 0 and itemid != 50802 then null -- allow negative baseexcess\n          when itemid = 50810 and valuenum > 100 then null -- hematocrit\n          -- ensure FiO2 is a valid number between 21-100\n          -- mistakes are rare (<100 obs out of ~100,000)\n          -- there are 862 obs of valuenum == 20 - some people round down!\n          -- rather than risk imputing garbage data for FiO2, we simply NULL invalid values\n          when itemid = 50816 and valuenum < 20 then null\n          when itemid = 50816 and valuenum > 100 then null\n          when itemid = 50817 and valuenum > 100 then null -- O2 sat\n          when itemid = 50815 and valuenum >  70 then null -- O2 flow\n          when itemid = 50821 and valuenum > 800 then null -- PO2\n           -- conservative upper limit\n        else valuenum\n        end as valuenum\n\n    FROM icustays ie\n    left join labevents le\n      on le.subject_id = ie.subject_id and le.hadm_id = ie.hadm_id\n      and le.charttime between (DATETIME_SUB(ie.intime, INTERVAL '6' HOUR)) and (DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n      and le.ITEMID in\n      -- blood gases\n      (\n        50800, 50801, 50802, 50803, 50804, 50805, 50806, 50807, 50808, 50809\n        , 50810, 50811, 50812, 50813, 50814, 50815, 50816, 50817, 50818, 50819\n        , 50820, 50821, 50822, 50823, 50824, 50825, 50826, 50827, 50828\n        , 51545\n      )\n)\nselect pvt.SUBJECT_ID, pvt.HADM_ID, pvt.ICUSTAY_ID, pvt.CHARTTIME\n, max(case when label = 'SPECIMEN' then value else null end) as specimen\n, max(case when label = 'AADO2' then valuenum else null end) as aado2\n, max(case when label = 'BASEEXCESS' then valuenum else null end) as baseexcess\n, max(case when label = 'BICARBONATE' then valuenum else null end) as bicarbonate\n, max(case when label = 'TOTALCO2' then valuenum else null end) as totalco2\n, max(case when label = 'CARBOXYHEMOGLOBIN' then valuenum else null end) as carboxyhemoglobin\n, max(case when label = 'CHLORIDE' then valuenum else null end) as chloride\n, max(case when label = 'CALCIUM' then valuenum else null end) as calcium\n, max(case when label = 'GLUCOSE' then valuenum else null end) as glucose\n, max(case when label = 'HEMATOCRIT' then valuenum else null end) as hematocrit\n, max(case when label = 'HEMOGLOBIN' then valuenum else null end) as hemoglobin\n, max(case when label = 'INTUBATED' then valuenum else null end) as intubated\n, max(case when label = 'LACTATE' then valuenum else null end) as lactate\n, max(case when label = 'METHEMOGLOBIN' then valuenum else null end) as methemoglobin\n, max(case when label = 'O2FLOW' then valuenum else null end) as o2flow\n, max(case when label = 'FIO2' then valuenum else null end) as fio2\n, max(case when label = 'SO2' then valuenum else null end) as so2 -- OXYGENSATURATION\n, max(case when label = 'PCO2' then valuenum else null end) as pco2\n, max(case when label = 'PEEP' then valuenum else null end) as peep\n, max(case when label = 'PH' then valuenum else null end) as ph\n, max(case when label = 'PO2' then valuenum else null end) as po2\n, max(case when label = 'POTASSIUM' then valuenum else null end) as potassium\n, max(case when label = 'REQUIREDO2' then valuenum else null end) as requiredo2\n, max(case when label = 'SODIUM' then valuenum else null end) as sodium\n, max(case when label = 'TEMPERATURE' then valuenum else null end) as temperature\n, max(case when label = 'TIDALVOLUME' then valuenum else null end) as tidalvolume\n, max(case when label = 'VENTILATIONRATE' then valuenum else null end) as ventilationrate\n, max(case when label = 'VENTILATOR' then valuenum else null end) as ventilator\nfrom pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id, pvt.CHARTTIME\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id, pvt.CHARTTIME", "refs": [], "relation_name": "\"mimic\".\"public\".\"blood_gas_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.blood_gas_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:19.503484Z", "name": "compile", "started_at": "2022-07-29T23:01:19.501101Z"}, {"completed_at": "2022-07-29T23:01:19.773073Z", "name": "execute", "started_at": "2022-07-29T23:01:19.503951Z"}]}, "unique_id": "model.mimic.blood_gas_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.blood_gas_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.775407Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "gcs_first_day", "node_path": "firstday/gcs_first_day.sql", "node_started_at": "2022-07-29T23:01:19.775826", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.gcs_first_day"}, "unique_id": "model.mimic.gcs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.gcs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.775932Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.gcs_first_day", "index": 2, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "gcs_first_day", "node_path": "firstday/gcs_first_day.sql", "node_started_at": "2022-07-29T23:01:19.775826", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.gcs_first_day"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "2 of 10 START table model public.gcs_first_day ................................. [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.776634Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.gcs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.777670Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "gcs_first_day", "node_path": "firstday/gcs_first_day.sql", "node_started_at": "2022-07-29T23:01:19.775826", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.gcs_first_day"}, "unique_id": "model.mimic.gcs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.gcs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.778361Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.gcs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.gcs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.778719Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.gcs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.780446Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.781194Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "gcs_first_day", "node_path": "firstday/gcs_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.gcs_first_day"}, "unique_id": "model.mimic.gcs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.gcs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.781465Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.gcs_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.791729Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.gcs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.792625Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.gcs_first_day", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.gcs_first_day: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.792916Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.793167Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.804265Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.gcs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.804901Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.gcs_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.gcs_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"gcs_first_day__dbt_tmp\"\n  as (\n    -- ITEMIDs used:\n\n-- CAREVUE\n--    723 as GCSVerbal\n--    454 as GCSMotor\n--    184 as GCSEyes\n\n-- METAVISION\n--    223900 GCS - Verbal Response\n--    223901 GCS - Motor Response\n--    220739 GCS - Eye Opening\n\n-- The code combines the ITEMIDs into the carevue itemids, then pivots those\n-- So 223900 is changed to 723, then the ITEMID 723 is pivoted to form GCSVerbal\n\n-- Note:\n--  The GCS for sedated patients is defaulted to 15 in this code.\n--  This is in line with how the data is meant to be collected.\n--  e.g., from the SAPS II publication:\n--    For sedated patients, the Glasgow Coma Score before sedation was used.\n--    This was ascertained either from interviewing the physician who ordered the sedation,\n--    or by reviewing the patient's medical record.\n\nwith base as\n(\n  SELECT pvt.ICUSTAY_ID\n  , pvt.charttime\n\n  -- Easier names - note we coalesced Metavision and CareVue IDs below\n  , max(case when pvt.itemid = 454 then pvt.valuenum else null end) as GCSMotor\n  , max(case when pvt.itemid = 723 then pvt.valuenum else null end) as GCSVerbal\n  , max(case when pvt.itemid = 184 then pvt.valuenum else null end) as GCSEyes\n\n  -- If verbal was set to 0 in the below select, then this is an intubated patient\n  , case\n      when max(case when pvt.itemid = 723 then pvt.valuenum else null end) = 0\n    then 1\n    else 0\n    end as EndoTrachFlag\n\n  , ROW_NUMBER ()\n          OVER (PARTITION BY pvt.ICUSTAY_ID ORDER BY pvt.charttime ASC) as rn\n\n  FROM  (\n  select l.ICUSTAY_ID\n  -- merge the ITEMIDs so that the pivot applies to both metavision/carevue data\n  , case\n      when l.ITEMID in (723,223900) then 723\n      when l.ITEMID in (454,223901) then 454\n      when l.ITEMID in (184,220739) then 184\n      else l.ITEMID end\n    as ITEMID\n\n  -- convert the data into a number, reserving a value of 0 for ET/Trach\n  , case\n      -- endotrach/vent is assigned a value of 0, later parsed specially\n      when l.ITEMID = 723 and l.VALUE = '1.0 ET/Trach' then 0 -- carevue\n      when l.ITEMID = 223900 and l.VALUE = 'No Response-ETT' then 0 -- metavision\n\n      else VALUENUM\n      end\n    as VALUENUM\n  , l.CHARTTIME\n  FROM chartevents l\n\n  -- get intime for charttime subselection\n  inner join icustays b\n    on l.icustay_id = b.icustay_id\n\n  -- Isolate the desired GCS variables\n  where l.ITEMID in\n  (\n    -- 198 -- GCS\n    -- GCS components, CareVue\n    184, 454, 723\n    -- GCS components, Metavision\n    , 223900, 223901, 220739\n  )\n  -- Only get data for the first 24 hours\n  and l.charttime between b.intime and DATETIME_ADD(b.intime, INTERVAL '1' DAY)\n  -- exclude rows marked as error\n  AND (l.error IS NULL OR l.error = 0)\n  ) pvt\n  group by pvt.ICUSTAY_ID, pvt.charttime\n)\n, gcs as (\n  select b.*\n  , b2.GCSVerbal as GCSVerbalPrev\n  , b2.GCSMotor as GCSMotorPrev\n  , b2.GCSEyes as GCSEyesPrev\n  -- Calculate GCS, factoring in special case when they are intubated and prev vals\n  -- note that the coalesce are used to implement the following if:\n  --  if current value exists, use it\n  --  if previous value exists, use it\n  --  otherwise, default to normal\n  , case\n      -- replace GCS during sedation with 15\n      when b.GCSVerbal = 0\n        then 15\n      when b.GCSVerbal is null and b2.GCSVerbal = 0\n        then 15\n      -- if previously they were intub, but they aren't now, do not use previous GCS values\n      when b2.GCSVerbal = 0\n        then\n            coalesce(b.GCSMotor,6)\n          + coalesce(b.GCSVerbal,5)\n          + coalesce(b.GCSEyes,4)\n      -- otherwise, add up score normally, imputing previous value if none available at current time\n      else\n            coalesce(b.GCSMotor,coalesce(b2.GCSMotor,6))\n          + coalesce(b.GCSVerbal,coalesce(b2.GCSVerbal,5))\n          + coalesce(b.GCSEyes,coalesce(b2.GCSEyes,4))\n      end as GCS\n\n  from base b\n  -- join to itself within 6 hours to get previous value\n  left join base b2\n    on b.ICUSTAY_ID = b2.ICUSTAY_ID and b.rn = b2.rn+1 and b2.charttime > DATETIME_SUB(b.charttime, INTERVAL '6' HOUR)\n)\n, gcs_final as (\n  select gcs.*\n  -- This sorts the data by GCS, so rn=1 is the the lowest GCS values to keep\n  , ROW_NUMBER ()\n          OVER (PARTITION BY gcs.ICUSTAY_ID\n                ORDER BY gcs.GCS\n               ) as IsMinGCS\n  from gcs\n)\nselect ie.subject_id, ie.hadm_id, ie.icustay_id\n-- The minimum GCS is determined by the above row partition, we only join if IsMinGCS=1\n, GCS as mingcs\n, coalesce(GCSMotor,GCSMotorPrev) as gcsmotor\n, coalesce(GCSVerbal,GCSVerbalPrev) as gcsverbal\n, coalesce(GCSEyes,GCSEyesPrev) as gcseyes\n, EndoTrachFlag as endotrachflag\n\n-- subselect down to the cohort of eligible patients\nFROM icustays ie\nleft join gcs_final gs\n  on ie.icustay_id = gs.icustay_id and gs.IsMinGCS = 1\nORDER BY ie.icustay_id\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.gcs_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.gcs_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"gcs_first_day__dbt_tmp\"\n  as (\n    -- ITEMIDs used:\n\n-- CAREVUE\n--    723 as GCSVerbal\n--    454 as GCSMotor\n--    184 as GCSEyes\n\n-- METAVISION\n--    223900 GCS - Verbal Response\n--    223901 GCS - Motor Response\n--    220739 GCS - Eye Opening\n\n-- The code combines the ITEMIDs into the carevue itemids, then pivots those\n-- So 223900 is changed to 723, then the ITEMID 723 is pivoted to form GCSVerbal\n\n-- Note:\n--  The GCS for sedated patients is defaulted to 15 in this code.\n--  This is in line with how the data is meant to be collected.\n--  e.g., from the SAPS II publication:\n--    For sedated patients, the Glasgow Coma Score before sedation was used.\n--    This was ascertained either from interviewing the physician who ordered the sedation,\n--    or by reviewing the patient's medical record.\n\nwith base as\n(\n  SELECT pvt.ICUSTAY_ID\n  , pvt.charttime\n\n  -- Easier names - note we coalesced Metavision and CareVue IDs below\n  , max(case when pvt.itemid = 454 then pvt.valuenum else null end) as GCSMotor\n  , max(case when pvt.itemid = 723 then pvt.valuenum else null end) as GCSVerbal\n  , max(case when pvt.itemid = 184 then pvt.valuenum else null end) as GCSEyes\n\n  -- If verbal was set to 0 in the below select, then this is an intubated patient\n  , case\n      when max(case when pvt.itemid = 723 then pvt.valuenum else null end) = 0\n    then 1\n    else 0\n    end as EndoTrachFlag\n\n  , ROW_NUMBER ()\n          OVER (PARTITION BY pvt.ICUSTAY_ID ORDER BY pvt.charttime ASC) as rn\n\n  FROM  (\n  select l.ICUSTAY_ID\n  -- merge the ITEMIDs so that the pivot applies to both metavision/carevue data\n  , case\n      when l.ITEMID in (723,223900) then 723\n      when l.ITEMID in (454,223901) then 454\n      when l.ITEMID in (184,220739) then 184\n      else l.ITEMID end\n    as ITEMID\n\n  -- convert the data into a number, reserving a value of 0 for ET/Trach\n  , case\n      -- endotrach/vent is assigned a value of 0, later parsed specially\n      when l.ITEMID = 723 and l.VALUE = '1.0 ET/Trach' then 0 -- carevue\n      when l.ITEMID = 223900 and l.VALUE = 'No Response-ETT' then 0 -- metavision\n\n      else VALUENUM\n      end\n    as VALUENUM\n  , l.CHARTTIME\n  FROM chartevents l\n\n  -- get intime for charttime subselection\n  inner join icustays b\n    on l.icustay_id = b.icustay_id\n\n  -- Isolate the desired GCS variables\n  where l.ITEMID in\n  (\n    -- 198 -- GCS\n    -- GCS components, CareVue\n    184, 454, 723\n    -- GCS components, Metavision\n    , 223900, 223901, 220739\n  )\n  -- Only get data for the first 24 hours\n  and l.charttime between b.intime and DATETIME_ADD(b.intime, INTERVAL '1' DAY)\n  -- exclude rows marked as error\n  AND (l.error IS NULL OR l.error = 0)\n  ) pvt\n  group by pvt.ICUSTAY_ID, pvt.charttime\n)\n, gcs as (\n  select b.*\n  , b2.GCSVerbal as GCSVerbalPrev\n  , b2.GCSMotor as GCSMotorPrev\n  , b2.GCSEyes as GCSEyesPrev\n  -- Calculate GCS, factoring in special case when they are intubated and prev vals\n  -- note that the coalesce are used to implement the following if:\n  --  if current value exists, use it\n  --  if previous value exists, use it\n  --  otherwise, default to normal\n  , case\n      -- replace GCS during sedation with 15\n      when b.GCSVerbal = 0\n        then 15\n      when b.GCSVerbal is null and b2.GCSVerbal = 0\n        then 15\n      -- if previously they were intub, but they aren't now, do not use previous GCS values\n      when b2.GCSVerbal = 0\n        then\n            coalesce(b.GCSMotor,6)\n          + coalesce(b.GCSVerbal,5)\n          + coalesce(b.GCSEyes,4)\n      -- otherwise, add up score normally, imputing previous value if none available at current time\n      else\n            coalesce(b.GCSMotor,coalesce(b2.GCSMotor,6))\n          + coalesce(b.GCSVerbal,coalesce(b2.GCSVerbal,5))\n          + coalesce(b.GCSEyes,coalesce(b2.GCSEyes,4))\n      end as GCS\n\n  from base b\n  -- join to itself within 6 hours to get previous value\n  left join base b2\n    on b.ICUSTAY_ID = b2.ICUSTAY_ID and b.rn = b2.rn+1 and b2.charttime > DATETIME_SUB(b.charttime, INTERVAL '6' HOUR)\n)\n, gcs_final as (\n  select gcs.*\n  -- This sorts the data by GCS, so rn=1 is the the lowest GCS values to keep\n  , ROW_NUMBER ()\n          OVER (PARTITION BY gcs.ICUSTAY_ID\n                ORDER BY gcs.GCS\n               ) as IsMinGCS\n  from gcs\n)\nselect ie.subject_id, ie.hadm_id, ie.icustay_id\n-- The minimum GCS is determined by the above row partition, we only join if IsMinGCS=1\n, GCS as mingcs\n, coalesce(GCSMotor,GCSMotorPrev) as gcsmotor\n, coalesce(GCSVerbal,GCSVerbalPrev) as gcsverbal\n, coalesce(GCSEyes,GCSEyesPrev) as gcseyes\n, EndoTrachFlag as endotrachflag\n\n-- subselect down to the cohort of eligible patients\nFROM icustays ie\nleft join gcs_final gs\n  on ie.icustay_id = gs.icustay_id and gs.IsMinGCS = 1\nORDER BY ie.icustay_id\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.805260Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.1, "status": "SELECT 61532"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 61532 in 0.1 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.904139Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.gcs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.907973Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.gcs_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.gcs_first_day\"} */\nalter table \"mimic\".\"public\".\"gcs_first_day\" rename to \"gcs_first_day__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.gcs_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.gcs_first_day\"} */\nalter table \"mimic\".\"public\".\"gcs_first_day\" rename to \"gcs_first_day__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.908194Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.909010Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.gcs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.913603Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.gcs_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.gcs_first_day\"} */\nalter table \"mimic\".\"public\".\"gcs_first_day__dbt_tmp\" rename to \"gcs_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.gcs_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.gcs_first_day\"} */\nalter table \"mimic\".\"public\".\"gcs_first_day__dbt_tmp\" rename to \"gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.913851Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.914650Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.gcs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.gcs_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.917472Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.gcs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.917693Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.gcs_first_day", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.gcs_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.918132Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.924427Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.gcs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.gcs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.926932Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.gcs_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.gcs_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"gcs_first_day__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.gcs_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.gcs_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"gcs_first_day__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.927162Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.929034Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.931777Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.gcs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.gcs_first_day: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.932055Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2df670>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2df670>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.932954Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.gcs_first_day", "execution_time": 0, "index": 2, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "gcs_first_day", "node_path": "firstday/gcs_first_day.sql", "node_started_at": "2022-07-29T23:01:19.775826", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.gcs_first_day"}, "status": "SELECT 61532", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "2 of 10 OK created table model public.gcs_first_day ............................ [\u001b[32mSELECT 61532\u001b[0m in 0.16s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.933576Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:19.934359", "node_name": "gcs_first_day", "node_path": "firstday/gcs_first_day.sql", "node_started_at": "2022-07-29T23:01:19.775826", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.gcs_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 61532", "code": "SELECT", "rows_affected": 61532}, "agate_table": null, "execution_time": 0.15552616119384766, "failures": null, "message": "SELECT 61532", "node": {"alias": "gcs_first_day", "build_path": "target/run/mimic/models/firstday/gcs_first_day.sql", "checksum": {"checksum": "8a904a533500faa60edc17f2f83872ac24aef91923875712cce264a8cdd6517a", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/gcs_first_day.sql", "compiled_sql": "-- ITEMIDs used:\n\n-- CAREVUE\n--    723 as GCSVerbal\n--    454 as GCSMotor\n--    184 as GCSEyes\n\n-- METAVISION\n--    223900 GCS - Verbal Response\n--    223901 GCS - Motor Response\n--    220739 GCS - Eye Opening\n\n-- The code combines the ITEMIDs into the carevue itemids, then pivots those\n-- So 223900 is changed to 723, then the ITEMID 723 is pivoted to form GCSVerbal\n\n-- Note:\n--  The GCS for sedated patients is defaulted to 15 in this code.\n--  This is in line with how the data is meant to be collected.\n--  e.g., from the SAPS II publication:\n--    For sedated patients, the Glasgow Coma Score before sedation was used.\n--    This was ascertained either from interviewing the physician who ordered the sedation,\n--    or by reviewing the patient's medical record.\n\nwith base as\n(\n  SELECT pvt.ICUSTAY_ID\n  , pvt.charttime\n\n  -- Easier names - note we coalesced Metavision and CareVue IDs below\n  , max(case when pvt.itemid = 454 then pvt.valuenum else null end) as GCSMotor\n  , max(case when pvt.itemid = 723 then pvt.valuenum else null end) as GCSVerbal\n  , max(case when pvt.itemid = 184 then pvt.valuenum else null end) as GCSEyes\n\n  -- If verbal was set to 0 in the below select, then this is an intubated patient\n  , case\n      when max(case when pvt.itemid = 723 then pvt.valuenum else null end) = 0\n    then 1\n    else 0\n    end as EndoTrachFlag\n\n  , ROW_NUMBER ()\n          OVER (PARTITION BY pvt.ICUSTAY_ID ORDER BY pvt.charttime ASC) as rn\n\n  FROM  (\n  select l.ICUSTAY_ID\n  -- merge the ITEMIDs so that the pivot applies to both metavision/carevue data\n  , case\n      when l.ITEMID in (723,223900) then 723\n      when l.ITEMID in (454,223901) then 454\n      when l.ITEMID in (184,220739) then 184\n      else l.ITEMID end\n    as ITEMID\n\n  -- convert the data into a number, reserving a value of 0 for ET/Trach\n  , case\n      -- endotrach/vent is assigned a value of 0, later parsed specially\n      when l.ITEMID = 723 and l.VALUE = '1.0 ET/Trach' then 0 -- carevue\n      when l.ITEMID = 223900 and l.VALUE = 'No Response-ETT' then 0 -- metavision\n\n      else VALUENUM\n      end\n    as VALUENUM\n  , l.CHARTTIME\n  FROM chartevents l\n\n  -- get intime for charttime subselection\n  inner join icustays b\n    on l.icustay_id = b.icustay_id\n\n  -- Isolate the desired GCS variables\n  where l.ITEMID in\n  (\n    -- 198 -- GCS\n    -- GCS components, CareVue\n    184, 454, 723\n    -- GCS components, Metavision\n    , 223900, 223901, 220739\n  )\n  -- Only get data for the first 24 hours\n  and l.charttime between b.intime and DATETIME_ADD(b.intime, INTERVAL '1' DAY)\n  -- exclude rows marked as error\n  AND (l.error IS NULL OR l.error = 0)\n  ) pvt\n  group by pvt.ICUSTAY_ID, pvt.charttime\n)\n, gcs as (\n  select b.*\n  , b2.GCSVerbal as GCSVerbalPrev\n  , b2.GCSMotor as GCSMotorPrev\n  , b2.GCSEyes as GCSEyesPrev\n  -- Calculate GCS, factoring in special case when they are intubated and prev vals\n  -- note that the coalesce are used to implement the following if:\n  --  if current value exists, use it\n  --  if previous value exists, use it\n  --  otherwise, default to normal\n  , case\n      -- replace GCS during sedation with 15\n      when b.GCSVerbal = 0\n        then 15\n      when b.GCSVerbal is null and b2.GCSVerbal = 0\n        then 15\n      -- if previously they were intub, but they aren't now, do not use previous GCS values\n      when b2.GCSVerbal = 0\n        then\n            coalesce(b.GCSMotor,6)\n          + coalesce(b.GCSVerbal,5)\n          + coalesce(b.GCSEyes,4)\n      -- otherwise, add up score normally, imputing previous value if none available at current time\n      else\n            coalesce(b.GCSMotor,coalesce(b2.GCSMotor,6))\n          + coalesce(b.GCSVerbal,coalesce(b2.GCSVerbal,5))\n          + coalesce(b.GCSEyes,coalesce(b2.GCSEyes,4))\n      end as GCS\n\n  from base b\n  -- join to itself within 6 hours to get previous value\n  left join base b2\n    on b.ICUSTAY_ID = b2.ICUSTAY_ID and b.rn = b2.rn+1 and b2.charttime > DATETIME_SUB(b.charttime, INTERVAL '6' HOUR)\n)\n, gcs_final as (\n  select gcs.*\n  -- This sorts the data by GCS, so rn=1 is the the lowest GCS values to keep\n  , ROW_NUMBER ()\n          OVER (PARTITION BY gcs.ICUSTAY_ID\n                ORDER BY gcs.GCS\n               ) as IsMinGCS\n  from gcs\n)\nselect ie.subject_id, ie.hadm_id, ie.icustay_id\n-- The minimum GCS is determined by the above row partition, we only join if IsMinGCS=1\n, GCS as mingcs\n, coalesce(GCSMotor,GCSMotorPrev) as gcsmotor\n, coalesce(GCSVerbal,GCSVerbalPrev) as gcsverbal\n, coalesce(GCSEyes,GCSEyesPrev) as gcseyes\n, EndoTrachFlag as endotrachflag\n\n-- subselect down to the cohort of eligible patients\nFROM icustays ie\nleft join gcs_final gs\n  on ie.icustay_id = gs.icustay_id and gs.IsMinGCS = 1\nORDER BY ie.icustay_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.1210976, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "gcs_first_day"], "meta": {}, "name": "gcs_first_day", "original_file_path": "models/firstday/gcs_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/gcs_first_day.sql", "raw_sql": "-- ITEMIDs used:\n\n-- CAREVUE\n--    723 as GCSVerbal\n--    454 as GCSMotor\n--    184 as GCSEyes\n\n-- METAVISION\n--    223900 GCS - Verbal Response\n--    223901 GCS - Motor Response\n--    220739 GCS - Eye Opening\n\n-- The code combines the ITEMIDs into the carevue itemids, then pivots those\n-- So 223900 is changed to 723, then the ITEMID 723 is pivoted to form GCSVerbal\n\n-- Note:\n--  The GCS for sedated patients is defaulted to 15 in this code.\n--  This is in line with how the data is meant to be collected.\n--  e.g., from the SAPS II publication:\n--    For sedated patients, the Glasgow Coma Score before sedation was used.\n--    This was ascertained either from interviewing the physician who ordered the sedation,\n--    or by reviewing the patient's medical record.\n\nwith base as\n(\n  SELECT pvt.ICUSTAY_ID\n  , pvt.charttime\n\n  -- Easier names - note we coalesced Metavision and CareVue IDs below\n  , max(case when pvt.itemid = 454 then pvt.valuenum else null end) as GCSMotor\n  , max(case when pvt.itemid = 723 then pvt.valuenum else null end) as GCSVerbal\n  , max(case when pvt.itemid = 184 then pvt.valuenum else null end) as GCSEyes\n\n  -- If verbal was set to 0 in the below select, then this is an intubated patient\n  , case\n      when max(case when pvt.itemid = 723 then pvt.valuenum else null end) = 0\n    then 1\n    else 0\n    end as EndoTrachFlag\n\n  , ROW_NUMBER ()\n          OVER (PARTITION BY pvt.ICUSTAY_ID ORDER BY pvt.charttime ASC) as rn\n\n  FROM  (\n  select l.ICUSTAY_ID\n  -- merge the ITEMIDs so that the pivot applies to both metavision/carevue data\n  , case\n      when l.ITEMID in (723,223900) then 723\n      when l.ITEMID in (454,223901) then 454\n      when l.ITEMID in (184,220739) then 184\n      else l.ITEMID end\n    as ITEMID\n\n  -- convert the data into a number, reserving a value of 0 for ET/Trach\n  , case\n      -- endotrach/vent is assigned a value of 0, later parsed specially\n      when l.ITEMID = 723 and l.VALUE = '1.0 ET/Trach' then 0 -- carevue\n      when l.ITEMID = 223900 and l.VALUE = 'No Response-ETT' then 0 -- metavision\n\n      else VALUENUM\n      end\n    as VALUENUM\n  , l.CHARTTIME\n  FROM chartevents l\n\n  -- get intime for charttime subselection\n  inner join icustays b\n    on l.icustay_id = b.icustay_id\n\n  -- Isolate the desired GCS variables\n  where l.ITEMID in\n  (\n    -- 198 -- GCS\n    -- GCS components, CareVue\n    184, 454, 723\n    -- GCS components, Metavision\n    , 223900, 223901, 220739\n  )\n  -- Only get data for the first 24 hours\n  and l.charttime between b.intime and DATETIME_ADD(b.intime, INTERVAL '1' DAY)\n  -- exclude rows marked as error\n  AND (l.error IS NULL OR l.error = 0)\n  ) pvt\n  group by pvt.ICUSTAY_ID, pvt.charttime\n)\n, gcs as (\n  select b.*\n  , b2.GCSVerbal as GCSVerbalPrev\n  , b2.GCSMotor as GCSMotorPrev\n  , b2.GCSEyes as GCSEyesPrev\n  -- Calculate GCS, factoring in special case when they are intubated and prev vals\n  -- note that the coalesce are used to implement the following if:\n  --  if current value exists, use it\n  --  if previous value exists, use it\n  --  otherwise, default to normal\n  , case\n      -- replace GCS during sedation with 15\n      when b.GCSVerbal = 0\n        then 15\n      when b.GCSVerbal is null and b2.GCSVerbal = 0\n        then 15\n      -- if previously they were intub, but they aren't now, do not use previous GCS values\n      when b2.GCSVerbal = 0\n        then\n            coalesce(b.GCSMotor,6)\n          + coalesce(b.GCSVerbal,5)\n          + coalesce(b.GCSEyes,4)\n      -- otherwise, add up score normally, imputing previous value if none available at current time\n      else\n            coalesce(b.GCSMotor,coalesce(b2.GCSMotor,6))\n          + coalesce(b.GCSVerbal,coalesce(b2.GCSVerbal,5))\n          + coalesce(b.GCSEyes,coalesce(b2.GCSEyes,4))\n      end as GCS\n\n  from base b\n  -- join to itself within 6 hours to get previous value\n  left join base b2\n    on b.ICUSTAY_ID = b2.ICUSTAY_ID and b.rn = b2.rn+1 and b2.charttime > DATETIME_SUB(b.charttime, INTERVAL '6' HOUR)\n)\n, gcs_final as (\n  select gcs.*\n  -- This sorts the data by GCS, so rn=1 is the the lowest GCS values to keep\n  , ROW_NUMBER ()\n          OVER (PARTITION BY gcs.ICUSTAY_ID\n                ORDER BY gcs.GCS\n               ) as IsMinGCS\n  from gcs\n)\nselect ie.subject_id, ie.hadm_id, ie.icustay_id\n-- The minimum GCS is determined by the above row partition, we only join if IsMinGCS=1\n, GCS as mingcs\n, coalesce(GCSMotor,GCSMotorPrev) as gcsmotor\n, coalesce(GCSVerbal,GCSVerbalPrev) as gcsverbal\n, coalesce(GCSEyes,GCSEyesPrev) as gcseyes\n, EndoTrachFlag as endotrachflag\n\n-- subselect down to the cohort of eligible patients\nFROM icustays ie\nleft join gcs_final gs\n  on ie.icustay_id = gs.icustay_id and gs.IsMinGCS = 1\nORDER BY ie.icustay_id", "refs": [], "relation_name": "\"mimic\".\"public\".\"gcs_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.gcs_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:19.781149Z", "name": "compile", "started_at": "2022-07-29T23:01:19.778689Z"}, {"completed_at": "2022-07-29T23:01:19.931744Z", "name": "execute", "started_at": "2022-07-29T23:01:19.781590Z"}]}, "unique_id": "model.mimic.gcs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.gcs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.934575Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "height_first_day", "node_path": "firstday/height_first_day.sql", "node_started_at": "2022-07-29T23:01:19.935171", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.height_first_day"}, "unique_id": "model.mimic.height_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.height_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.935240Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.height_first_day", "index": 3, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "height_first_day", "node_path": "firstday/height_first_day.sql", "node_started_at": "2022-07-29T23:01:19.935171", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.height_first_day"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "3 of 10 START table model public.height_first_day .............................. [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.936037Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.height_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.936886Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "height_first_day", "node_path": "firstday/height_first_day.sql", "node_started_at": "2022-07-29T23:01:19.935171", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.height_first_day"}, "unique_id": "model.mimic.height_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.height_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.937261Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.height_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.height_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.937483Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.height_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.940812Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.941861Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "height_first_day", "node_path": "firstday/height_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.height_first_day"}, "unique_id": "model.mimic.height_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.height_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.942162Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.height_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.951109Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.height_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.951899Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.height_first_day", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.height_first_day: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.952159Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.952370Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.961459Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.height_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.962330Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.height_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.height_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"height_first_day__dbt_tmp\"\n  as (\n    -- This query extracts heights for adult ICU patients.\n-- It uses all information from the patient's first ICU day.\n-- This is done for consistency with other queries - it's not necessarily needed.\n-- Height is unlikely to change throughout a patient's stay.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\n-- staging table to ensure all heights are in centimeters\nwith ce0 as\n(\n    SELECT\n      c.icustay_id\n      , case\n        -- convert inches to centimetres\n          when itemid in (920, 1394, 4187, 3486)\n              then valuenum * 2.54\n            else valuenum\n        end as Height\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (226730,920, 1394, 4187, 3486,3485,4188) -- height\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n)\n, ce as\n(\n    SELECT\n        icustay_id\n        -- extract the median height from the chart to add robustness against outliers\n        , AVG(height) as Height_chart\n    from ce0\n    where height > 100\n    group by icustay_id\n)\n-- requires the echo-data.sql query to run\n-- this adds heights from the free-text echo notes\n, echo as\n(\n    select\n        ec.subject_id\n        -- all echo heights are in inches\n        , 2.54*AVG(height) as Height_Echo\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ec.subject_id = ie.subject_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where height is not null\n    and height*2.54 > 100\n    group by ec.subject_id\n)\nselect\n    ie.icustay_id\n    , coalesce(ce.Height_chart, ec.Height_Echo) as height\n\n    -- components\n    , ce.height_chart\n    , ec.height_echo\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\nleft join echo ec\n    on ie.subject_id = ec.subject_id\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.height_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.height_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"height_first_day__dbt_tmp\"\n  as (\n    -- This query extracts heights for adult ICU patients.\n-- It uses all information from the patient's first ICU day.\n-- This is done for consistency with other queries - it's not necessarily needed.\n-- Height is unlikely to change throughout a patient's stay.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\n-- staging table to ensure all heights are in centimeters\nwith ce0 as\n(\n    SELECT\n      c.icustay_id\n      , case\n        -- convert inches to centimetres\n          when itemid in (920, 1394, 4187, 3486)\n              then valuenum * 2.54\n            else valuenum\n        end as Height\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (226730,920, 1394, 4187, 3486,3485,4188) -- height\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n)\n, ce as\n(\n    SELECT\n        icustay_id\n        -- extract the median height from the chart to add robustness against outliers\n        , AVG(height) as Height_chart\n    from ce0\n    where height > 100\n    group by icustay_id\n)\n-- requires the echo-data.sql query to run\n-- this adds heights from the free-text echo notes\n, echo as\n(\n    select\n        ec.subject_id\n        -- all echo heights are in inches\n        , 2.54*AVG(height) as Height_Echo\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ec.subject_id = ie.subject_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where height is not null\n    and height*2.54 > 100\n    group by ec.subject_id\n)\nselect\n    ie.icustay_id\n    , coalesce(ce.Height_chart, ec.Height_Echo) as height\n\n    -- components\n    , ce.height_chart\n    , ec.height_echo\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\nleft join echo ec\n    on ie.subject_id = ec.subject_id\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:19.963112Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.14, "status": "SELECT 53432"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 53432 in 0.14 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.104582Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.height_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.112124Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.height_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.height_first_day\"} */\nalter table \"mimic\".\"public\".\"height_first_day\" rename to \"height_first_day__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.height_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.height_first_day\"} */\nalter table \"mimic\".\"public\".\"height_first_day\" rename to \"height_first_day__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.112379Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.113201Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.height_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.120009Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.height_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.height_first_day\"} */\nalter table \"mimic\".\"public\".\"height_first_day__dbt_tmp\" rename to \"height_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.height_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.height_first_day\"} */\nalter table \"mimic\".\"public\".\"height_first_day__dbt_tmp\" rename to \"height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.120495Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.121648Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.height_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.height_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.124896Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.height_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.125106Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.height_first_day", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.height_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.125365Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.130669Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.height_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.height_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.132371Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.height_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.height_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"height_first_day__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.height_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.height_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"height_first_day__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.132588Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.134626Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.137944Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.height_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.height_first_day: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.138279Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2df730>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2df730>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.139081Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.height_first_day", "execution_time": 0, "index": 3, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "height_first_day", "node_path": "firstday/height_first_day.sql", "node_started_at": "2022-07-29T23:01:19.935171", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.height_first_day"}, "status": "SELECT 53432", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "3 of 10 OK created table model public.height_first_day ......................... [\u001b[32mSELECT 53432\u001b[0m in 0.20s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.139588Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:20.140031", "node_name": "height_first_day", "node_path": "firstday/height_first_day.sql", "node_started_at": "2022-07-29T23:01:19.935171", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.height_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 53432", "code": "SELECT", "rows_affected": 53432}, "agate_table": null, "execution_time": 0.20249247550964355, "failures": null, "message": "SELECT 53432", "node": {"alias": "height_first_day", "build_path": "target/run/mimic/models/firstday/height_first_day.sql", "checksum": {"checksum": "15c2b5cb36dbb96f73459fe0311b97e612dc665b2be04131b44cf09b1c5523bf", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/height_first_day.sql", "compiled_sql": "-- This query extracts heights for adult ICU patients.\n-- It uses all information from the patient's first ICU day.\n-- This is done for consistency with other queries - it's not necessarily needed.\n-- Height is unlikely to change throughout a patient's stay.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\n-- staging table to ensure all heights are in centimeters\nwith ce0 as\n(\n    SELECT\n      c.icustay_id\n      , case\n        -- convert inches to centimetres\n          when itemid in (920, 1394, 4187, 3486)\n              then valuenum * 2.54\n            else valuenum\n        end as Height\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (226730,920, 1394, 4187, 3486,3485,4188) -- height\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n)\n, ce as\n(\n    SELECT\n        icustay_id\n        -- extract the median height from the chart to add robustness against outliers\n        , AVG(height) as Height_chart\n    from ce0\n    where height > 100\n    group by icustay_id\n)\n-- requires the echo-data.sql query to run\n-- this adds heights from the free-text echo notes\n, echo as\n(\n    select\n        ec.subject_id\n        -- all echo heights are in inches\n        , 2.54*AVG(height) as Height_Echo\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ec.subject_id = ie.subject_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where height is not null\n    and height*2.54 > 100\n    group by ec.subject_id\n)\nselect\n    ie.icustay_id\n    , coalesce(ce.Height_chart, ec.Height_Echo) as height\n\n    -- components\n    , ce.height_chart\n    , ec.height_echo\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\nleft join echo ec\n    on ie.subject_id = ec.subject_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.1237967, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": ["model.mimic.echo_data"]}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "height_first_day"], "meta": {}, "name": "height_first_day", "original_file_path": "models/firstday/height_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/height_first_day.sql", "raw_sql": "-- This query extracts heights for adult ICU patients.\n-- It uses all information from the patient's first ICU day.\n-- This is done for consistency with other queries - it's not necessarily needed.\n-- Height is unlikely to change throughout a patient's stay.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\n-- staging table to ensure all heights are in centimeters\nwith ce0 as\n(\n    SELECT\n      c.icustay_id\n      , case\n        -- convert inches to centimetres\n          when itemid in (920, 1394, 4187, 3486)\n              then valuenum * 2.54\n            else valuenum\n        end as Height\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (226730,920, 1394, 4187, 3486,3485,4188) -- height\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n)\n, ce as\n(\n    SELECT\n        icustay_id\n        -- extract the median height from the chart to add robustness against outliers\n        , AVG(height) as Height_chart\n    from ce0\n    where height > 100\n    group by icustay_id\n)\n-- requires the echo-data.sql query to run\n-- this adds heights from the free-text echo notes\n, echo as\n(\n    select\n        ec.subject_id\n        -- all echo heights are in inches\n        , 2.54*AVG(height) as Height_Echo\n    from {{ref('echo_data')}} ec\n    inner join icustays ie\n        on ec.subject_id = ie.subject_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where height is not null\n    and height*2.54 > 100\n    group by ec.subject_id\n)\nselect\n    ie.icustay_id\n    , coalesce(ce.Height_chart, ec.Height_Echo) as height\n\n    -- components\n    , ce.height_chart\n    , ec.height_echo\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\nleft join echo ec\n    on ie.subject_id = ec.subject_id", "refs": [["echo_data"]], "relation_name": "\"mimic\".\"public\".\"height_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.height_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:19.941799Z", "name": "compile", "started_at": "2022-07-29T23:01:19.937467Z"}, {"completed_at": "2022-07-29T23:01:20.137906Z", "name": "execute", "started_at": "2022-07-29T23:01:19.942437Z"}]}, "unique_id": "model.mimic.height_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.height_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.140187Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "labs_first_day", "node_path": "firstday/labs_first_day.sql", "node_started_at": "2022-07-29T23:01:20.140592", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.labs_first_day"}, "unique_id": "model.mimic.labs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.labs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.140669Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.labs_first_day", "index": 4, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "labs_first_day", "node_path": "firstday/labs_first_day.sql", "node_started_at": "2022-07-29T23:01:20.140592", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.labs_first_day"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "4 of 10 START table model public.labs_first_day ................................ [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.141325Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.labs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.142142Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "labs_first_day", "node_path": "firstday/labs_first_day.sql", "node_started_at": "2022-07-29T23:01:20.140592", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.labs_first_day"}, "unique_id": "model.mimic.labs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.labs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.142643Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.labs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.labs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.142949Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.labs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.144247Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.144951Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "labs_first_day", "node_path": "firstday/labs_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.labs_first_day"}, "unique_id": "model.mimic.labs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.labs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.145240Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.labs_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.155729Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.labs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.156684Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.labs_first_day", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.labs_first_day: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.157023Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.157308Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.167627Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.labs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.168066Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.labs_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.labs_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"labs_first_day__dbt_tmp\"\n  as (\n    -- This query pivots lab values taken in the first 24 hours of a patient's stay\n\n-- Have already confirmed that the unit of measurement is always the same: null or the correct unit\n\nSELECT\n  pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n  , min(CASE WHEN label = 'ANION GAP' THEN valuenum ELSE NULL END) AS aniongap_min\n  , max(CASE WHEN label = 'ANION GAP' THEN valuenum ELSE NULL END) AS aniongap_max\n  , min(CASE WHEN label = 'ALBUMIN' THEN valuenum ELSE NULL END) AS albumin_min\n  , max(CASE WHEN label = 'ALBUMIN' THEN valuenum ELSE NULL END) AS albumin_max\n  , min(CASE WHEN label = 'BANDS' THEN valuenum ELSE NULL END) AS bands_min\n  , max(CASE WHEN label = 'BANDS' THEN valuenum ELSE NULL END) AS bands_max\n  , min(CASE WHEN label = 'BICARBONATE' THEN valuenum ELSE NULL END) AS bicarbonate_min\n  , max(CASE WHEN label = 'BICARBONATE' THEN valuenum ELSE NULL END) AS bicarbonate_max\n  , min(CASE WHEN label = 'BILIRUBIN' THEN valuenum ELSE NULL END) AS bilirubin_min\n  , max(CASE WHEN label = 'BILIRUBIN' THEN valuenum ELSE NULL END) AS bilirubin_max\n  , min(CASE WHEN label = 'CREATININE' THEN valuenum ELSE NULL END) AS creatinine_min\n  , max(CASE WHEN label = 'CREATININE' THEN valuenum ELSE NULL END) AS creatinine_max\n  , min(CASE WHEN label = 'CHLORIDE' THEN valuenum ELSE NULL END) AS chloride_min\n  , max(CASE WHEN label = 'CHLORIDE' THEN valuenum ELSE NULL END) AS chloride_max\n  , min(CASE WHEN label = 'GLUCOSE' THEN valuenum ELSE NULL END) AS glucose_min\n  , max(CASE WHEN label = 'GLUCOSE' THEN valuenum ELSE NULL END) AS glucose_max\n  , min(CASE WHEN label = 'HEMATOCRIT' THEN valuenum ELSE NULL END) AS hematocrit_min\n  , max(CASE WHEN label = 'HEMATOCRIT' THEN valuenum ELSE NULL END) AS hematocrit_max\n  , min(CASE WHEN label = 'HEMOGLOBIN' THEN valuenum ELSE NULL END) AS hemoglobin_min\n  , max(CASE WHEN label = 'HEMOGLOBIN' THEN valuenum ELSE NULL END) AS hemoglobin_max\n  , min(CASE WHEN label = 'LACTATE' THEN valuenum ELSE NULL END) AS lactate_min\n  , max(CASE WHEN label = 'LACTATE' THEN valuenum ELSE NULL END) AS lactate_max\n  , min(CASE WHEN label = 'PLATELET' THEN valuenum ELSE NULL END) AS platelet_min\n  , max(CASE WHEN label = 'PLATELET' THEN valuenum ELSE NULL END) AS platelet_max\n  , min(CASE WHEN label = 'POTASSIUM' THEN valuenum ELSE NULL END) AS potassium_min\n  , max(CASE WHEN label = 'POTASSIUM' THEN valuenum ELSE NULL END) AS potassium_max\n  , min(CASE WHEN label = 'PTT' THEN valuenum ELSE NULL END) AS ptt_min\n  , max(CASE WHEN label = 'PTT' THEN valuenum ELSE NULL END) AS ptt_max\n  , min(CASE WHEN label = 'INR' THEN valuenum ELSE NULL END) AS inr_min\n  , max(CASE WHEN label = 'INR' THEN valuenum ELSE NULL END) AS inr_max\n  , min(CASE WHEN label = 'PT' THEN valuenum ELSE NULL END) AS pt_min\n  , max(CASE WHEN label = 'PT' THEN valuenum ELSE NULL END) AS pt_max\n  , min(CASE WHEN label = 'SODIUM' THEN valuenum ELSE NULL END) AS sodium_min\n  , max(CASE WHEN label = 'SODIUM' THEN valuenum ELSE NULL END) AS sodium_max\n  , min(CASE WHEN label = 'BUN' THEN valuenum ELSE NULL END) AS bun_min\n  , max(CASE WHEN label = 'BUN' THEN valuenum ELSE NULL END) AS bun_max\n  , min(CASE WHEN label = 'WBC' THEN valuenum ELSE NULL END) AS wbc_min\n  , max(CASE WHEN label = 'WBC' THEN valuenum ELSE NULL END) AS wbc_max\n\n\nFROM\n( -- begin query that extracts the data\n  SELECT ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- here we assign labels to ITEMIDs\n  -- this also fuses together multiple ITEMIDs containing the same data\n  , CASE\n        WHEN itemid = 50868 THEN 'ANION GAP'\n        WHEN itemid = 50862 THEN 'ALBUMIN'\n        WHEN itemid = 51144 THEN 'BANDS'\n        WHEN itemid = 50882 THEN 'BICARBONATE'\n        WHEN itemid = 50885 THEN 'BILIRUBIN'\n        WHEN itemid = 50912 THEN 'CREATININE'\n        WHEN itemid = 50806 THEN 'CHLORIDE'\n        WHEN itemid = 50902 THEN 'CHLORIDE'\n        WHEN itemid = 50809 THEN 'GLUCOSE'\n        WHEN itemid = 50931 THEN 'GLUCOSE'\n        WHEN itemid = 50810 THEN 'HEMATOCRIT'\n        WHEN itemid = 51221 THEN 'HEMATOCRIT'\n        WHEN itemid = 50811 THEN 'HEMOGLOBIN'\n        WHEN itemid = 51222 THEN 'HEMOGLOBIN'\n        WHEN itemid = 50813 THEN 'LACTATE'\n        WHEN itemid = 51265 THEN 'PLATELET'\n        WHEN itemid = 50822 THEN 'POTASSIUM'\n        WHEN itemid = 50971 THEN 'POTASSIUM'\n        WHEN itemid = 51275 THEN 'PTT'\n        WHEN itemid = 51237 THEN 'INR'\n        WHEN itemid = 51274 THEN 'PT'\n        WHEN itemid = 50824 THEN 'SODIUM'\n        WHEN itemid = 50983 THEN 'SODIUM'\n        WHEN itemid = 51006 THEN 'BUN'\n        WHEN itemid = 51300 THEN 'WBC'\n        WHEN itemid = 51301 THEN 'WBC'\n      ELSE null\n    END as label\n  , -- add in some sanity checks on the values\n  -- the where clause below requires all valuenum to be > 0, so these are only upper limit checks\n    CASE\n      WHEN itemid = 50862 and valuenum >    10 THEN null -- g/dL 'ALBUMIN'\n      WHEN itemid = 50868 and valuenum > 10000 THEN null -- mEq/L 'ANION GAP'\n      WHEN itemid = 51144 and valuenum <     0 THEN null -- immature band forms, %\n      WHEN itemid = 51144 and valuenum >   100 THEN null -- immature band forms, %\n      WHEN itemid = 50882 and valuenum > 10000 THEN null -- mEq/L 'BICARBONATE'\n      WHEN itemid = 50885 and valuenum >   150 THEN null -- mg/dL 'BILIRUBIN'\n      WHEN itemid = 50806 and valuenum > 10000 THEN null -- mEq/L 'CHLORIDE'\n      WHEN itemid = 50902 and valuenum > 10000 THEN null -- mEq/L 'CHLORIDE'\n      WHEN itemid = 50912 and valuenum >   150 THEN null -- mg/dL 'CREATININE'\n      WHEN itemid = 50809 and valuenum > 10000 THEN null -- mg/dL 'GLUCOSE'\n      WHEN itemid = 50931 and valuenum > 10000 THEN null -- mg/dL 'GLUCOSE'\n      WHEN itemid = 50810 and valuenum >   100 THEN null -- % 'HEMATOCRIT'\n      WHEN itemid = 51221 and valuenum >   100 THEN null -- % 'HEMATOCRIT'\n      WHEN itemid = 50811 and valuenum >    50 THEN null -- g/dL 'HEMOGLOBIN'\n      WHEN itemid = 51222 and valuenum >    50 THEN null -- g/dL 'HEMOGLOBIN'\n      WHEN itemid = 50813 and valuenum >    50 THEN null -- mmol/L 'LACTATE'\n      WHEN itemid = 51265 and valuenum > 10000 THEN null -- K/uL 'PLATELET'\n      WHEN itemid = 50822 and valuenum >    30 THEN null -- mEq/L 'POTASSIUM'\n      WHEN itemid = 50971 and valuenum >    30 THEN null -- mEq/L 'POTASSIUM'\n      WHEN itemid = 51275 and valuenum >   150 THEN null -- sec 'PTT'\n      WHEN itemid = 51237 and valuenum >    50 THEN null -- 'INR'\n      WHEN itemid = 51274 and valuenum >   150 THEN null -- sec 'PT'\n      WHEN itemid = 50824 and valuenum >   200 THEN null -- mEq/L == mmol/L 'SODIUM'\n      WHEN itemid = 50983 and valuenum >   200 THEN null -- mEq/L == mmol/L 'SODIUM'\n      WHEN itemid = 51006 and valuenum >   300 THEN null -- 'BUN'\n      WHEN itemid = 51300 and valuenum >  1000 THEN null -- 'WBC'\n      WHEN itemid = 51301 and valuenum >  1000 THEN null -- 'WBC'\n    ELSE le.valuenum\n    END as valuenum\n\n  FROM icustays ie\n\n  LEFT JOIN labevents le\n    ON le.subject_id = ie.subject_id AND le.hadm_id = ie.hadm_id\n    AND le.charttime BETWEEN (DATETIME_SUB(ie.intime, INTERVAL '6' HOUR)) AND (DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n    AND le.ITEMID in\n    (\n      -- comment is: LABEL | CATEGORY | FLUID | NUMBER OF ROWS IN LABEVENTS\n      50868, -- ANION GAP | CHEMISTRY | BLOOD | 769895\n      50862, -- ALBUMIN | CHEMISTRY | BLOOD | 146697\n      51144, -- BANDS - hematology\n      50882, -- BICARBONATE | CHEMISTRY | BLOOD | 780733\n      50885, -- BILIRUBIN, TOTAL | CHEMISTRY | BLOOD | 238277\n      50912, -- CREATININE | CHEMISTRY | BLOOD | 797476\n      50902, -- CHLORIDE | CHEMISTRY | BLOOD | 795568\n      50806, -- CHLORIDE, WHOLE BLOOD | BLOOD GAS | BLOOD | 48187\n      50931, -- GLUCOSE | CHEMISTRY | BLOOD | 748981\n      50809, -- GLUCOSE | BLOOD GAS | BLOOD | 196734\n      51221, -- HEMATOCRIT | HEMATOLOGY | BLOOD | 881846\n      50810, -- HEMATOCRIT, CALCULATED | BLOOD GAS | BLOOD | 89715\n      51222, -- HEMOGLOBIN | HEMATOLOGY | BLOOD | 752523\n      50811, -- HEMOGLOBIN | BLOOD GAS | BLOOD | 89712\n      50813, -- LACTATE | BLOOD GAS | BLOOD | 187124\n      51265, -- PLATELET COUNT | HEMATOLOGY | BLOOD | 778444\n      50971, -- POTASSIUM | CHEMISTRY | BLOOD | 845825\n      50822, -- POTASSIUM, WHOLE BLOOD | BLOOD GAS | BLOOD | 192946\n      51275, -- PTT | HEMATOLOGY | BLOOD | 474937\n      51237, -- INR(PT) | HEMATOLOGY | BLOOD | 471183\n      51274, -- PT | HEMATOLOGY | BLOOD | 469090\n      50983, -- SODIUM | CHEMISTRY | BLOOD | 808489\n      50824, -- SODIUM, WHOLE BLOOD | BLOOD GAS | BLOOD | 71503\n      51006, -- UREA NITROGEN | CHEMISTRY | BLOOD | 791925\n      51301, -- WHITE BLOOD CELLS | HEMATOLOGY | BLOOD | 753301\n      51300  -- WBC COUNT | HEMATOLOGY | BLOOD | 2371\n    )\n    AND valuenum IS NOT null AND valuenum > 0 -- lab values cannot be 0 and cannot be negative\n) pvt\nGROUP BY pvt.subject_id, pvt.hadm_id, pvt.icustay_id\nORDER BY pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.labs_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.labs_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"labs_first_day__dbt_tmp\"\n  as (\n    -- This query pivots lab values taken in the first 24 hours of a patient's stay\n\n-- Have already confirmed that the unit of measurement is always the same: null or the correct unit\n\nSELECT\n  pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n  , min(CASE WHEN label = 'ANION GAP' THEN valuenum ELSE NULL END) AS aniongap_min\n  , max(CASE WHEN label = 'ANION GAP' THEN valuenum ELSE NULL END) AS aniongap_max\n  , min(CASE WHEN label = 'ALBUMIN' THEN valuenum ELSE NULL END) AS albumin_min\n  , max(CASE WHEN label = 'ALBUMIN' THEN valuenum ELSE NULL END) AS albumin_max\n  , min(CASE WHEN label = 'BANDS' THEN valuenum ELSE NULL END) AS bands_min\n  , max(CASE WHEN label = 'BANDS' THEN valuenum ELSE NULL END) AS bands_max\n  , min(CASE WHEN label = 'BICARBONATE' THEN valuenum ELSE NULL END) AS bicarbonate_min\n  , max(CASE WHEN label = 'BICARBONATE' THEN valuenum ELSE NULL END) AS bicarbonate_max\n  , min(CASE WHEN label = 'BILIRUBIN' THEN valuenum ELSE NULL END) AS bilirubin_min\n  , max(CASE WHEN label = 'BILIRUBIN' THEN valuenum ELSE NULL END) AS bilirubin_max\n  , min(CASE WHEN label = 'CREATININE' THEN valuenum ELSE NULL END) AS creatinine_min\n  , max(CASE WHEN label = 'CREATININE' THEN valuenum ELSE NULL END) AS creatinine_max\n  , min(CASE WHEN label = 'CHLORIDE' THEN valuenum ELSE NULL END) AS chloride_min\n  , max(CASE WHEN label = 'CHLORIDE' THEN valuenum ELSE NULL END) AS chloride_max\n  , min(CASE WHEN label = 'GLUCOSE' THEN valuenum ELSE NULL END) AS glucose_min\n  , max(CASE WHEN label = 'GLUCOSE' THEN valuenum ELSE NULL END) AS glucose_max\n  , min(CASE WHEN label = 'HEMATOCRIT' THEN valuenum ELSE NULL END) AS hematocrit_min\n  , max(CASE WHEN label = 'HEMATOCRIT' THEN valuenum ELSE NULL END) AS hematocrit_max\n  , min(CASE WHEN label = 'HEMOGLOBIN' THEN valuenum ELSE NULL END) AS hemoglobin_min\n  , max(CASE WHEN label = 'HEMOGLOBIN' THEN valuenum ELSE NULL END) AS hemoglobin_max\n  , min(CASE WHEN label = 'LACTATE' THEN valuenum ELSE NULL END) AS lactate_min\n  , max(CASE WHEN label = 'LACTATE' THEN valuenum ELSE NULL END) AS lactate_max\n  , min(CASE WHEN label = 'PLATELET' THEN valuenum ELSE NULL END) AS platelet_min\n  , max(CASE WHEN label = 'PLATELET' THEN valuenum ELSE NULL END) AS platelet_max\n  , min(CASE WHEN label = 'POTASSIUM' THEN valuenum ELSE NULL END) AS potassium_min\n  , max(CASE WHEN label = 'POTASSIUM' THEN valuenum ELSE NULL END) AS potassium_max\n  , min(CASE WHEN label = 'PTT' THEN valuenum ELSE NULL END) AS ptt_min\n  , max(CASE WHEN label = 'PTT' THEN valuenum ELSE NULL END) AS ptt_max\n  , min(CASE WHEN label = 'INR' THEN valuenum ELSE NULL END) AS inr_min\n  , max(CASE WHEN label = 'INR' THEN valuenum ELSE NULL END) AS inr_max\n  , min(CASE WHEN label = 'PT' THEN valuenum ELSE NULL END) AS pt_min\n  , max(CASE WHEN label = 'PT' THEN valuenum ELSE NULL END) AS pt_max\n  , min(CASE WHEN label = 'SODIUM' THEN valuenum ELSE NULL END) AS sodium_min\n  , max(CASE WHEN label = 'SODIUM' THEN valuenum ELSE NULL END) AS sodium_max\n  , min(CASE WHEN label = 'BUN' THEN valuenum ELSE NULL END) AS bun_min\n  , max(CASE WHEN label = 'BUN' THEN valuenum ELSE NULL END) AS bun_max\n  , min(CASE WHEN label = 'WBC' THEN valuenum ELSE NULL END) AS wbc_min\n  , max(CASE WHEN label = 'WBC' THEN valuenum ELSE NULL END) AS wbc_max\n\n\nFROM\n( -- begin query that extracts the data\n  SELECT ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- here we assign labels to ITEMIDs\n  -- this also fuses together multiple ITEMIDs containing the same data\n  , CASE\n        WHEN itemid = 50868 THEN 'ANION GAP'\n        WHEN itemid = 50862 THEN 'ALBUMIN'\n        WHEN itemid = 51144 THEN 'BANDS'\n        WHEN itemid = 50882 THEN 'BICARBONATE'\n        WHEN itemid = 50885 THEN 'BILIRUBIN'\n        WHEN itemid = 50912 THEN 'CREATININE'\n        WHEN itemid = 50806 THEN 'CHLORIDE'\n        WHEN itemid = 50902 THEN 'CHLORIDE'\n        WHEN itemid = 50809 THEN 'GLUCOSE'\n        WHEN itemid = 50931 THEN 'GLUCOSE'\n        WHEN itemid = 50810 THEN 'HEMATOCRIT'\n        WHEN itemid = 51221 THEN 'HEMATOCRIT'\n        WHEN itemid = 50811 THEN 'HEMOGLOBIN'\n        WHEN itemid = 51222 THEN 'HEMOGLOBIN'\n        WHEN itemid = 50813 THEN 'LACTATE'\n        WHEN itemid = 51265 THEN 'PLATELET'\n        WHEN itemid = 50822 THEN 'POTASSIUM'\n        WHEN itemid = 50971 THEN 'POTASSIUM'\n        WHEN itemid = 51275 THEN 'PTT'\n        WHEN itemid = 51237 THEN 'INR'\n        WHEN itemid = 51274 THEN 'PT'\n        WHEN itemid = 50824 THEN 'SODIUM'\n        WHEN itemid = 50983 THEN 'SODIUM'\n        WHEN itemid = 51006 THEN 'BUN'\n        WHEN itemid = 51300 THEN 'WBC'\n        WHEN itemid = 51301 THEN 'WBC'\n      ELSE null\n    END as label\n  , -- add in some sanity checks on the values\n  -- the where clause below requires all valuenum to be > 0, so these are only upper limit checks\n    CASE\n      WHEN itemid = 50862 and valuenum >    10 THEN null -- g/dL 'ALBUMIN'\n      WHEN itemid = 50868 and valuenum > 10000 THEN null -- mEq/L 'ANION GAP'\n      WHEN itemid = 51144 and valuenum <     0 THEN null -- immature band forms, %\n      WHEN itemid = 51144 and valuenum >   100 THEN null -- immature band forms, %\n      WHEN itemid = 50882 and valuenum > 10000 THEN null -- mEq/L 'BICARBONATE'\n      WHEN itemid = 50885 and valuenum >   150 THEN null -- mg/dL 'BILIRUBIN'\n      WHEN itemid = 50806 and valuenum > 10000 THEN null -- mEq/L 'CHLORIDE'\n      WHEN itemid = 50902 and valuenum > 10000 THEN null -- mEq/L 'CHLORIDE'\n      WHEN itemid = 50912 and valuenum >   150 THEN null -- mg/dL 'CREATININE'\n      WHEN itemid = 50809 and valuenum > 10000 THEN null -- mg/dL 'GLUCOSE'\n      WHEN itemid = 50931 and valuenum > 10000 THEN null -- mg/dL 'GLUCOSE'\n      WHEN itemid = 50810 and valuenum >   100 THEN null -- % 'HEMATOCRIT'\n      WHEN itemid = 51221 and valuenum >   100 THEN null -- % 'HEMATOCRIT'\n      WHEN itemid = 50811 and valuenum >    50 THEN null -- g/dL 'HEMOGLOBIN'\n      WHEN itemid = 51222 and valuenum >    50 THEN null -- g/dL 'HEMOGLOBIN'\n      WHEN itemid = 50813 and valuenum >    50 THEN null -- mmol/L 'LACTATE'\n      WHEN itemid = 51265 and valuenum > 10000 THEN null -- K/uL 'PLATELET'\n      WHEN itemid = 50822 and valuenum >    30 THEN null -- mEq/L 'POTASSIUM'\n      WHEN itemid = 50971 and valuenum >    30 THEN null -- mEq/L 'POTASSIUM'\n      WHEN itemid = 51275 and valuenum >   150 THEN null -- sec 'PTT'\n      WHEN itemid = 51237 and valuenum >    50 THEN null -- 'INR'\n      WHEN itemid = 51274 and valuenum >   150 THEN null -- sec 'PT'\n      WHEN itemid = 50824 and valuenum >   200 THEN null -- mEq/L == mmol/L 'SODIUM'\n      WHEN itemid = 50983 and valuenum >   200 THEN null -- mEq/L == mmol/L 'SODIUM'\n      WHEN itemid = 51006 and valuenum >   300 THEN null -- 'BUN'\n      WHEN itemid = 51300 and valuenum >  1000 THEN null -- 'WBC'\n      WHEN itemid = 51301 and valuenum >  1000 THEN null -- 'WBC'\n    ELSE le.valuenum\n    END as valuenum\n\n  FROM icustays ie\n\n  LEFT JOIN labevents le\n    ON le.subject_id = ie.subject_id AND le.hadm_id = ie.hadm_id\n    AND le.charttime BETWEEN (DATETIME_SUB(ie.intime, INTERVAL '6' HOUR)) AND (DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n    AND le.ITEMID in\n    (\n      -- comment is: LABEL | CATEGORY | FLUID | NUMBER OF ROWS IN LABEVENTS\n      50868, -- ANION GAP | CHEMISTRY | BLOOD | 769895\n      50862, -- ALBUMIN | CHEMISTRY | BLOOD | 146697\n      51144, -- BANDS - hematology\n      50882, -- BICARBONATE | CHEMISTRY | BLOOD | 780733\n      50885, -- BILIRUBIN, TOTAL | CHEMISTRY | BLOOD | 238277\n      50912, -- CREATININE | CHEMISTRY | BLOOD | 797476\n      50902, -- CHLORIDE | CHEMISTRY | BLOOD | 795568\n      50806, -- CHLORIDE, WHOLE BLOOD | BLOOD GAS | BLOOD | 48187\n      50931, -- GLUCOSE | CHEMISTRY | BLOOD | 748981\n      50809, -- GLUCOSE | BLOOD GAS | BLOOD | 196734\n      51221, -- HEMATOCRIT | HEMATOLOGY | BLOOD | 881846\n      50810, -- HEMATOCRIT, CALCULATED | BLOOD GAS | BLOOD | 89715\n      51222, -- HEMOGLOBIN | HEMATOLOGY | BLOOD | 752523\n      50811, -- HEMOGLOBIN | BLOOD GAS | BLOOD | 89712\n      50813, -- LACTATE | BLOOD GAS | BLOOD | 187124\n      51265, -- PLATELET COUNT | HEMATOLOGY | BLOOD | 778444\n      50971, -- POTASSIUM | CHEMISTRY | BLOOD | 845825\n      50822, -- POTASSIUM, WHOLE BLOOD | BLOOD GAS | BLOOD | 192946\n      51275, -- PTT | HEMATOLOGY | BLOOD | 474937\n      51237, -- INR(PT) | HEMATOLOGY | BLOOD | 471183\n      51274, -- PT | HEMATOLOGY | BLOOD | 469090\n      50983, -- SODIUM | CHEMISTRY | BLOOD | 808489\n      50824, -- SODIUM, WHOLE BLOOD | BLOOD GAS | BLOOD | 71503\n      51006, -- UREA NITROGEN | CHEMISTRY | BLOOD | 791925\n      51301, -- WHITE BLOOD CELLS | HEMATOLOGY | BLOOD | 753301\n      51300  -- WBC COUNT | HEMATOLOGY | BLOOD | 2371\n    )\n    AND valuenum IS NOT null AND valuenum > 0 -- lab values cannot be 0 and cannot be negative\n) pvt\nGROUP BY pvt.subject_id, pvt.hadm_id, pvt.icustay_id\nORDER BY pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:20.168551Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 1.19, "status": "SELECT 61532"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 61532 in 1.19 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.359199Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.labs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.365628Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.labs_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.labs_first_day\"} */\nalter table \"mimic\".\"public\".\"labs_first_day\" rename to \"labs_first_day__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.labs_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.labs_first_day\"} */\nalter table \"mimic\".\"public\".\"labs_first_day\" rename to \"labs_first_day__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.366026Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.367246Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.labs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.374103Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.labs_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.labs_first_day\"} */\nalter table \"mimic\".\"public\".\"labs_first_day__dbt_tmp\" rename to \"labs_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.labs_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.labs_first_day\"} */\nalter table \"mimic\".\"public\".\"labs_first_day__dbt_tmp\" rename to \"labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.374512Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.375666Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.labs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.labs_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.380295Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.labs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.380673Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.labs_first_day", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.labs_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.381041Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.387103Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.labs_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.labs_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.389394Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.labs_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.labs_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"labs_first_day__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.labs_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.labs_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"labs_first_day__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.389638Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.392185Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.396592Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.labs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.labs_first_day: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.396960Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2df8e0>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2df8e0>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.398537Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.labs_first_day", "execution_time": 1, "index": 4, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "labs_first_day", "node_path": "firstday/labs_first_day.sql", "node_started_at": "2022-07-29T23:01:20.140592", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.labs_first_day"}, "status": "SELECT 61532", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "4 of 10 OK created table model public.labs_first_day ........................... [\u001b[32mSELECT 61532\u001b[0m in 1.26s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.399583Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:21.400253", "node_name": "labs_first_day", "node_path": "firstday/labs_first_day.sql", "node_started_at": "2022-07-29T23:01:20.140592", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.labs_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 61532", "code": "SELECT", "rows_affected": 61532}, "agate_table": null, "execution_time": 1.2565009593963623, "failures": null, "message": "SELECT 61532", "node": {"alias": "labs_first_day", "build_path": "target/run/mimic/models/firstday/labs_first_day.sql", "checksum": {"checksum": "61fcae9b4e2c32e81de96eac44e16631670264226f8f9dec61bf817afb54b92a", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/labs_first_day.sql", "compiled_sql": "-- This query pivots lab values taken in the first 24 hours of a patient's stay\n\n-- Have already confirmed that the unit of measurement is always the same: null or the correct unit\n\nSELECT\n  pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n  , min(CASE WHEN label = 'ANION GAP' THEN valuenum ELSE NULL END) AS aniongap_min\n  , max(CASE WHEN label = 'ANION GAP' THEN valuenum ELSE NULL END) AS aniongap_max\n  , min(CASE WHEN label = 'ALBUMIN' THEN valuenum ELSE NULL END) AS albumin_min\n  , max(CASE WHEN label = 'ALBUMIN' THEN valuenum ELSE NULL END) AS albumin_max\n  , min(CASE WHEN label = 'BANDS' THEN valuenum ELSE NULL END) AS bands_min\n  , max(CASE WHEN label = 'BANDS' THEN valuenum ELSE NULL END) AS bands_max\n  , min(CASE WHEN label = 'BICARBONATE' THEN valuenum ELSE NULL END) AS bicarbonate_min\n  , max(CASE WHEN label = 'BICARBONATE' THEN valuenum ELSE NULL END) AS bicarbonate_max\n  , min(CASE WHEN label = 'BILIRUBIN' THEN valuenum ELSE NULL END) AS bilirubin_min\n  , max(CASE WHEN label = 'BILIRUBIN' THEN valuenum ELSE NULL END) AS bilirubin_max\n  , min(CASE WHEN label = 'CREATININE' THEN valuenum ELSE NULL END) AS creatinine_min\n  , max(CASE WHEN label = 'CREATININE' THEN valuenum ELSE NULL END) AS creatinine_max\n  , min(CASE WHEN label = 'CHLORIDE' THEN valuenum ELSE NULL END) AS chloride_min\n  , max(CASE WHEN label = 'CHLORIDE' THEN valuenum ELSE NULL END) AS chloride_max\n  , min(CASE WHEN label = 'GLUCOSE' THEN valuenum ELSE NULL END) AS glucose_min\n  , max(CASE WHEN label = 'GLUCOSE' THEN valuenum ELSE NULL END) AS glucose_max\n  , min(CASE WHEN label = 'HEMATOCRIT' THEN valuenum ELSE NULL END) AS hematocrit_min\n  , max(CASE WHEN label = 'HEMATOCRIT' THEN valuenum ELSE NULL END) AS hematocrit_max\n  , min(CASE WHEN label = 'HEMOGLOBIN' THEN valuenum ELSE NULL END) AS hemoglobin_min\n  , max(CASE WHEN label = 'HEMOGLOBIN' THEN valuenum ELSE NULL END) AS hemoglobin_max\n  , min(CASE WHEN label = 'LACTATE' THEN valuenum ELSE NULL END) AS lactate_min\n  , max(CASE WHEN label = 'LACTATE' THEN valuenum ELSE NULL END) AS lactate_max\n  , min(CASE WHEN label = 'PLATELET' THEN valuenum ELSE NULL END) AS platelet_min\n  , max(CASE WHEN label = 'PLATELET' THEN valuenum ELSE NULL END) AS platelet_max\n  , min(CASE WHEN label = 'POTASSIUM' THEN valuenum ELSE NULL END) AS potassium_min\n  , max(CASE WHEN label = 'POTASSIUM' THEN valuenum ELSE NULL END) AS potassium_max\n  , min(CASE WHEN label = 'PTT' THEN valuenum ELSE NULL END) AS ptt_min\n  , max(CASE WHEN label = 'PTT' THEN valuenum ELSE NULL END) AS ptt_max\n  , min(CASE WHEN label = 'INR' THEN valuenum ELSE NULL END) AS inr_min\n  , max(CASE WHEN label = 'INR' THEN valuenum ELSE NULL END) AS inr_max\n  , min(CASE WHEN label = 'PT' THEN valuenum ELSE NULL END) AS pt_min\n  , max(CASE WHEN label = 'PT' THEN valuenum ELSE NULL END) AS pt_max\n  , min(CASE WHEN label = 'SODIUM' THEN valuenum ELSE NULL END) AS sodium_min\n  , max(CASE WHEN label = 'SODIUM' THEN valuenum ELSE NULL END) AS sodium_max\n  , min(CASE WHEN label = 'BUN' THEN valuenum ELSE NULL END) AS bun_min\n  , max(CASE WHEN label = 'BUN' THEN valuenum ELSE NULL END) AS bun_max\n  , min(CASE WHEN label = 'WBC' THEN valuenum ELSE NULL END) AS wbc_min\n  , max(CASE WHEN label = 'WBC' THEN valuenum ELSE NULL END) AS wbc_max\n\n\nFROM\n( -- begin query that extracts the data\n  SELECT ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- here we assign labels to ITEMIDs\n  -- this also fuses together multiple ITEMIDs containing the same data\n  , CASE\n        WHEN itemid = 50868 THEN 'ANION GAP'\n        WHEN itemid = 50862 THEN 'ALBUMIN'\n        WHEN itemid = 51144 THEN 'BANDS'\n        WHEN itemid = 50882 THEN 'BICARBONATE'\n        WHEN itemid = 50885 THEN 'BILIRUBIN'\n        WHEN itemid = 50912 THEN 'CREATININE'\n        WHEN itemid = 50806 THEN 'CHLORIDE'\n        WHEN itemid = 50902 THEN 'CHLORIDE'\n        WHEN itemid = 50809 THEN 'GLUCOSE'\n        WHEN itemid = 50931 THEN 'GLUCOSE'\n        WHEN itemid = 50810 THEN 'HEMATOCRIT'\n        WHEN itemid = 51221 THEN 'HEMATOCRIT'\n        WHEN itemid = 50811 THEN 'HEMOGLOBIN'\n        WHEN itemid = 51222 THEN 'HEMOGLOBIN'\n        WHEN itemid = 50813 THEN 'LACTATE'\n        WHEN itemid = 51265 THEN 'PLATELET'\n        WHEN itemid = 50822 THEN 'POTASSIUM'\n        WHEN itemid = 50971 THEN 'POTASSIUM'\n        WHEN itemid = 51275 THEN 'PTT'\n        WHEN itemid = 51237 THEN 'INR'\n        WHEN itemid = 51274 THEN 'PT'\n        WHEN itemid = 50824 THEN 'SODIUM'\n        WHEN itemid = 50983 THEN 'SODIUM'\n        WHEN itemid = 51006 THEN 'BUN'\n        WHEN itemid = 51300 THEN 'WBC'\n        WHEN itemid = 51301 THEN 'WBC'\n      ELSE null\n    END as label\n  , -- add in some sanity checks on the values\n  -- the where clause below requires all valuenum to be > 0, so these are only upper limit checks\n    CASE\n      WHEN itemid = 50862 and valuenum >    10 THEN null -- g/dL 'ALBUMIN'\n      WHEN itemid = 50868 and valuenum > 10000 THEN null -- mEq/L 'ANION GAP'\n      WHEN itemid = 51144 and valuenum <     0 THEN null -- immature band forms, %\n      WHEN itemid = 51144 and valuenum >   100 THEN null -- immature band forms, %\n      WHEN itemid = 50882 and valuenum > 10000 THEN null -- mEq/L 'BICARBONATE'\n      WHEN itemid = 50885 and valuenum >   150 THEN null -- mg/dL 'BILIRUBIN'\n      WHEN itemid = 50806 and valuenum > 10000 THEN null -- mEq/L 'CHLORIDE'\n      WHEN itemid = 50902 and valuenum > 10000 THEN null -- mEq/L 'CHLORIDE'\n      WHEN itemid = 50912 and valuenum >   150 THEN null -- mg/dL 'CREATININE'\n      WHEN itemid = 50809 and valuenum > 10000 THEN null -- mg/dL 'GLUCOSE'\n      WHEN itemid = 50931 and valuenum > 10000 THEN null -- mg/dL 'GLUCOSE'\n      WHEN itemid = 50810 and valuenum >   100 THEN null -- % 'HEMATOCRIT'\n      WHEN itemid = 51221 and valuenum >   100 THEN null -- % 'HEMATOCRIT'\n      WHEN itemid = 50811 and valuenum >    50 THEN null -- g/dL 'HEMOGLOBIN'\n      WHEN itemid = 51222 and valuenum >    50 THEN null -- g/dL 'HEMOGLOBIN'\n      WHEN itemid = 50813 and valuenum >    50 THEN null -- mmol/L 'LACTATE'\n      WHEN itemid = 51265 and valuenum > 10000 THEN null -- K/uL 'PLATELET'\n      WHEN itemid = 50822 and valuenum >    30 THEN null -- mEq/L 'POTASSIUM'\n      WHEN itemid = 50971 and valuenum >    30 THEN null -- mEq/L 'POTASSIUM'\n      WHEN itemid = 51275 and valuenum >   150 THEN null -- sec 'PTT'\n      WHEN itemid = 51237 and valuenum >    50 THEN null -- 'INR'\n      WHEN itemid = 51274 and valuenum >   150 THEN null -- sec 'PT'\n      WHEN itemid = 50824 and valuenum >   200 THEN null -- mEq/L == mmol/L 'SODIUM'\n      WHEN itemid = 50983 and valuenum >   200 THEN null -- mEq/L == mmol/L 'SODIUM'\n      WHEN itemid = 51006 and valuenum >   300 THEN null -- 'BUN'\n      WHEN itemid = 51300 and valuenum >  1000 THEN null -- 'WBC'\n      WHEN itemid = 51301 and valuenum >  1000 THEN null -- 'WBC'\n    ELSE le.valuenum\n    END as valuenum\n\n  FROM icustays ie\n\n  LEFT JOIN labevents le\n    ON le.subject_id = ie.subject_id AND le.hadm_id = ie.hadm_id\n    AND le.charttime BETWEEN (DATETIME_SUB(ie.intime, INTERVAL '6' HOUR)) AND (DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n    AND le.ITEMID in\n    (\n      -- comment is: LABEL | CATEGORY | FLUID | NUMBER OF ROWS IN LABEVENTS\n      50868, -- ANION GAP | CHEMISTRY | BLOOD | 769895\n      50862, -- ALBUMIN | CHEMISTRY | BLOOD | 146697\n      51144, -- BANDS - hematology\n      50882, -- BICARBONATE | CHEMISTRY | BLOOD | 780733\n      50885, -- BILIRUBIN, TOTAL | CHEMISTRY | BLOOD | 238277\n      50912, -- CREATININE | CHEMISTRY | BLOOD | 797476\n      50902, -- CHLORIDE | CHEMISTRY | BLOOD | 795568\n      50806, -- CHLORIDE, WHOLE BLOOD | BLOOD GAS | BLOOD | 48187\n      50931, -- GLUCOSE | CHEMISTRY | BLOOD | 748981\n      50809, -- GLUCOSE | BLOOD GAS | BLOOD | 196734\n      51221, -- HEMATOCRIT | HEMATOLOGY | BLOOD | 881846\n      50810, -- HEMATOCRIT, CALCULATED | BLOOD GAS | BLOOD | 89715\n      51222, -- HEMOGLOBIN | HEMATOLOGY | BLOOD | 752523\n      50811, -- HEMOGLOBIN | BLOOD GAS | BLOOD | 89712\n      50813, -- LACTATE | BLOOD GAS | BLOOD | 187124\n      51265, -- PLATELET COUNT | HEMATOLOGY | BLOOD | 778444\n      50971, -- POTASSIUM | CHEMISTRY | BLOOD | 845825\n      50822, -- POTASSIUM, WHOLE BLOOD | BLOOD GAS | BLOOD | 192946\n      51275, -- PTT | HEMATOLOGY | BLOOD | 474937\n      51237, -- INR(PT) | HEMATOLOGY | BLOOD | 471183\n      51274, -- PT | HEMATOLOGY | BLOOD | 469090\n      50983, -- SODIUM | CHEMISTRY | BLOOD | 808489\n      50824, -- SODIUM, WHOLE BLOOD | BLOOD GAS | BLOOD | 71503\n      51006, -- UREA NITROGEN | CHEMISTRY | BLOOD | 791925\n      51301, -- WHITE BLOOD CELLS | HEMATOLOGY | BLOOD | 753301\n      51300  -- WBC COUNT | HEMATOLOGY | BLOOD | 2371\n    )\n    AND valuenum IS NOT null AND valuenum > 0 -- lab values cannot be 0 and cannot be negative\n) pvt\nGROUP BY pvt.subject_id, pvt.hadm_id, pvt.icustay_id\nORDER BY pvt.subject_id, pvt.hadm_id, pvt.icustay_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.1261923, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "labs_first_day"], "meta": {}, "name": "labs_first_day", "original_file_path": "models/firstday/labs_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/labs_first_day.sql", "raw_sql": "-- This query pivots lab values taken in the first 24 hours of a patient's stay\n\n-- Have already confirmed that the unit of measurement is always the same: null or the correct unit\n\nSELECT\n  pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n  , min(CASE WHEN label = 'ANION GAP' THEN valuenum ELSE NULL END) AS aniongap_min\n  , max(CASE WHEN label = 'ANION GAP' THEN valuenum ELSE NULL END) AS aniongap_max\n  , min(CASE WHEN label = 'ALBUMIN' THEN valuenum ELSE NULL END) AS albumin_min\n  , max(CASE WHEN label = 'ALBUMIN' THEN valuenum ELSE NULL END) AS albumin_max\n  , min(CASE WHEN label = 'BANDS' THEN valuenum ELSE NULL END) AS bands_min\n  , max(CASE WHEN label = 'BANDS' THEN valuenum ELSE NULL END) AS bands_max\n  , min(CASE WHEN label = 'BICARBONATE' THEN valuenum ELSE NULL END) AS bicarbonate_min\n  , max(CASE WHEN label = 'BICARBONATE' THEN valuenum ELSE NULL END) AS bicarbonate_max\n  , min(CASE WHEN label = 'BILIRUBIN' THEN valuenum ELSE NULL END) AS bilirubin_min\n  , max(CASE WHEN label = 'BILIRUBIN' THEN valuenum ELSE NULL END) AS bilirubin_max\n  , min(CASE WHEN label = 'CREATININE' THEN valuenum ELSE NULL END) AS creatinine_min\n  , max(CASE WHEN label = 'CREATININE' THEN valuenum ELSE NULL END) AS creatinine_max\n  , min(CASE WHEN label = 'CHLORIDE' THEN valuenum ELSE NULL END) AS chloride_min\n  , max(CASE WHEN label = 'CHLORIDE' THEN valuenum ELSE NULL END) AS chloride_max\n  , min(CASE WHEN label = 'GLUCOSE' THEN valuenum ELSE NULL END) AS glucose_min\n  , max(CASE WHEN label = 'GLUCOSE' THEN valuenum ELSE NULL END) AS glucose_max\n  , min(CASE WHEN label = 'HEMATOCRIT' THEN valuenum ELSE NULL END) AS hematocrit_min\n  , max(CASE WHEN label = 'HEMATOCRIT' THEN valuenum ELSE NULL END) AS hematocrit_max\n  , min(CASE WHEN label = 'HEMOGLOBIN' THEN valuenum ELSE NULL END) AS hemoglobin_min\n  , max(CASE WHEN label = 'HEMOGLOBIN' THEN valuenum ELSE NULL END) AS hemoglobin_max\n  , min(CASE WHEN label = 'LACTATE' THEN valuenum ELSE NULL END) AS lactate_min\n  , max(CASE WHEN label = 'LACTATE' THEN valuenum ELSE NULL END) AS lactate_max\n  , min(CASE WHEN label = 'PLATELET' THEN valuenum ELSE NULL END) AS platelet_min\n  , max(CASE WHEN label = 'PLATELET' THEN valuenum ELSE NULL END) AS platelet_max\n  , min(CASE WHEN label = 'POTASSIUM' THEN valuenum ELSE NULL END) AS potassium_min\n  , max(CASE WHEN label = 'POTASSIUM' THEN valuenum ELSE NULL END) AS potassium_max\n  , min(CASE WHEN label = 'PTT' THEN valuenum ELSE NULL END) AS ptt_min\n  , max(CASE WHEN label = 'PTT' THEN valuenum ELSE NULL END) AS ptt_max\n  , min(CASE WHEN label = 'INR' THEN valuenum ELSE NULL END) AS inr_min\n  , max(CASE WHEN label = 'INR' THEN valuenum ELSE NULL END) AS inr_max\n  , min(CASE WHEN label = 'PT' THEN valuenum ELSE NULL END) AS pt_min\n  , max(CASE WHEN label = 'PT' THEN valuenum ELSE NULL END) AS pt_max\n  , min(CASE WHEN label = 'SODIUM' THEN valuenum ELSE NULL END) AS sodium_min\n  , max(CASE WHEN label = 'SODIUM' THEN valuenum ELSE NULL END) AS sodium_max\n  , min(CASE WHEN label = 'BUN' THEN valuenum ELSE NULL END) AS bun_min\n  , max(CASE WHEN label = 'BUN' THEN valuenum ELSE NULL END) AS bun_max\n  , min(CASE WHEN label = 'WBC' THEN valuenum ELSE NULL END) AS wbc_min\n  , max(CASE WHEN label = 'WBC' THEN valuenum ELSE NULL END) AS wbc_max\n\n\nFROM\n( -- begin query that extracts the data\n  SELECT ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- here we assign labels to ITEMIDs\n  -- this also fuses together multiple ITEMIDs containing the same data\n  , CASE\n        WHEN itemid = 50868 THEN 'ANION GAP'\n        WHEN itemid = 50862 THEN 'ALBUMIN'\n        WHEN itemid = 51144 THEN 'BANDS'\n        WHEN itemid = 50882 THEN 'BICARBONATE'\n        WHEN itemid = 50885 THEN 'BILIRUBIN'\n        WHEN itemid = 50912 THEN 'CREATININE'\n        WHEN itemid = 50806 THEN 'CHLORIDE'\n        WHEN itemid = 50902 THEN 'CHLORIDE'\n        WHEN itemid = 50809 THEN 'GLUCOSE'\n        WHEN itemid = 50931 THEN 'GLUCOSE'\n        WHEN itemid = 50810 THEN 'HEMATOCRIT'\n        WHEN itemid = 51221 THEN 'HEMATOCRIT'\n        WHEN itemid = 50811 THEN 'HEMOGLOBIN'\n        WHEN itemid = 51222 THEN 'HEMOGLOBIN'\n        WHEN itemid = 50813 THEN 'LACTATE'\n        WHEN itemid = 51265 THEN 'PLATELET'\n        WHEN itemid = 50822 THEN 'POTASSIUM'\n        WHEN itemid = 50971 THEN 'POTASSIUM'\n        WHEN itemid = 51275 THEN 'PTT'\n        WHEN itemid = 51237 THEN 'INR'\n        WHEN itemid = 51274 THEN 'PT'\n        WHEN itemid = 50824 THEN 'SODIUM'\n        WHEN itemid = 50983 THEN 'SODIUM'\n        WHEN itemid = 51006 THEN 'BUN'\n        WHEN itemid = 51300 THEN 'WBC'\n        WHEN itemid = 51301 THEN 'WBC'\n      ELSE null\n    END as label\n  , -- add in some sanity checks on the values\n  -- the where clause below requires all valuenum to be > 0, so these are only upper limit checks\n    CASE\n      WHEN itemid = 50862 and valuenum >    10 THEN null -- g/dL 'ALBUMIN'\n      WHEN itemid = 50868 and valuenum > 10000 THEN null -- mEq/L 'ANION GAP'\n      WHEN itemid = 51144 and valuenum <     0 THEN null -- immature band forms, %\n      WHEN itemid = 51144 and valuenum >   100 THEN null -- immature band forms, %\n      WHEN itemid = 50882 and valuenum > 10000 THEN null -- mEq/L 'BICARBONATE'\n      WHEN itemid = 50885 and valuenum >   150 THEN null -- mg/dL 'BILIRUBIN'\n      WHEN itemid = 50806 and valuenum > 10000 THEN null -- mEq/L 'CHLORIDE'\n      WHEN itemid = 50902 and valuenum > 10000 THEN null -- mEq/L 'CHLORIDE'\n      WHEN itemid = 50912 and valuenum >   150 THEN null -- mg/dL 'CREATININE'\n      WHEN itemid = 50809 and valuenum > 10000 THEN null -- mg/dL 'GLUCOSE'\n      WHEN itemid = 50931 and valuenum > 10000 THEN null -- mg/dL 'GLUCOSE'\n      WHEN itemid = 50810 and valuenum >   100 THEN null -- % 'HEMATOCRIT'\n      WHEN itemid = 51221 and valuenum >   100 THEN null -- % 'HEMATOCRIT'\n      WHEN itemid = 50811 and valuenum >    50 THEN null -- g/dL 'HEMOGLOBIN'\n      WHEN itemid = 51222 and valuenum >    50 THEN null -- g/dL 'HEMOGLOBIN'\n      WHEN itemid = 50813 and valuenum >    50 THEN null -- mmol/L 'LACTATE'\n      WHEN itemid = 51265 and valuenum > 10000 THEN null -- K/uL 'PLATELET'\n      WHEN itemid = 50822 and valuenum >    30 THEN null -- mEq/L 'POTASSIUM'\n      WHEN itemid = 50971 and valuenum >    30 THEN null -- mEq/L 'POTASSIUM'\n      WHEN itemid = 51275 and valuenum >   150 THEN null -- sec 'PTT'\n      WHEN itemid = 51237 and valuenum >    50 THEN null -- 'INR'\n      WHEN itemid = 51274 and valuenum >   150 THEN null -- sec 'PT'\n      WHEN itemid = 50824 and valuenum >   200 THEN null -- mEq/L == mmol/L 'SODIUM'\n      WHEN itemid = 50983 and valuenum >   200 THEN null -- mEq/L == mmol/L 'SODIUM'\n      WHEN itemid = 51006 and valuenum >   300 THEN null -- 'BUN'\n      WHEN itemid = 51300 and valuenum >  1000 THEN null -- 'WBC'\n      WHEN itemid = 51301 and valuenum >  1000 THEN null -- 'WBC'\n    ELSE le.valuenum\n    END as valuenum\n\n  FROM icustays ie\n\n  LEFT JOIN labevents le\n    ON le.subject_id = ie.subject_id AND le.hadm_id = ie.hadm_id\n    AND le.charttime BETWEEN (DATETIME_SUB(ie.intime, INTERVAL '6' HOUR)) AND (DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n    AND le.ITEMID in\n    (\n      -- comment is: LABEL | CATEGORY | FLUID | NUMBER OF ROWS IN LABEVENTS\n      50868, -- ANION GAP | CHEMISTRY | BLOOD | 769895\n      50862, -- ALBUMIN | CHEMISTRY | BLOOD | 146697\n      51144, -- BANDS - hematology\n      50882, -- BICARBONATE | CHEMISTRY | BLOOD | 780733\n      50885, -- BILIRUBIN, TOTAL | CHEMISTRY | BLOOD | 238277\n      50912, -- CREATININE | CHEMISTRY | BLOOD | 797476\n      50902, -- CHLORIDE | CHEMISTRY | BLOOD | 795568\n      50806, -- CHLORIDE, WHOLE BLOOD | BLOOD GAS | BLOOD | 48187\n      50931, -- GLUCOSE | CHEMISTRY | BLOOD | 748981\n      50809, -- GLUCOSE | BLOOD GAS | BLOOD | 196734\n      51221, -- HEMATOCRIT | HEMATOLOGY | BLOOD | 881846\n      50810, -- HEMATOCRIT, CALCULATED | BLOOD GAS | BLOOD | 89715\n      51222, -- HEMOGLOBIN | HEMATOLOGY | BLOOD | 752523\n      50811, -- HEMOGLOBIN | BLOOD GAS | BLOOD | 89712\n      50813, -- LACTATE | BLOOD GAS | BLOOD | 187124\n      51265, -- PLATELET COUNT | HEMATOLOGY | BLOOD | 778444\n      50971, -- POTASSIUM | CHEMISTRY | BLOOD | 845825\n      50822, -- POTASSIUM, WHOLE BLOOD | BLOOD GAS | BLOOD | 192946\n      51275, -- PTT | HEMATOLOGY | BLOOD | 474937\n      51237, -- INR(PT) | HEMATOLOGY | BLOOD | 471183\n      51274, -- PT | HEMATOLOGY | BLOOD | 469090\n      50983, -- SODIUM | CHEMISTRY | BLOOD | 808489\n      50824, -- SODIUM, WHOLE BLOOD | BLOOD GAS | BLOOD | 71503\n      51006, -- UREA NITROGEN | CHEMISTRY | BLOOD | 791925\n      51301, -- WHITE BLOOD CELLS | HEMATOLOGY | BLOOD | 753301\n      51300  -- WBC COUNT | HEMATOLOGY | BLOOD | 2371\n    )\n    AND valuenum IS NOT null AND valuenum > 0 -- lab values cannot be 0 and cannot be negative\n) pvt\nGROUP BY pvt.subject_id, pvt.hadm_id, pvt.icustay_id\nORDER BY pvt.subject_id, pvt.hadm_id, pvt.icustay_id", "refs": [], "relation_name": "\"mimic\".\"public\".\"labs_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.labs_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:20.144892Z", "name": "compile", "started_at": "2022-07-29T23:01:20.142929Z"}, {"completed_at": "2022-07-29T23:01:21.396551Z", "name": "execute", "started_at": "2022-07-29T23:01:20.145376Z"}]}, "unique_id": "model.mimic.labs_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.labs_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.400468Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "rrt_first_day", "node_path": "firstday/rrt_first_day.sql", "node_started_at": "2022-07-29T23:01:21.401120", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.rrt_first_day"}, "unique_id": "model.mimic.rrt_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.rrt_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.401192Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.rrt_first_day", "index": 5, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "rrt_first_day", "node_path": "firstday/rrt_first_day.sql", "node_started_at": "2022-07-29T23:01:21.401120", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.rrt_first_day"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "5 of 10 START table model public.rrt_first_day ................................. [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.401536Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.rrt_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.403143Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "rrt_first_day", "node_path": "firstday/rrt_first_day.sql", "node_started_at": "2022-07-29T23:01:21.401120", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.rrt_first_day"}, "unique_id": "model.mimic.rrt_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.rrt_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.403806Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.rrt_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.rrt_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.404280Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.rrt_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.406884Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.408063Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "rrt_first_day", "node_path": "firstday/rrt_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.rrt_first_day"}, "unique_id": "model.mimic.rrt_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.rrt_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.408490Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.rrt_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.419533Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.rrt_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.420576Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.rrt_first_day", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.rrt_first_day: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.420852Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.421293Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.427838Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.rrt_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.428223Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.rrt_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.rrt_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"rrt_first_day__dbt_tmp\"\n  as (\n    -- determines if patients received any dialysis during their stay\n\n-- Some example aggregate queries which summarize the data here..\n-- This query estimates 6.7% of ICU patients received RRT.\n    -- select count(rrt.icustay_id) as numobs\n    -- , sum(rrt) as numrrt\n    -- , sum(case when rrt=1 then 1 else 0 end)*100.0 / count(rrt.icustay_id)\n    -- as percent_rrt\n    -- from rrt\n    -- inner join icustays ie on rrt.icustay_id = ie.icustay_id\n    -- inner join patients p\n    -- on rrt.subject_id = p.subject_id\n    -- and p.dob < ie.intime - interval '1' year\n    -- inner join admissions adm\n    -- on rrt.hadm_id = adm.hadm_id\n\n-- This query estimates that 4.6% of first ICU stays received RRT.\n    -- select\n    --   count(rrt.icustay_id) as numobs\n    --   , sum(rrt) as numrrt\n    --   , sum(case when rrt=1 then 1 else 0 end)*100.0 / count(rrt.icustay_id)\n    -- as percent_rrt\n    -- from\n    -- (\n    -- select ie.icustay_id, rrt.rrt\n    --   , ROW_NUMBER() over (partition by ie.subject_id order by ie.intime) rn\n    -- from rrt\n    -- inner join icustays ie\n    --   on rrt.icustay_id = ie.icustay_id\n    -- inner join patients p\n    --   on rrt.subject_id = p.subject_id\n    -- and p.dob < ie.intime - interval '1' year\n    -- inner join admissions adm\n    --   on rrt.hadm_id = adm.hadm_id\n    -- ) rrt\n    -- where rn = 1\n\nwith cv as\n(\n  select ie.icustay_id\n    , max(\n        case\n          when ce.itemid in (152,148,149,146,147,151,150) and value is not null then 1\n          when ce.itemid in (229,235,241,247,253,259,265,271) and value = 'Dialysis Line' then 1\n          when ce.itemid = 582 and value in ('CAVH Start','CAVH D/C','CVVHD Start','CVVHD D/C','Hemodialysis st','Hemodialysis end') then 1\n        else 0 end\n        ) as RRT\n  FROM icustays ie\n  inner join chartevents ce\n    on ie.icustay_id = ce.icustay_id\n    and ce.itemid in\n    (\n       152 -- \"Dialysis Type\"61449\n      ,148 -- \"Dialysis Access Site\"60335\n      ,149 -- \"Dialysis Access Type\"60030\n      ,146 -- \"Dialysate Flow ml/hr\"57445\n      ,147 -- \"Dialysate Infusing\"56605\n      ,151 -- \"Dialysis Site Appear\"37345\n      ,150 -- \"Dialysis Machine\"27472\n      ,229 -- INV Line#1 [Type]\n      ,235 -- INV Line#2 [Type]\n      ,241 -- INV Line#3 [Type]\n      ,247 -- INV Line#4 [Type]\n      ,253 -- INV Line#5 [Type]\n      ,259 -- INV Line#6 [Type]\n      ,265 -- INV Line#7 [Type]\n      ,271 -- INV Line#8 [Type]\n      ,582 -- Procedures\n    )\n    and ce.value is not null\n    and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n  where ie.dbsource = 'carevue'\n  group by ie.icustay_id\n)\n, mv_ce as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join chartevents ce\n    on ie.icustay_id = ce.icustay_id\n    and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n      -- Checkboxes\n        226118 -- | Dialysis Catheter placed in outside facility      | Access Lines - Invasive | chartevents        | Checkbox\n      , 227357 -- | Dialysis Catheter Dressing Occlusive              | Access Lines - Invasive | chartevents        | Checkbox\n      , 225725 -- | Dialysis Catheter Tip Cultured                    | Access Lines - Invasive | chartevents        | Checkbox\n      -- Numeric values\n      , 226499 -- | Hemodialysis Output                               | Dialysis                | chartevents        | Numeric\n      , 224154 -- | Dialysate Rate                                    | Dialysis                | chartevents        | Numeric\n      , 225810 -- | Dwell Time (Peritoneal Dialysis)                  | Dialysis                | chartevents        | Numeric\n      , 227639 -- | Medication Added Amount  #2 (Peritoneal Dialysis) | Dialysis                | chartevents        | Numeric\n      , 225183 -- | Current Goal                     | Dialysis | chartevents        | Numeric\n      , 227438 -- | Volume not removed               | Dialysis | chartevents        | Numeric\n      , 224191 -- | Hourly Patient Fluid Removal     | Dialysis | chartevents        | Numeric\n      , 225806 -- | Volume In (PD)                   | Dialysis | chartevents        | Numeric\n      , 225807 -- | Volume Out (PD)                  | Dialysis | chartevents        | Numeric\n      , 228004 -- | Citrate (ACD-A)                  | Dialysis | chartevents        | Numeric\n      , 228005 -- | PBP (Prefilter) Replacement Rate | Dialysis | chartevents        | Numeric\n      , 228006 -- | Post Filter Replacement Rate     | Dialysis | chartevents        | Numeric\n      , 224144 -- | Blood Flow (ml/min)              | Dialysis | chartevents        | Numeric\n      , 224145 -- | Heparin Dose (per hour)          | Dialysis | chartevents        | Numeric\n      , 224149 -- | Access Pressure                  | Dialysis | chartevents        | Numeric\n      , 224150 -- | Filter Pressure                  | Dialysis | chartevents        | Numeric\n      , 224151 -- | Effluent Pressure                | Dialysis | chartevents        | Numeric\n      , 224152 -- | Return Pressure                  | Dialysis | chartevents        | Numeric\n      , 224153 -- | Replacement Rate                 | Dialysis | chartevents        | Numeric\n      , 224404 -- | ART Lumen Volume                 | Dialysis | chartevents        | Numeric\n      , 224406 -- | VEN Lumen Volume                 | Dialysis | chartevents        | Numeric\n      , 226457 -- | Ultrafiltrate Output             | Dialysis | chartevents        | Numeric\n    )\n    and valuenum > 0 -- also ensures it's not null\n  group by ie.icustay_id\n)\n, mv_ie as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join inputevents_mv tt\n    on ie.icustay_id = tt.icustay_id\n    and tt.starttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n        227536 --\tKCl (CRRT)\tMedications\tinputevents_mv\tSolution\n      , 227525 --\tCalcium Gluconate (CRRT)\tMedications\tinputevents_mv\tSolution\n    )\n    and amount > 0 -- also ensures it's not null\n  group by ie.icustay_id\n)\n, mv_de as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join datetimeevents tt\n    on ie.icustay_id = tt.icustay_id\n    and tt.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n      -- TODO: unsure how to handle \"Last dialysis\"\n      --  225128 -- | Last dialysis                                     | Adm History/FHPA        | datetimeevents     | Date time\n        225318 -- | Dialysis Catheter Cap Change                      | Access Lines - Invasive | datetimeevents     | Date time\n      , 225319 -- | Dialysis Catheter Change over Wire Date           | Access Lines - Invasive | datetimeevents     | Date time\n      , 225321 -- | Dialysis Catheter Dressing Change                 | Access Lines - Invasive | datetimeevents     | Date time\n      , 225322 -- | Dialysis Catheter Insertion Date                  | Access Lines - Invasive | datetimeevents     | Date time\n      , 225324 -- | Dialysis CatheterTubing Change                    | Access Lines - Invasive | datetimeevents     | Date time\n    )\n  group by ie.icustay_id\n)\n, mv_pe as\n(\n    select ie.icustay_id\n      , 1 as RRT\n    FROM icustays ie\n    inner join procedureevents_mv tt\n      on ie.icustay_id = tt.icustay_id\n      and tt.starttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n      and itemid in\n      (\n          225441 -- | Hemodialysis                                      | 4-Procedures            | procedureevents_mv | Process\n        , 225802 -- | Dialysis - CRRT                                   | Dialysis                | procedureevents_mv | Process\n        , 225803 -- | Dialysis - CVVHD                                  | Dialysis                | procedureevents_mv | Process\n        , 225805 -- | Peritoneal Dialysis                               | Dialysis                | procedureevents_mv | Process\n        , 224270 -- | Dialysis Catheter                                 | Access Lines - Invasive | procedureevents_mv | Process\n        , 225809 -- | Dialysis - CVVHDF                                 | Dialysis                | procedureevents_mv | Process\n        , 225955 -- | Dialysis - SCUF                                   | Dialysis                | procedureevents_mv | Process\n        , 225436 -- | CRRT Filter Change               | Dialysis | procedureevents_mv | Process\n      )\n    group by ie.icustay_id\n)\nselect ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n      when cv.RRT = 1 then 1\n      when mv_ce.RRT = 1 then 1\n      when mv_ie.RRT = 1 then 1\n      when mv_de.RRT = 1 then 1\n      when mv_pe.RRT = 1 then 1\n      else 0\n    end as rrt\nFROM icustays ie\nleft join cv\n  on ie.icustay_id = cv.icustay_id\nleft join mv_ce\n  on ie.icustay_id = mv_ce.icustay_id\nleft join mv_ie\n  on ie.icustay_id = mv_ie.icustay_id\nleft join mv_de\n  on ie.icustay_id = mv_de.icustay_id\nleft join mv_pe\n  on ie.icustay_id = mv_pe.icustay_id\norder by ie.icustay_id\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.rrt_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.rrt_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"rrt_first_day__dbt_tmp\"\n  as (\n    -- determines if patients received any dialysis during their stay\n\n-- Some example aggregate queries which summarize the data here..\n-- This query estimates 6.7% of ICU patients received RRT.\n    -- select count(rrt.icustay_id) as numobs\n    -- , sum(rrt) as numrrt\n    -- , sum(case when rrt=1 then 1 else 0 end)*100.0 / count(rrt.icustay_id)\n    -- as percent_rrt\n    -- from rrt\n    -- inner join icustays ie on rrt.icustay_id = ie.icustay_id\n    -- inner join patients p\n    -- on rrt.subject_id = p.subject_id\n    -- and p.dob < ie.intime - interval '1' year\n    -- inner join admissions adm\n    -- on rrt.hadm_id = adm.hadm_id\n\n-- This query estimates that 4.6% of first ICU stays received RRT.\n    -- select\n    --   count(rrt.icustay_id) as numobs\n    --   , sum(rrt) as numrrt\n    --   , sum(case when rrt=1 then 1 else 0 end)*100.0 / count(rrt.icustay_id)\n    -- as percent_rrt\n    -- from\n    -- (\n    -- select ie.icustay_id, rrt.rrt\n    --   , ROW_NUMBER() over (partition by ie.subject_id order by ie.intime) rn\n    -- from rrt\n    -- inner join icustays ie\n    --   on rrt.icustay_id = ie.icustay_id\n    -- inner join patients p\n    --   on rrt.subject_id = p.subject_id\n    -- and p.dob < ie.intime - interval '1' year\n    -- inner join admissions adm\n    --   on rrt.hadm_id = adm.hadm_id\n    -- ) rrt\n    -- where rn = 1\n\nwith cv as\n(\n  select ie.icustay_id\n    , max(\n        case\n          when ce.itemid in (152,148,149,146,147,151,150) and value is not null then 1\n          when ce.itemid in (229,235,241,247,253,259,265,271) and value = 'Dialysis Line' then 1\n          when ce.itemid = 582 and value in ('CAVH Start','CAVH D/C','CVVHD Start','CVVHD D/C','Hemodialysis st','Hemodialysis end') then 1\n        else 0 end\n        ) as RRT\n  FROM icustays ie\n  inner join chartevents ce\n    on ie.icustay_id = ce.icustay_id\n    and ce.itemid in\n    (\n       152 -- \"Dialysis Type\"61449\n      ,148 -- \"Dialysis Access Site\"60335\n      ,149 -- \"Dialysis Access Type\"60030\n      ,146 -- \"Dialysate Flow ml/hr\"57445\n      ,147 -- \"Dialysate Infusing\"56605\n      ,151 -- \"Dialysis Site Appear\"37345\n      ,150 -- \"Dialysis Machine\"27472\n      ,229 -- INV Line#1 [Type]\n      ,235 -- INV Line#2 [Type]\n      ,241 -- INV Line#3 [Type]\n      ,247 -- INV Line#4 [Type]\n      ,253 -- INV Line#5 [Type]\n      ,259 -- INV Line#6 [Type]\n      ,265 -- INV Line#7 [Type]\n      ,271 -- INV Line#8 [Type]\n      ,582 -- Procedures\n    )\n    and ce.value is not null\n    and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n  where ie.dbsource = 'carevue'\n  group by ie.icustay_id\n)\n, mv_ce as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join chartevents ce\n    on ie.icustay_id = ce.icustay_id\n    and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n      -- Checkboxes\n        226118 -- | Dialysis Catheter placed in outside facility      | Access Lines - Invasive | chartevents        | Checkbox\n      , 227357 -- | Dialysis Catheter Dressing Occlusive              | Access Lines - Invasive | chartevents        | Checkbox\n      , 225725 -- | Dialysis Catheter Tip Cultured                    | Access Lines - Invasive | chartevents        | Checkbox\n      -- Numeric values\n      , 226499 -- | Hemodialysis Output                               | Dialysis                | chartevents        | Numeric\n      , 224154 -- | Dialysate Rate                                    | Dialysis                | chartevents        | Numeric\n      , 225810 -- | Dwell Time (Peritoneal Dialysis)                  | Dialysis                | chartevents        | Numeric\n      , 227639 -- | Medication Added Amount  #2 (Peritoneal Dialysis) | Dialysis                | chartevents        | Numeric\n      , 225183 -- | Current Goal                     | Dialysis | chartevents        | Numeric\n      , 227438 -- | Volume not removed               | Dialysis | chartevents        | Numeric\n      , 224191 -- | Hourly Patient Fluid Removal     | Dialysis | chartevents        | Numeric\n      , 225806 -- | Volume In (PD)                   | Dialysis | chartevents        | Numeric\n      , 225807 -- | Volume Out (PD)                  | Dialysis | chartevents        | Numeric\n      , 228004 -- | Citrate (ACD-A)                  | Dialysis | chartevents        | Numeric\n      , 228005 -- | PBP (Prefilter) Replacement Rate | Dialysis | chartevents        | Numeric\n      , 228006 -- | Post Filter Replacement Rate     | Dialysis | chartevents        | Numeric\n      , 224144 -- | Blood Flow (ml/min)              | Dialysis | chartevents        | Numeric\n      , 224145 -- | Heparin Dose (per hour)          | Dialysis | chartevents        | Numeric\n      , 224149 -- | Access Pressure                  | Dialysis | chartevents        | Numeric\n      , 224150 -- | Filter Pressure                  | Dialysis | chartevents        | Numeric\n      , 224151 -- | Effluent Pressure                | Dialysis | chartevents        | Numeric\n      , 224152 -- | Return Pressure                  | Dialysis | chartevents        | Numeric\n      , 224153 -- | Replacement Rate                 | Dialysis | chartevents        | Numeric\n      , 224404 -- | ART Lumen Volume                 | Dialysis | chartevents        | Numeric\n      , 224406 -- | VEN Lumen Volume                 | Dialysis | chartevents        | Numeric\n      , 226457 -- | Ultrafiltrate Output             | Dialysis | chartevents        | Numeric\n    )\n    and valuenum > 0 -- also ensures it's not null\n  group by ie.icustay_id\n)\n, mv_ie as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join inputevents_mv tt\n    on ie.icustay_id = tt.icustay_id\n    and tt.starttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n        227536 --\tKCl (CRRT)\tMedications\tinputevents_mv\tSolution\n      , 227525 --\tCalcium Gluconate (CRRT)\tMedications\tinputevents_mv\tSolution\n    )\n    and amount > 0 -- also ensures it's not null\n  group by ie.icustay_id\n)\n, mv_de as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join datetimeevents tt\n    on ie.icustay_id = tt.icustay_id\n    and tt.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n      -- TODO: unsure how to handle \"Last dialysis\"\n      --  225128 -- | Last dialysis                                     | Adm History/FHPA        | datetimeevents     | Date time\n        225318 -- | Dialysis Catheter Cap Change                      | Access Lines - Invasive | datetimeevents     | Date time\n      , 225319 -- | Dialysis Catheter Change over Wire Date           | Access Lines - Invasive | datetimeevents     | Date time\n      , 225321 -- | Dialysis Catheter Dressing Change                 | Access Lines - Invasive | datetimeevents     | Date time\n      , 225322 -- | Dialysis Catheter Insertion Date                  | Access Lines - Invasive | datetimeevents     | Date time\n      , 225324 -- | Dialysis CatheterTubing Change                    | Access Lines - Invasive | datetimeevents     | Date time\n    )\n  group by ie.icustay_id\n)\n, mv_pe as\n(\n    select ie.icustay_id\n      , 1 as RRT\n    FROM icustays ie\n    inner join procedureevents_mv tt\n      on ie.icustay_id = tt.icustay_id\n      and tt.starttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n      and itemid in\n      (\n          225441 -- | Hemodialysis                                      | 4-Procedures            | procedureevents_mv | Process\n        , 225802 -- | Dialysis - CRRT                                   | Dialysis                | procedureevents_mv | Process\n        , 225803 -- | Dialysis - CVVHD                                  | Dialysis                | procedureevents_mv | Process\n        , 225805 -- | Peritoneal Dialysis                               | Dialysis                | procedureevents_mv | Process\n        , 224270 -- | Dialysis Catheter                                 | Access Lines - Invasive | procedureevents_mv | Process\n        , 225809 -- | Dialysis - CVVHDF                                 | Dialysis                | procedureevents_mv | Process\n        , 225955 -- | Dialysis - SCUF                                   | Dialysis                | procedureevents_mv | Process\n        , 225436 -- | CRRT Filter Change               | Dialysis | procedureevents_mv | Process\n      )\n    group by ie.icustay_id\n)\nselect ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n      when cv.RRT = 1 then 1\n      when mv_ce.RRT = 1 then 1\n      when mv_ie.RRT = 1 then 1\n      when mv_de.RRT = 1 then 1\n      when mv_pe.RRT = 1 then 1\n      else 0\n    end as rrt\nFROM icustays ie\nleft join cv\n  on ie.icustay_id = cv.icustay_id\nleft join mv_ce\n  on ie.icustay_id = mv_ce.icustay_id\nleft join mv_ie\n  on ie.icustay_id = mv_ie.icustay_id\nleft join mv_de\n  on ie.icustay_id = mv_de.icustay_id\nleft join mv_pe\n  on ie.icustay_id = mv_pe.icustay_id\norder by ie.icustay_id\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.428625Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.28, "status": "SELECT 61532"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 61532 in 0.28 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.707501Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.rrt_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.717420Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.rrt_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.rrt_first_day\"} */\nalter table \"mimic\".\"public\".\"rrt_first_day\" rename to \"rrt_first_day__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.rrt_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.rrt_first_day\"} */\nalter table \"mimic\".\"public\".\"rrt_first_day\" rename to \"rrt_first_day__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.718078Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.719097Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.rrt_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.722797Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.rrt_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.rrt_first_day\"} */\nalter table \"mimic\".\"public\".\"rrt_first_day__dbt_tmp\" rename to \"rrt_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.rrt_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.rrt_first_day\"} */\nalter table \"mimic\".\"public\".\"rrt_first_day__dbt_tmp\" rename to \"rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.723118Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.724019Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.rrt_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.rrt_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.727217Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.rrt_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.727448Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.rrt_first_day", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.rrt_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.727688Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.733871Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.rrt_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.rrt_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.736253Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.rrt_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.rrt_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"rrt_first_day__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.rrt_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.rrt_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"rrt_first_day__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.736492Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.738501Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.741652Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.rrt_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.rrt_first_day: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.742107Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2df730>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2df730>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.742930Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.rrt_first_day", "execution_time": 0, "index": 5, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "rrt_first_day", "node_path": "firstday/rrt_first_day.sql", "node_started_at": "2022-07-29T23:01:21.401120", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.rrt_first_day"}, "status": "SELECT 61532", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "5 of 10 OK created table model public.rrt_first_day ............................ [\u001b[32mSELECT 61532\u001b[0m in 0.34s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.743433Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:21.743877", "node_name": "rrt_first_day", "node_path": "firstday/rrt_first_day.sql", "node_started_at": "2022-07-29T23:01:21.401120", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.rrt_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 61532", "code": "SELECT", "rows_affected": 61532}, "agate_table": null, "execution_time": 0.34038305282592773, "failures": null, "message": "SELECT 61532", "node": {"alias": "rrt_first_day", "build_path": "target/run/mimic/models/firstday/rrt_first_day.sql", "checksum": {"checksum": "eb95d96b90481ab076a4ad8351847c6b61200e3a23d2ee5931231172dfc25634", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/rrt_first_day.sql", "compiled_sql": "-- determines if patients received any dialysis during their stay\n\n-- Some example aggregate queries which summarize the data here..\n-- This query estimates 6.7% of ICU patients received RRT.\n    -- select count(rrt.icustay_id) as numobs\n    -- , sum(rrt) as numrrt\n    -- , sum(case when rrt=1 then 1 else 0 end)*100.0 / count(rrt.icustay_id)\n    -- as percent_rrt\n    -- from rrt\n    -- inner join icustays ie on rrt.icustay_id = ie.icustay_id\n    -- inner join patients p\n    -- on rrt.subject_id = p.subject_id\n    -- and p.dob < ie.intime - interval '1' year\n    -- inner join admissions adm\n    -- on rrt.hadm_id = adm.hadm_id\n\n-- This query estimates that 4.6% of first ICU stays received RRT.\n    -- select\n    --   count(rrt.icustay_id) as numobs\n    --   , sum(rrt) as numrrt\n    --   , sum(case when rrt=1 then 1 else 0 end)*100.0 / count(rrt.icustay_id)\n    -- as percent_rrt\n    -- from\n    -- (\n    -- select ie.icustay_id, rrt.rrt\n    --   , ROW_NUMBER() over (partition by ie.subject_id order by ie.intime) rn\n    -- from rrt\n    -- inner join icustays ie\n    --   on rrt.icustay_id = ie.icustay_id\n    -- inner join patients p\n    --   on rrt.subject_id = p.subject_id\n    -- and p.dob < ie.intime - interval '1' year\n    -- inner join admissions adm\n    --   on rrt.hadm_id = adm.hadm_id\n    -- ) rrt\n    -- where rn = 1\n\nwith cv as\n(\n  select ie.icustay_id\n    , max(\n        case\n          when ce.itemid in (152,148,149,146,147,151,150) and value is not null then 1\n          when ce.itemid in (229,235,241,247,253,259,265,271) and value = 'Dialysis Line' then 1\n          when ce.itemid = 582 and value in ('CAVH Start','CAVH D/C','CVVHD Start','CVVHD D/C','Hemodialysis st','Hemodialysis end') then 1\n        else 0 end\n        ) as RRT\n  FROM icustays ie\n  inner join chartevents ce\n    on ie.icustay_id = ce.icustay_id\n    and ce.itemid in\n    (\n       152 -- \"Dialysis Type\"61449\n      ,148 -- \"Dialysis Access Site\"60335\n      ,149 -- \"Dialysis Access Type\"60030\n      ,146 -- \"Dialysate Flow ml/hr\"57445\n      ,147 -- \"Dialysate Infusing\"56605\n      ,151 -- \"Dialysis Site Appear\"37345\n      ,150 -- \"Dialysis Machine\"27472\n      ,229 -- INV Line#1 [Type]\n      ,235 -- INV Line#2 [Type]\n      ,241 -- INV Line#3 [Type]\n      ,247 -- INV Line#4 [Type]\n      ,253 -- INV Line#5 [Type]\n      ,259 -- INV Line#6 [Type]\n      ,265 -- INV Line#7 [Type]\n      ,271 -- INV Line#8 [Type]\n      ,582 -- Procedures\n    )\n    and ce.value is not null\n    and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n  where ie.dbsource = 'carevue'\n  group by ie.icustay_id\n)\n, mv_ce as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join chartevents ce\n    on ie.icustay_id = ce.icustay_id\n    and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n      -- Checkboxes\n        226118 -- | Dialysis Catheter placed in outside facility      | Access Lines - Invasive | chartevents        | Checkbox\n      , 227357 -- | Dialysis Catheter Dressing Occlusive              | Access Lines - Invasive | chartevents        | Checkbox\n      , 225725 -- | Dialysis Catheter Tip Cultured                    | Access Lines - Invasive | chartevents        | Checkbox\n      -- Numeric values\n      , 226499 -- | Hemodialysis Output                               | Dialysis                | chartevents        | Numeric\n      , 224154 -- | Dialysate Rate                                    | Dialysis                | chartevents        | Numeric\n      , 225810 -- | Dwell Time (Peritoneal Dialysis)                  | Dialysis                | chartevents        | Numeric\n      , 227639 -- | Medication Added Amount  #2 (Peritoneal Dialysis) | Dialysis                | chartevents        | Numeric\n      , 225183 -- | Current Goal                     | Dialysis | chartevents        | Numeric\n      , 227438 -- | Volume not removed               | Dialysis | chartevents        | Numeric\n      , 224191 -- | Hourly Patient Fluid Removal     | Dialysis | chartevents        | Numeric\n      , 225806 -- | Volume In (PD)                   | Dialysis | chartevents        | Numeric\n      , 225807 -- | Volume Out (PD)                  | Dialysis | chartevents        | Numeric\n      , 228004 -- | Citrate (ACD-A)                  | Dialysis | chartevents        | Numeric\n      , 228005 -- | PBP (Prefilter) Replacement Rate | Dialysis | chartevents        | Numeric\n      , 228006 -- | Post Filter Replacement Rate     | Dialysis | chartevents        | Numeric\n      , 224144 -- | Blood Flow (ml/min)              | Dialysis | chartevents        | Numeric\n      , 224145 -- | Heparin Dose (per hour)          | Dialysis | chartevents        | Numeric\n      , 224149 -- | Access Pressure                  | Dialysis | chartevents        | Numeric\n      , 224150 -- | Filter Pressure                  | Dialysis | chartevents        | Numeric\n      , 224151 -- | Effluent Pressure                | Dialysis | chartevents        | Numeric\n      , 224152 -- | Return Pressure                  | Dialysis | chartevents        | Numeric\n      , 224153 -- | Replacement Rate                 | Dialysis | chartevents        | Numeric\n      , 224404 -- | ART Lumen Volume                 | Dialysis | chartevents        | Numeric\n      , 224406 -- | VEN Lumen Volume                 | Dialysis | chartevents        | Numeric\n      , 226457 -- | Ultrafiltrate Output             | Dialysis | chartevents        | Numeric\n    )\n    and valuenum > 0 -- also ensures it's not null\n  group by ie.icustay_id\n)\n, mv_ie as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join inputevents_mv tt\n    on ie.icustay_id = tt.icustay_id\n    and tt.starttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n        227536 --\tKCl (CRRT)\tMedications\tinputevents_mv\tSolution\n      , 227525 --\tCalcium Gluconate (CRRT)\tMedications\tinputevents_mv\tSolution\n    )\n    and amount > 0 -- also ensures it's not null\n  group by ie.icustay_id\n)\n, mv_de as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join datetimeevents tt\n    on ie.icustay_id = tt.icustay_id\n    and tt.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n      -- TODO: unsure how to handle \"Last dialysis\"\n      --  225128 -- | Last dialysis                                     | Adm History/FHPA        | datetimeevents     | Date time\n        225318 -- | Dialysis Catheter Cap Change                      | Access Lines - Invasive | datetimeevents     | Date time\n      , 225319 -- | Dialysis Catheter Change over Wire Date           | Access Lines - Invasive | datetimeevents     | Date time\n      , 225321 -- | Dialysis Catheter Dressing Change                 | Access Lines - Invasive | datetimeevents     | Date time\n      , 225322 -- | Dialysis Catheter Insertion Date                  | Access Lines - Invasive | datetimeevents     | Date time\n      , 225324 -- | Dialysis CatheterTubing Change                    | Access Lines - Invasive | datetimeevents     | Date time\n    )\n  group by ie.icustay_id\n)\n, mv_pe as\n(\n    select ie.icustay_id\n      , 1 as RRT\n    FROM icustays ie\n    inner join procedureevents_mv tt\n      on ie.icustay_id = tt.icustay_id\n      and tt.starttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n      and itemid in\n      (\n          225441 -- | Hemodialysis                                      | 4-Procedures            | procedureevents_mv | Process\n        , 225802 -- | Dialysis - CRRT                                   | Dialysis                | procedureevents_mv | Process\n        , 225803 -- | Dialysis - CVVHD                                  | Dialysis                | procedureevents_mv | Process\n        , 225805 -- | Peritoneal Dialysis                               | Dialysis                | procedureevents_mv | Process\n        , 224270 -- | Dialysis Catheter                                 | Access Lines - Invasive | procedureevents_mv | Process\n        , 225809 -- | Dialysis - CVVHDF                                 | Dialysis                | procedureevents_mv | Process\n        , 225955 -- | Dialysis - SCUF                                   | Dialysis                | procedureevents_mv | Process\n        , 225436 -- | CRRT Filter Change               | Dialysis | procedureevents_mv | Process\n      )\n    group by ie.icustay_id\n)\nselect ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n      when cv.RRT = 1 then 1\n      when mv_ce.RRT = 1 then 1\n      when mv_ie.RRT = 1 then 1\n      when mv_de.RRT = 1 then 1\n      when mv_pe.RRT = 1 then 1\n      else 0\n    end as rrt\nFROM icustays ie\nleft join cv\n  on ie.icustay_id = cv.icustay_id\nleft join mv_ce\n  on ie.icustay_id = mv_ce.icustay_id\nleft join mv_ie\n  on ie.icustay_id = mv_ie.icustay_id\nleft join mv_de\n  on ie.icustay_id = mv_de.icustay_id\nleft join mv_pe\n  on ie.icustay_id = mv_pe.icustay_id\norder by ie.icustay_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.1312377, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "rrt_first_day"], "meta": {}, "name": "rrt_first_day", "original_file_path": "models/firstday/rrt_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/rrt_first_day.sql", "raw_sql": "-- determines if patients received any dialysis during their stay\n\n-- Some example aggregate queries which summarize the data here..\n-- This query estimates 6.7% of ICU patients received RRT.\n    -- select count(rrt.icustay_id) as numobs\n    -- , sum(rrt) as numrrt\n    -- , sum(case when rrt=1 then 1 else 0 end)*100.0 / count(rrt.icustay_id)\n    -- as percent_rrt\n    -- from rrt\n    -- inner join icustays ie on rrt.icustay_id = ie.icustay_id\n    -- inner join patients p\n    -- on rrt.subject_id = p.subject_id\n    -- and p.dob < ie.intime - interval '1' year\n    -- inner join admissions adm\n    -- on rrt.hadm_id = adm.hadm_id\n\n-- This query estimates that 4.6% of first ICU stays received RRT.\n    -- select\n    --   count(rrt.icustay_id) as numobs\n    --   , sum(rrt) as numrrt\n    --   , sum(case when rrt=1 then 1 else 0 end)*100.0 / count(rrt.icustay_id)\n    -- as percent_rrt\n    -- from\n    -- (\n    -- select ie.icustay_id, rrt.rrt\n    --   , ROW_NUMBER() over (partition by ie.subject_id order by ie.intime) rn\n    -- from rrt\n    -- inner join icustays ie\n    --   on rrt.icustay_id = ie.icustay_id\n    -- inner join patients p\n    --   on rrt.subject_id = p.subject_id\n    -- and p.dob < ie.intime - interval '1' year\n    -- inner join admissions adm\n    --   on rrt.hadm_id = adm.hadm_id\n    -- ) rrt\n    -- where rn = 1\n\nwith cv as\n(\n  select ie.icustay_id\n    , max(\n        case\n          when ce.itemid in (152,148,149,146,147,151,150) and value is not null then 1\n          when ce.itemid in (229,235,241,247,253,259,265,271) and value = 'Dialysis Line' then 1\n          when ce.itemid = 582 and value in ('CAVH Start','CAVH D/C','CVVHD Start','CVVHD D/C','Hemodialysis st','Hemodialysis end') then 1\n        else 0 end\n        ) as RRT\n  FROM icustays ie\n  inner join chartevents ce\n    on ie.icustay_id = ce.icustay_id\n    and ce.itemid in\n    (\n       152 -- \"Dialysis Type\"61449\n      ,148 -- \"Dialysis Access Site\"60335\n      ,149 -- \"Dialysis Access Type\"60030\n      ,146 -- \"Dialysate Flow ml/hr\"57445\n      ,147 -- \"Dialysate Infusing\"56605\n      ,151 -- \"Dialysis Site Appear\"37345\n      ,150 -- \"Dialysis Machine\"27472\n      ,229 -- INV Line#1 [Type]\n      ,235 -- INV Line#2 [Type]\n      ,241 -- INV Line#3 [Type]\n      ,247 -- INV Line#4 [Type]\n      ,253 -- INV Line#5 [Type]\n      ,259 -- INV Line#6 [Type]\n      ,265 -- INV Line#7 [Type]\n      ,271 -- INV Line#8 [Type]\n      ,582 -- Procedures\n    )\n    and ce.value is not null\n    and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n  where ie.dbsource = 'carevue'\n  group by ie.icustay_id\n)\n, mv_ce as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join chartevents ce\n    on ie.icustay_id = ce.icustay_id\n    and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n      -- Checkboxes\n        226118 -- | Dialysis Catheter placed in outside facility      | Access Lines - Invasive | chartevents        | Checkbox\n      , 227357 -- | Dialysis Catheter Dressing Occlusive              | Access Lines - Invasive | chartevents        | Checkbox\n      , 225725 -- | Dialysis Catheter Tip Cultured                    | Access Lines - Invasive | chartevents        | Checkbox\n      -- Numeric values\n      , 226499 -- | Hemodialysis Output                               | Dialysis                | chartevents        | Numeric\n      , 224154 -- | Dialysate Rate                                    | Dialysis                | chartevents        | Numeric\n      , 225810 -- | Dwell Time (Peritoneal Dialysis)                  | Dialysis                | chartevents        | Numeric\n      , 227639 -- | Medication Added Amount  #2 (Peritoneal Dialysis) | Dialysis                | chartevents        | Numeric\n      , 225183 -- | Current Goal                     | Dialysis | chartevents        | Numeric\n      , 227438 -- | Volume not removed               | Dialysis | chartevents        | Numeric\n      , 224191 -- | Hourly Patient Fluid Removal     | Dialysis | chartevents        | Numeric\n      , 225806 -- | Volume In (PD)                   | Dialysis | chartevents        | Numeric\n      , 225807 -- | Volume Out (PD)                  | Dialysis | chartevents        | Numeric\n      , 228004 -- | Citrate (ACD-A)                  | Dialysis | chartevents        | Numeric\n      , 228005 -- | PBP (Prefilter) Replacement Rate | Dialysis | chartevents        | Numeric\n      , 228006 -- | Post Filter Replacement Rate     | Dialysis | chartevents        | Numeric\n      , 224144 -- | Blood Flow (ml/min)              | Dialysis | chartevents        | Numeric\n      , 224145 -- | Heparin Dose (per hour)          | Dialysis | chartevents        | Numeric\n      , 224149 -- | Access Pressure                  | Dialysis | chartevents        | Numeric\n      , 224150 -- | Filter Pressure                  | Dialysis | chartevents        | Numeric\n      , 224151 -- | Effluent Pressure                | Dialysis | chartevents        | Numeric\n      , 224152 -- | Return Pressure                  | Dialysis | chartevents        | Numeric\n      , 224153 -- | Replacement Rate                 | Dialysis | chartevents        | Numeric\n      , 224404 -- | ART Lumen Volume                 | Dialysis | chartevents        | Numeric\n      , 224406 -- | VEN Lumen Volume                 | Dialysis | chartevents        | Numeric\n      , 226457 -- | Ultrafiltrate Output             | Dialysis | chartevents        | Numeric\n    )\n    and valuenum > 0 -- also ensures it's not null\n  group by ie.icustay_id\n)\n, mv_ie as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join inputevents_mv tt\n    on ie.icustay_id = tt.icustay_id\n    and tt.starttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n        227536 --\tKCl (CRRT)\tMedications\tinputevents_mv\tSolution\n      , 227525 --\tCalcium Gluconate (CRRT)\tMedications\tinputevents_mv\tSolution\n    )\n    and amount > 0 -- also ensures it's not null\n  group by ie.icustay_id\n)\n, mv_de as\n(\n  select ie.icustay_id\n    , 1 as RRT\n  FROM icustays ie\n  inner join datetimeevents tt\n    on ie.icustay_id = tt.icustay_id\n    and tt.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    and itemid in\n    (\n      -- TODO: unsure how to handle \"Last dialysis\"\n      --  225128 -- | Last dialysis                                     | Adm History/FHPA        | datetimeevents     | Date time\n        225318 -- | Dialysis Catheter Cap Change                      | Access Lines - Invasive | datetimeevents     | Date time\n      , 225319 -- | Dialysis Catheter Change over Wire Date           | Access Lines - Invasive | datetimeevents     | Date time\n      , 225321 -- | Dialysis Catheter Dressing Change                 | Access Lines - Invasive | datetimeevents     | Date time\n      , 225322 -- | Dialysis Catheter Insertion Date                  | Access Lines - Invasive | datetimeevents     | Date time\n      , 225324 -- | Dialysis CatheterTubing Change                    | Access Lines - Invasive | datetimeevents     | Date time\n    )\n  group by ie.icustay_id\n)\n, mv_pe as\n(\n    select ie.icustay_id\n      , 1 as RRT\n    FROM icustays ie\n    inner join procedureevents_mv tt\n      on ie.icustay_id = tt.icustay_id\n      and tt.starttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n      and itemid in\n      (\n          225441 -- | Hemodialysis                                      | 4-Procedures            | procedureevents_mv | Process\n        , 225802 -- | Dialysis - CRRT                                   | Dialysis                | procedureevents_mv | Process\n        , 225803 -- | Dialysis - CVVHD                                  | Dialysis                | procedureevents_mv | Process\n        , 225805 -- | Peritoneal Dialysis                               | Dialysis                | procedureevents_mv | Process\n        , 224270 -- | Dialysis Catheter                                 | Access Lines - Invasive | procedureevents_mv | Process\n        , 225809 -- | Dialysis - CVVHDF                                 | Dialysis                | procedureevents_mv | Process\n        , 225955 -- | Dialysis - SCUF                                   | Dialysis                | procedureevents_mv | Process\n        , 225436 -- | CRRT Filter Change               | Dialysis | procedureevents_mv | Process\n      )\n    group by ie.icustay_id\n)\nselect ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n      when cv.RRT = 1 then 1\n      when mv_ce.RRT = 1 then 1\n      when mv_ie.RRT = 1 then 1\n      when mv_de.RRT = 1 then 1\n      when mv_pe.RRT = 1 then 1\n      else 0\n    end as rrt\nFROM icustays ie\nleft join cv\n  on ie.icustay_id = cv.icustay_id\nleft join mv_ce\n  on ie.icustay_id = mv_ce.icustay_id\nleft join mv_ie\n  on ie.icustay_id = mv_ie.icustay_id\nleft join mv_de\n  on ie.icustay_id = mv_de.icustay_id\nleft join mv_pe\n  on ie.icustay_id = mv_pe.icustay_id\norder by ie.icustay_id", "refs": [], "relation_name": "\"mimic\".\"public\".\"rrt_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.rrt_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:21.407951Z", "name": "compile", "started_at": "2022-07-29T23:01:21.404243Z"}, {"completed_at": "2022-07-29T23:01:21.741621Z", "name": "execute", "started_at": "2022-07-29T23:01:21.408808Z"}]}, "unique_id": "model.mimic.rrt_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.rrt_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.744046Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "urine_output_first_day", "node_path": "firstday/urine_output_first_day.sql", "node_started_at": "2022-07-29T23:01:21.744760", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.urine_output_first_day"}, "unique_id": "model.mimic.urine_output_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.urine_output_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.744824Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.urine_output_first_day", "index": 6, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "urine_output_first_day", "node_path": "firstday/urine_output_first_day.sql", "node_started_at": "2022-07-29T23:01:21.744760", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.urine_output_first_day"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "6 of 10 START table model public.urine_output_first_day ........................ [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.745308Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.urine_output_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.746014Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "urine_output_first_day", "node_path": "firstday/urine_output_first_day.sql", "node_started_at": "2022-07-29T23:01:21.744760", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.urine_output_first_day"}, "unique_id": "model.mimic.urine_output_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.urine_output_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.746599Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.urine_output_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.urine_output_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.746887Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.urine_output_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.748145Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.748615Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "urine_output_first_day", "node_path": "firstday/urine_output_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.urine_output_first_day"}, "unique_id": "model.mimic.urine_output_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.urine_output_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.748748Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.urine_output_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.760532Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.urine_output_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.761347Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.urine_output_first_day", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.urine_output_first_day: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.761583Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.761873Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.771264Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.urine_output_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.771735Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.urine_output_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.urine_output_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"urine_output_first_day__dbt_tmp\"\n  as (\n    -- ------------------------------------------------------------------\n-- Purpose: Create a view of the urine output for each ICUSTAY_ID over the first 24 hours.\n-- ------------------------------------------------------------------\n\nselect\n  -- patient identifiers\n  ie.subject_id, ie.hadm_id, ie.icustay_id\n\n  -- volumes associated with urine output ITEMIDs\n  , sum(\n      -- we consider input of GU irrigant as a negative volume\n      case\n        when oe.itemid = 227488 and oe.value > 0 then -1*oe.value\n        else oe.value\n    end) as urineoutput\nFROM icustays ie\n-- Join to the outputevents table to get urine output\nleft join outputevents oe\n-- join on all patient identifiers\non ie.subject_id = oe.subject_id and ie.hadm_id = oe.hadm_id and ie.icustay_id = oe.icustay_id\n-- and ensure the data occurs during the first day\nand oe.charttime between ie.intime and (DATETIME_ADD(ie.intime, INTERVAL '1' DAY)) -- first ICU day\nwhere itemid in\n(\n-- these are the most frequently occurring urine output observations in CareVue\n40055, -- \"Urine Out Foley\"\n43175, -- \"Urine .\"\n40069, -- \"Urine Out Void\"\n40094, -- \"Urine Out Condom Cath\"\n40715, -- \"Urine Out Suprapubic\"\n40473, -- \"Urine Out IleoConduit\"\n40085, -- \"Urine Out Incontinent\"\n40057, -- \"Urine Out Rt Nephrostomy\"\n40056, -- \"Urine Out Lt Nephrostomy\"\n40405, -- \"Urine Out Other\"\n40428, -- \"Urine Out Straight Cath\"\n40086,--\tUrine Out Incontinent\n40096, -- \"Urine Out Ureteral Stent #1\"\n40651, -- \"Urine Out Ureteral Stent #2\"\n\n-- these are the most frequently occurring urine output observations in MetaVision\n226559, -- \"Foley\"\n226560, -- \"Void\"\n226561, -- \"Condom Cath\"\n226584, -- \"Ileoconduit\"\n226563, -- \"Suprapubic\"\n226564, -- \"R Nephrostomy\"\n226565, -- \"L Nephrostomy\"\n226567, --\tStraight Cath\n226557, -- R Ureteral Stent\n226558, -- L Ureteral Stent\n227488, -- GU Irrigant Volume In\n227489  -- GU Irrigant/Urine Volume Out\n)\ngroup by ie.subject_id, ie.hadm_id, ie.icustay_id\norder by ie.subject_id, ie.hadm_id, ie.icustay_id\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.urine_output_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.urine_output_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"urine_output_first_day__dbt_tmp\"\n  as (\n    -- ------------------------------------------------------------------\n-- Purpose: Create a view of the urine output for each ICUSTAY_ID over the first 24 hours.\n-- ------------------------------------------------------------------\n\nselect\n  -- patient identifiers\n  ie.subject_id, ie.hadm_id, ie.icustay_id\n\n  -- volumes associated with urine output ITEMIDs\n  , sum(\n      -- we consider input of GU irrigant as a negative volume\n      case\n        when oe.itemid = 227488 and oe.value > 0 then -1*oe.value\n        else oe.value\n    end) as urineoutput\nFROM icustays ie\n-- Join to the outputevents table to get urine output\nleft join outputevents oe\n-- join on all patient identifiers\non ie.subject_id = oe.subject_id and ie.hadm_id = oe.hadm_id and ie.icustay_id = oe.icustay_id\n-- and ensure the data occurs during the first day\nand oe.charttime between ie.intime and (DATETIME_ADD(ie.intime, INTERVAL '1' DAY)) -- first ICU day\nwhere itemid in\n(\n-- these are the most frequently occurring urine output observations in CareVue\n40055, -- \"Urine Out Foley\"\n43175, -- \"Urine .\"\n40069, -- \"Urine Out Void\"\n40094, -- \"Urine Out Condom Cath\"\n40715, -- \"Urine Out Suprapubic\"\n40473, -- \"Urine Out IleoConduit\"\n40085, -- \"Urine Out Incontinent\"\n40057, -- \"Urine Out Rt Nephrostomy\"\n40056, -- \"Urine Out Lt Nephrostomy\"\n40405, -- \"Urine Out Other\"\n40428, -- \"Urine Out Straight Cath\"\n40086,--\tUrine Out Incontinent\n40096, -- \"Urine Out Ureteral Stent #1\"\n40651, -- \"Urine Out Ureteral Stent #2\"\n\n-- these are the most frequently occurring urine output observations in MetaVision\n226559, -- \"Foley\"\n226560, -- \"Void\"\n226561, -- \"Condom Cath\"\n226584, -- \"Ileoconduit\"\n226563, -- \"Suprapubic\"\n226564, -- \"R Nephrostomy\"\n226565, -- \"L Nephrostomy\"\n226567, --\tStraight Cath\n226557, -- R Ureteral Stent\n226558, -- L Ureteral Stent\n227488, -- GU Irrigant Volume In\n227489  -- GU Irrigant/Urine Volume Out\n)\ngroup by ie.subject_id, ie.hadm_id, ie.icustay_id\norder by ie.subject_id, ie.hadm_id, ie.icustay_id\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:21.771929Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 3.11, "status": "SELECT 53359"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 53359 in 3.11 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.879905Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.urine_output_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.885123Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.urine_output_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.urine_output_first_day\"} */\nalter table \"mimic\".\"public\".\"urine_output_first_day\" rename to \"urine_output_first_day__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.urine_output_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.urine_output_first_day\"} */\nalter table \"mimic\".\"public\".\"urine_output_first_day\" rename to \"urine_output_first_day__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.885424Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.886308Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.urine_output_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.891277Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.urine_output_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.urine_output_first_day\"} */\nalter table \"mimic\".\"public\".\"urine_output_first_day__dbt_tmp\" rename to \"urine_output_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.urine_output_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.urine_output_first_day\"} */\nalter table \"mimic\".\"public\".\"urine_output_first_day__dbt_tmp\" rename to \"urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.891739Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.892866Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.urine_output_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.urine_output_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.896370Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.urine_output_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.896653Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.urine_output_first_day", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.urine_output_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.896782Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.902212Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.urine_output_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.urine_output_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.905062Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.urine_output_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.urine_output_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"urine_output_first_day__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.urine_output_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.urine_output_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"urine_output_first_day__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.905277Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.907574Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.911550Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.urine_output_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.urine_output_first_day: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.911868Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5f5ca490>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5f5ca490>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.912620Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.urine_output_first_day", "execution_time": 3, "index": 6, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "urine_output_first_day", "node_path": "firstday/urine_output_first_day.sql", "node_started_at": "2022-07-29T23:01:21.744760", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.urine_output_first_day"}, "status": "SELECT 53359", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "6 of 10 OK created table model public.urine_output_first_day ................... [\u001b[32mSELECT 53359\u001b[0m in 3.17s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.913034Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:24.913287", "node_name": "urine_output_first_day", "node_path": "firstday/urine_output_first_day.sql", "node_started_at": "2022-07-29T23:01:21.744760", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.urine_output_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 53359", "code": "SELECT", "rows_affected": 53359}, "agate_table": null, "execution_time": 3.166973114013672, "failures": null, "message": "SELECT 53359", "node": {"alias": "urine_output_first_day", "build_path": "target/run/mimic/models/firstday/urine_output_first_day.sql", "checksum": {"checksum": "c834c3f4b5d0bdc0800cf687289d0a8b2b9e81a9b52f634cb5a7b093289b8f01", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/urine_output_first_day.sql", "compiled_sql": "-- ------------------------------------------------------------------\n-- Purpose: Create a view of the urine output for each ICUSTAY_ID over the first 24 hours.\n-- ------------------------------------------------------------------\n\nselect\n  -- patient identifiers\n  ie.subject_id, ie.hadm_id, ie.icustay_id\n\n  -- volumes associated with urine output ITEMIDs\n  , sum(\n      -- we consider input of GU irrigant as a negative volume\n      case\n        when oe.itemid = 227488 and oe.value > 0 then -1*oe.value\n        else oe.value\n    end) as urineoutput\nFROM icustays ie\n-- Join to the outputevents table to get urine output\nleft join outputevents oe\n-- join on all patient identifiers\non ie.subject_id = oe.subject_id and ie.hadm_id = oe.hadm_id and ie.icustay_id = oe.icustay_id\n-- and ensure the data occurs during the first day\nand oe.charttime between ie.intime and (DATETIME_ADD(ie.intime, INTERVAL '1' DAY)) -- first ICU day\nwhere itemid in\n(\n-- these are the most frequently occurring urine output observations in CareVue\n40055, -- \"Urine Out Foley\"\n43175, -- \"Urine .\"\n40069, -- \"Urine Out Void\"\n40094, -- \"Urine Out Condom Cath\"\n40715, -- \"Urine Out Suprapubic\"\n40473, -- \"Urine Out IleoConduit\"\n40085, -- \"Urine Out Incontinent\"\n40057, -- \"Urine Out Rt Nephrostomy\"\n40056, -- \"Urine Out Lt Nephrostomy\"\n40405, -- \"Urine Out Other\"\n40428, -- \"Urine Out Straight Cath\"\n40086,--\tUrine Out Incontinent\n40096, -- \"Urine Out Ureteral Stent #1\"\n40651, -- \"Urine Out Ureteral Stent #2\"\n\n-- these are the most frequently occurring urine output observations in MetaVision\n226559, -- \"Foley\"\n226560, -- \"Void\"\n226561, -- \"Condom Cath\"\n226584, -- \"Ileoconduit\"\n226563, -- \"Suprapubic\"\n226564, -- \"R Nephrostomy\"\n226565, -- \"L Nephrostomy\"\n226567, --\tStraight Cath\n226557, -- R Ureteral Stent\n226558, -- L Ureteral Stent\n227488, -- GU Irrigant Volume In\n227489  -- GU Irrigant/Urine Volume Out\n)\ngroup by ie.subject_id, ie.hadm_id, ie.icustay_id\norder by ie.subject_id, ie.hadm_id, ie.icustay_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.1423333, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "urine_output_first_day"], "meta": {}, "name": "urine_output_first_day", "original_file_path": "models/firstday/urine_output_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/urine_output_first_day.sql", "raw_sql": "-- ------------------------------------------------------------------\n-- Purpose: Create a view of the urine output for each ICUSTAY_ID over the first 24 hours.\n-- ------------------------------------------------------------------\n\nselect\n  -- patient identifiers\n  ie.subject_id, ie.hadm_id, ie.icustay_id\n\n  -- volumes associated with urine output ITEMIDs\n  , sum(\n      -- we consider input of GU irrigant as a negative volume\n      case\n        when oe.itemid = 227488 and oe.value > 0 then -1*oe.value\n        else oe.value\n    end) as urineoutput\nFROM icustays ie\n-- Join to the outputevents table to get urine output\nleft join outputevents oe\n-- join on all patient identifiers\non ie.subject_id = oe.subject_id and ie.hadm_id = oe.hadm_id and ie.icustay_id = oe.icustay_id\n-- and ensure the data occurs during the first day\nand oe.charttime between ie.intime and (DATETIME_ADD(ie.intime, INTERVAL '1' DAY)) -- first ICU day\nwhere itemid in\n(\n-- these are the most frequently occurring urine output observations in CareVue\n40055, -- \"Urine Out Foley\"\n43175, -- \"Urine .\"\n40069, -- \"Urine Out Void\"\n40094, -- \"Urine Out Condom Cath\"\n40715, -- \"Urine Out Suprapubic\"\n40473, -- \"Urine Out IleoConduit\"\n40085, -- \"Urine Out Incontinent\"\n40057, -- \"Urine Out Rt Nephrostomy\"\n40056, -- \"Urine Out Lt Nephrostomy\"\n40405, -- \"Urine Out Other\"\n40428, -- \"Urine Out Straight Cath\"\n40086,--\tUrine Out Incontinent\n40096, -- \"Urine Out Ureteral Stent #1\"\n40651, -- \"Urine Out Ureteral Stent #2\"\n\n-- these are the most frequently occurring urine output observations in MetaVision\n226559, -- \"Foley\"\n226560, -- \"Void\"\n226561, -- \"Condom Cath\"\n226584, -- \"Ileoconduit\"\n226563, -- \"Suprapubic\"\n226564, -- \"R Nephrostomy\"\n226565, -- \"L Nephrostomy\"\n226567, --\tStraight Cath\n226557, -- R Ureteral Stent\n226558, -- L Ureteral Stent\n227488, -- GU Irrigant Volume In\n227489  -- GU Irrigant/Urine Volume Out\n)\ngroup by ie.subject_id, ie.hadm_id, ie.icustay_id\norder by ie.subject_id, ie.hadm_id, ie.icustay_id", "refs": [], "relation_name": "\"mimic\".\"public\".\"urine_output_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.urine_output_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:21.748561Z", "name": "compile", "started_at": "2022-07-29T23:01:21.746865Z"}, {"completed_at": "2022-07-29T23:01:24.911499Z", "name": "execute", "started_at": "2022-07-29T23:01:21.748858Z"}]}, "unique_id": "model.mimic.urine_output_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.urine_output_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.913414Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "ventilation_first_day", "node_path": "firstday/ventilation_first_day.sql", "node_started_at": "2022-07-29T23:01:24.913673", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.ventilation_first_day"}, "unique_id": "model.mimic.ventilation_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.ventilation_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.913721Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.ventilation_first_day", "index": 7, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "ventilation_first_day", "node_path": "firstday/ventilation_first_day.sql", "node_started_at": "2022-07-29T23:01:24.913673", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.ventilation_first_day"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "7 of 10 START table model public.ventilation_first_day ......................... [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.914652Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.ventilation_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.915658Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "ventilation_first_day", "node_path": "firstday/ventilation_first_day.sql", "node_started_at": "2022-07-29T23:01:24.913673", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.ventilation_first_day"}, "unique_id": "model.mimic.ventilation_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.ventilation_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.916096Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.ventilation_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.ventilation_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.916404Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.ventilation_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.919458Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.920387Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "ventilation_first_day", "node_path": "firstday/ventilation_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.ventilation_first_day"}, "unique_id": "model.mimic.ventilation_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.ventilation_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.921304Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.ventilation_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.931913Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.ventilation_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.933109Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.ventilation_first_day", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.ventilation_first_day: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.934367Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.935292Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.947049Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.ventilation_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.947400Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.ventilation_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.ventilation_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"ventilation_first_day__dbt_tmp\"\n  as (\n    -- Determines if a patient is ventilated on the first day of their ICU stay.\n-- Creates a table with the result.\n-- Requires the ventilation_durations table, generated by ../ventilation-durations.sql\n\nselect\n  ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- if vd.icustay_id is not null, then they have a valid ventilation event\n  -- in this case, we say they are ventilated\n  -- otherwise, they are not\n  , max(case\n      when vd.icustay_id is not null then 1\n    else 0 end) as vent\nFROM icustays ie\nleft join \"mimic\".\"public\".\"ventilation_durations\" vd\n  on ie.icustay_id = vd.icustay_id\n  and\n  (\n    -- ventilation duration overlaps with ICU admission -> vented on admission\n    (vd.starttime <= ie.intime and vd.endtime >= ie.intime)\n    -- ventilation started during the first day\n    OR (vd.starttime >= ie.intime and vd.starttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n  )\ngroup by ie.subject_id, ie.hadm_id, ie.icustay_id\norder by ie.subject_id, ie.hadm_id, ie.icustay_id\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.ventilation_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.ventilation_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"ventilation_first_day__dbt_tmp\"\n  as (\n    -- Determines if a patient is ventilated on the first day of their ICU stay.\n-- Creates a table with the result.\n-- Requires the ventilation_durations table, generated by ../ventilation-durations.sql\n\nselect\n  ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- if vd.icustay_id is not null, then they have a valid ventilation event\n  -- in this case, we say they are ventilated\n  -- otherwise, they are not\n  , max(case\n      when vd.icustay_id is not null then 1\n    else 0 end) as vent\nFROM icustays ie\nleft join \"mimic\".\"public\".\"ventilation_durations\" vd\n  on ie.icustay_id = vd.icustay_id\n  and\n  (\n    -- ventilation duration overlaps with ICU admission -> vented on admission\n    (vd.starttime <= ie.intime and vd.endtime >= ie.intime)\n    -- ventilation started during the first day\n    OR (vd.starttime >= ie.intime and vd.starttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n  )\ngroup by ie.subject_id, ie.hadm_id, ie.icustay_id\norder by ie.subject_id, ie.hadm_id, ie.icustay_id\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:24.947924Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.12, "status": "SELECT 61532"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 61532 in 0.12 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.071625Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.ventilation_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.078115Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.ventilation_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.ventilation_first_day\"} */\nalter table \"mimic\".\"public\".\"ventilation_first_day\" rename to \"ventilation_first_day__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.ventilation_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.ventilation_first_day\"} */\nalter table \"mimic\".\"public\".\"ventilation_first_day\" rename to \"ventilation_first_day__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.078575Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.079879Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.ventilation_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.085286Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.ventilation_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.ventilation_first_day\"} */\nalter table \"mimic\".\"public\".\"ventilation_first_day__dbt_tmp\" rename to \"ventilation_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.ventilation_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.ventilation_first_day\"} */\nalter table \"mimic\".\"public\".\"ventilation_first_day__dbt_tmp\" rename to \"ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.085526Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.086497Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.ventilation_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.ventilation_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.089292Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.ventilation_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.089498Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.ventilation_first_day", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.ventilation_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.089920Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.094389Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.ventilation_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.ventilation_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.096402Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.ventilation_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.ventilation_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"ventilation_first_day__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.ventilation_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.ventilation_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"ventilation_first_day__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.096611Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.098744Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.101320Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.ventilation_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.ventilation_first_day: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.101555Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2dfc10>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2dfc10>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.102475Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.ventilation_first_day", "execution_time": 0, "index": 7, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "ventilation_first_day", "node_path": "firstday/ventilation_first_day.sql", "node_started_at": "2022-07-29T23:01:24.913673", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.ventilation_first_day"}, "status": "SELECT 61532", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "7 of 10 OK created table model public.ventilation_first_day .................... [\u001b[32mSELECT 61532\u001b[0m in 0.19s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.102995Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:25.103464", "node_name": "ventilation_first_day", "node_path": "firstday/ventilation_first_day.sql", "node_started_at": "2022-07-29T23:01:24.913673", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.ventilation_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 61532", "code": "SELECT", "rows_affected": 61532}, "agate_table": null, "execution_time": 0.18722987174987793, "failures": null, "message": "SELECT 61532", "node": {"alias": "ventilation_first_day", "build_path": "target/run/mimic/models/firstday/ventilation_first_day.sql", "checksum": {"checksum": "d4bc65b2a541ae1dd3021434f7f7147b4ba4863063f70bc9cb8c05817eb48047", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/ventilation_first_day.sql", "compiled_sql": "-- Determines if a patient is ventilated on the first day of their ICU stay.\n-- Creates a table with the result.\n-- Requires the ventilation_durations table, generated by ../ventilation-durations.sql\n\nselect\n  ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- if vd.icustay_id is not null, then they have a valid ventilation event\n  -- in this case, we say they are ventilated\n  -- otherwise, they are not\n  , max(case\n      when vd.icustay_id is not null then 1\n    else 0 end) as vent\nFROM icustays ie\nleft join \"mimic\".\"public\".\"ventilation_durations\" vd\n  on ie.icustay_id = vd.icustay_id\n  and\n  (\n    -- ventilation duration overlaps with ICU admission -> vented on admission\n    (vd.starttime <= ie.intime and vd.endtime >= ie.intime)\n    -- ventilation started during the first day\n    OR (vd.starttime >= ie.intime and vd.starttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n  )\ngroup by ie.subject_id, ie.hadm_id, ie.icustay_id\norder by ie.subject_id, ie.hadm_id, ie.icustay_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.1289623, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": ["model.mimic.ventilation_durations"]}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "ventilation_first_day"], "meta": {}, "name": "ventilation_first_day", "original_file_path": "models/firstday/ventilation_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/ventilation_first_day.sql", "raw_sql": "-- Determines if a patient is ventilated on the first day of their ICU stay.\n-- Creates a table with the result.\n-- Requires the ventilation_durations table, generated by ../ventilation-durations.sql\n\nselect\n  ie.subject_id, ie.hadm_id, ie.icustay_id\n  -- if vd.icustay_id is not null, then they have a valid ventilation event\n  -- in this case, we say they are ventilated\n  -- otherwise, they are not\n  , max(case\n      when vd.icustay_id is not null then 1\n    else 0 end) as vent\nFROM icustays ie\nleft join {{ref('ventilation_durations')}} vd\n  on ie.icustay_id = vd.icustay_id\n  and\n  (\n    -- ventilation duration overlaps with ICU admission -> vented on admission\n    (vd.starttime <= ie.intime and vd.endtime >= ie.intime)\n    -- ventilation started during the first day\n    OR (vd.starttime >= ie.intime and vd.starttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY))\n  )\ngroup by ie.subject_id, ie.hadm_id, ie.icustay_id\norder by ie.subject_id, ie.hadm_id, ie.icustay_id", "refs": [["ventilation_durations"]], "relation_name": "\"mimic\".\"public\".\"ventilation_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.ventilation_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:24.920289Z", "name": "compile", "started_at": "2022-07-29T23:01:24.916380Z"}, {"completed_at": "2022-07-29T23:01:25.101294Z", "name": "execute", "started_at": "2022-07-29T23:01:24.921724Z"}]}, "unique_id": "model.mimic.ventilation_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.ventilation_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.103686Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": "2022-07-29T23:01:25.104115", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.vitals_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.104211Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.vitals_first_day", "index": 8, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": "2022-07-29T23:01:25.104115", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "8 of 10 START table model public.vitals_first_day .............................. [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.104965Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.105948Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": "2022-07-29T23:01:25.104115", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.vitals_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.106405Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.vitals_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.106699Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.108526Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.109291Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.vitals_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.109586Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.vitals_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.126925Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.128566Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.129167Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.129589Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.136808Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.137185Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"vitals_first_day__dbt_tmp\"\n  as (\n    -- This query pivots the vital signs for the first 24 hours of a patient's stay\n-- Vital signs include heart rate, blood pressure, respiration rate, and temperature\n\nSELECT pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n-- Easier names\n, min(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_min\n, max(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_max\n, avg(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_mean\n, min(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_min\n, max(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_max\n, avg(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_mean\n, min(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_min\n, max(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_max\n, avg(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_mean\n, min(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_min\n, max(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_max\n, avg(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_mean\n, min(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_min\n, max(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_max\n, avg(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_mean\n, min(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_min\n, max(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_max\n, avg(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_mean\n, min(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_min\n, max(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_max\n, avg(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_mean\n, min(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_min\n, max(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_max\n, avg(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_mean\n\nFROM  (\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n    when itemid in (211,220045) and valuenum > 0 and valuenum < 300 then 1 -- HeartRate\n    when itemid in (51,442,455,6701,220179,220050) and valuenum > 0 and valuenum < 400 then 2 -- SysBP\n    when itemid in (8368,8440,8441,8555,220180,220051) and valuenum > 0 and valuenum < 300 then 3 -- DiasBP\n    when itemid in (456,52,6702,443,220052,220181,225312) and valuenum > 0 and valuenum < 300 then 4 -- MeanBP\n    when itemid in (615,618,220210,224690) and valuenum > 0 and valuenum < 70 then 5 -- RespRate\n    when itemid in (223761,678) and valuenum > 70 and valuenum < 120  then 6 -- TempF, converted to degC in valuenum call\n    when itemid in (223762,676) and valuenum > 10 and valuenum < 50  then 6 -- TempC\n    when itemid in (646,220277) and valuenum > 0 and valuenum <= 100 then 7 -- SpO2\n    when itemid in (807,811,1529,3745,3744,225664,220621,226537) and valuenum > 0 then 8 -- Glucose\n\n    else null end as vitalid\n      -- convert F to C\n  , case when itemid in (223761,678) then (valuenum-32)/1.8 else valuenum end as valuenum\n\n  from icustays ie\n  left join chartevents ce\n  on ie.icustay_id = ce.icustay_id\n  and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1 DAY')\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'SECOND') > 0\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'HOUR') <= 24\n  -- exclude rows marked as error\n  and (ce.error IS NULL or ce.error = 0)\n  where ce.itemid in\n  (\n  -- HEART RATE\n  211, --\"Heart Rate\"\n  220045, --\"Heart Rate\"\n\n  -- Systolic/diastolic\n\n  51, --\tArterial BP [Systolic]\n  442, --\tManual BP [Systolic]\n  455, --\tNBP [Systolic]\n  6701, --\tArterial BP #2 [Systolic]\n  220179, --\tNon Invasive Blood Pressure systolic\n  220050, --\tArterial Blood Pressure systolic\n\n  8368, --\tArterial BP [Diastolic]\n  8440, --\tManual BP [Diastolic]\n  8441, --\tNBP [Diastolic]\n  8555, --\tArterial BP #2 [Diastolic]\n  220180, --\tNon Invasive Blood Pressure diastolic\n  220051, --\tArterial Blood Pressure diastolic\n\n\n  -- MEAN ARTERIAL PRESSURE\n  456, --\"NBP Mean\"\n  52, --\"Arterial BP Mean\"\n  6702, --\tArterial BP Mean #2\n  443, --\tManual BP Mean(calc)\n  220052, --\"Arterial Blood Pressure mean\"\n  220181, --\"Non Invasive Blood Pressure mean\"\n  225312, --\"ART BP mean\"\n\n  -- RESPIRATORY RATE\n  618,--\tRespiratory Rate\n  615,--\tResp Rate (Total)\n  220210,--\tRespiratory Rate\n  224690, --\tRespiratory Rate (Total)\n\n\n  -- SPO2, peripheral\n  646, 220277,\n\n  -- GLUCOSE, both lab and fingerstick\n  807,--\tFingerstick Glucose\n  811,--\tGlucose (70-105)\n  1529,--\tGlucose\n  3745,--\tBloodGlucose\n  3744,--\tBlood Glucose\n  225664,--\tGlucose finger stick\n  220621,--\tGlucose (serum)\n  226537,--\tGlucose (whole blood)\n\n  -- TEMPERATURE\n  223762, -- \"Temperature Celsius\"\n  676,\t-- \"Temperature C\"\n  223761, -- \"Temperature Fahrenheit\"\n  678 --\t\"Temperature F\"\n\n  )\n) pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"vitals_first_day__dbt_tmp\"\n  as (\n    -- This query pivots the vital signs for the first 24 hours of a patient's stay\n-- Vital signs include heart rate, blood pressure, respiration rate, and temperature\n\nSELECT pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n-- Easier names\n, min(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_min\n, max(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_max\n, avg(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_mean\n, min(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_min\n, max(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_max\n, avg(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_mean\n, min(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_min\n, max(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_max\n, avg(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_mean\n, min(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_min\n, max(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_max\n, avg(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_mean\n, min(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_min\n, max(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_max\n, avg(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_mean\n, min(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_min\n, max(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_max\n, avg(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_mean\n, min(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_min\n, max(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_max\n, avg(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_mean\n, min(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_min\n, max(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_max\n, avg(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_mean\n\nFROM  (\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n    when itemid in (211,220045) and valuenum > 0 and valuenum < 300 then 1 -- HeartRate\n    when itemid in (51,442,455,6701,220179,220050) and valuenum > 0 and valuenum < 400 then 2 -- SysBP\n    when itemid in (8368,8440,8441,8555,220180,220051) and valuenum > 0 and valuenum < 300 then 3 -- DiasBP\n    when itemid in (456,52,6702,443,220052,220181,225312) and valuenum > 0 and valuenum < 300 then 4 -- MeanBP\n    when itemid in (615,618,220210,224690) and valuenum > 0 and valuenum < 70 then 5 -- RespRate\n    when itemid in (223761,678) and valuenum > 70 and valuenum < 120  then 6 -- TempF, converted to degC in valuenum call\n    when itemid in (223762,676) and valuenum > 10 and valuenum < 50  then 6 -- TempC\n    when itemid in (646,220277) and valuenum > 0 and valuenum <= 100 then 7 -- SpO2\n    when itemid in (807,811,1529,3745,3744,225664,220621,226537) and valuenum > 0 then 8 -- Glucose\n\n    else null end as vitalid\n      -- convert F to C\n  , case when itemid in (223761,678) then (valuenum-32)/1.8 else valuenum end as valuenum\n\n  from icustays ie\n  left join chartevents ce\n  on ie.icustay_id = ce.icustay_id\n  and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1 DAY')\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'SECOND') > 0\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'HOUR') <= 24\n  -- exclude rows marked as error\n  and (ce.error IS NULL or ce.error = 0)\n  where ce.itemid in\n  (\n  -- HEART RATE\n  211, --\"Heart Rate\"\n  220045, --\"Heart Rate\"\n\n  -- Systolic/diastolic\n\n  51, --\tArterial BP [Systolic]\n  442, --\tManual BP [Systolic]\n  455, --\tNBP [Systolic]\n  6701, --\tArterial BP #2 [Systolic]\n  220179, --\tNon Invasive Blood Pressure systolic\n  220050, --\tArterial Blood Pressure systolic\n\n  8368, --\tArterial BP [Diastolic]\n  8440, --\tManual BP [Diastolic]\n  8441, --\tNBP [Diastolic]\n  8555, --\tArterial BP #2 [Diastolic]\n  220180, --\tNon Invasive Blood Pressure diastolic\n  220051, --\tArterial Blood Pressure diastolic\n\n\n  -- MEAN ARTERIAL PRESSURE\n  456, --\"NBP Mean\"\n  52, --\"Arterial BP Mean\"\n  6702, --\tArterial BP Mean #2\n  443, --\tManual BP Mean(calc)\n  220052, --\"Arterial Blood Pressure mean\"\n  220181, --\"Non Invasive Blood Pressure mean\"\n  225312, --\"ART BP mean\"\n\n  -- RESPIRATORY RATE\n  618,--\tRespiratory Rate\n  615,--\tResp Rate (Total)\n  220210,--\tRespiratory Rate\n  224690, --\tRespiratory Rate (Total)\n\n\n  -- SPO2, peripheral\n  646, 220277,\n\n  -- GLUCOSE, both lab and fingerstick\n  807,--\tFingerstick Glucose\n  811,--\tGlucose (70-105)\n  1529,--\tGlucose\n  3745,--\tBloodGlucose\n  3744,--\tBlood Glucose\n  225664,--\tGlucose finger stick\n  220621,--\tGlucose (serum)\n  226537,--\tGlucose (whole blood)\n\n  -- TEMPERATURE\n  223762, -- \"Temperature Celsius\"\n  676,\t-- \"Temperature C\"\n  223761, -- \"Temperature Fahrenheit\"\n  678 --\t\"Temperature F\"\n\n  )\n) pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.138271Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.03, "status": "SELECT 0"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 0 in 0.03 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.165251Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.174316Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\nalter table \"mimic\".\"public\".\"vitals_first_day\" rename to \"vitals_first_day__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\nalter table \"mimic\".\"public\".\"vitals_first_day\" rename to \"vitals_first_day__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.174757Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.176375Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.188039Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\nalter table \"mimic\".\"public\".\"vitals_first_day__dbt_tmp\" rename to \"vitals_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\nalter table \"mimic\".\"public\".\"vitals_first_day__dbt_tmp\" rename to \"vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.188478Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.190288Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.vitals_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.200129Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.200486Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.200818Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.203884Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.vitals_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.vitals_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.208029Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.vitals_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"vitals_first_day__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.vitals_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"vitals_first_day__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.208342Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.211162Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.215531Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.vitals_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.vitals_first_day: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.215859Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2dfd90>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2dfd90>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.217018Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.vitals_first_day", "execution_time": 0, "index": 8, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": "2022-07-29T23:01:25.104115", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "status": "SELECT 0", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "8 of 10 OK created table model public.vitals_first_day ......................... [\u001b[32mSELECT 0\u001b[0m in 0.11s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.217544Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:25.218572", "node_name": "vitals_first_day", "node_path": "firstday/vitals_first_day.sql", "node_started_at": "2022-07-29T23:01:25.104115", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.vitals_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0}, "agate_table": null, "execution_time": 0.11147713661193848, "failures": null, "message": "SELECT 0", "node": {"alias": "vitals_first_day", "build_path": "target/run/mimic/models/firstday/vitals_first_day.sql", "checksum": {"checksum": "cac09fce3915d79c1814d25b91a41fa78f64bf2678dcf8910fb1d8a1118b1ccd", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/vitals_first_day.sql", "compiled_sql": "-- This query pivots the vital signs for the first 24 hours of a patient's stay\n-- Vital signs include heart rate, blood pressure, respiration rate, and temperature\n\nSELECT pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n-- Easier names\n, min(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_min\n, max(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_max\n, avg(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_mean\n, min(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_min\n, max(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_max\n, avg(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_mean\n, min(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_min\n, max(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_max\n, avg(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_mean\n, min(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_min\n, max(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_max\n, avg(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_mean\n, min(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_min\n, max(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_max\n, avg(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_mean\n, min(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_min\n, max(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_max\n, avg(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_mean\n, min(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_min\n, max(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_max\n, avg(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_mean\n, min(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_min\n, max(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_max\n, avg(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_mean\n\nFROM  (\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n    when itemid in (211,220045) and valuenum > 0 and valuenum < 300 then 1 -- HeartRate\n    when itemid in (51,442,455,6701,220179,220050) and valuenum > 0 and valuenum < 400 then 2 -- SysBP\n    when itemid in (8368,8440,8441,8555,220180,220051) and valuenum > 0 and valuenum < 300 then 3 -- DiasBP\n    when itemid in (456,52,6702,443,220052,220181,225312) and valuenum > 0 and valuenum < 300 then 4 -- MeanBP\n    when itemid in (615,618,220210,224690) and valuenum > 0 and valuenum < 70 then 5 -- RespRate\n    when itemid in (223761,678) and valuenum > 70 and valuenum < 120  then 6 -- TempF, converted to degC in valuenum call\n    when itemid in (223762,676) and valuenum > 10 and valuenum < 50  then 6 -- TempC\n    when itemid in (646,220277) and valuenum > 0 and valuenum <= 100 then 7 -- SpO2\n    when itemid in (807,811,1529,3745,3744,225664,220621,226537) and valuenum > 0 then 8 -- Glucose\n\n    else null end as vitalid\n      -- convert F to C\n  , case when itemid in (223761,678) then (valuenum-32)/1.8 else valuenum end as valuenum\n\n  from icustays ie\n  left join chartevents ce\n  on ie.icustay_id = ce.icustay_id\n  and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1 DAY')\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'SECOND') > 0\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'HOUR') <= 24\n  -- exclude rows marked as error\n  and (ce.error IS NULL or ce.error = 0)\n  where ce.itemid in\n  (\n  -- HEART RATE\n  211, --\"Heart Rate\"\n  220045, --\"Heart Rate\"\n\n  -- Systolic/diastolic\n\n  51, --\tArterial BP [Systolic]\n  442, --\tManual BP [Systolic]\n  455, --\tNBP [Systolic]\n  6701, --\tArterial BP #2 [Systolic]\n  220179, --\tNon Invasive Blood Pressure systolic\n  220050, --\tArterial Blood Pressure systolic\n\n  8368, --\tArterial BP [Diastolic]\n  8440, --\tManual BP [Diastolic]\n  8441, --\tNBP [Diastolic]\n  8555, --\tArterial BP #2 [Diastolic]\n  220180, --\tNon Invasive Blood Pressure diastolic\n  220051, --\tArterial Blood Pressure diastolic\n\n\n  -- MEAN ARTERIAL PRESSURE\n  456, --\"NBP Mean\"\n  52, --\"Arterial BP Mean\"\n  6702, --\tArterial BP Mean #2\n  443, --\tManual BP Mean(calc)\n  220052, --\"Arterial Blood Pressure mean\"\n  220181, --\"Non Invasive Blood Pressure mean\"\n  225312, --\"ART BP mean\"\n\n  -- RESPIRATORY RATE\n  618,--\tRespiratory Rate\n  615,--\tResp Rate (Total)\n  220210,--\tRespiratory Rate\n  224690, --\tRespiratory Rate (Total)\n\n\n  -- SPO2, peripheral\n  646, 220277,\n\n  -- GLUCOSE, both lab and fingerstick\n  807,--\tFingerstick Glucose\n  811,--\tGlucose (70-105)\n  1529,--\tGlucose\n  3745,--\tBloodGlucose\n  3744,--\tBlood Glucose\n  225664,--\tGlucose finger stick\n  220621,--\tGlucose (serum)\n  226537,--\tGlucose (whole blood)\n\n  -- TEMPERATURE\n  223762, -- \"Temperature Celsius\"\n  676,\t-- \"Temperature C\"\n  223761, -- \"Temperature Fahrenheit\"\n  678 --\t\"Temperature F\"\n\n  )\n) pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.13711, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "vitals_first_day"], "meta": {}, "name": "vitals_first_day", "original_file_path": "models/firstday/vitals_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/vitals_first_day.sql", "raw_sql": "-- This query pivots the vital signs for the first 24 hours of a patient's stay\n-- Vital signs include heart rate, blood pressure, respiration rate, and temperature\n\nSELECT pvt.subject_id, pvt.hadm_id, pvt.icustay_id\n\n-- Easier names\n, min(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_min\n, max(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_max\n, avg(case when VitalID = 1 then valuenum ELSE NULL END) AS heartrate_mean\n, min(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_min\n, max(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_max\n, avg(case when VitalID = 2 then valuenum ELSE NULL END) AS sysbp_mean\n, min(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_min\n, max(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_max\n, avg(case when VitalID = 3 then valuenum ELSE NULL END) AS diasbp_mean\n, min(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_min\n, max(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_max\n, avg(case when VitalID = 4 then valuenum ELSE NULL END) AS meanbp_mean\n, min(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_min\n, max(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_max\n, avg(case when VitalID = 5 then valuenum ELSE NULL END) AS resprate_mean\n, min(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_min\n, max(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_max\n, avg(case when VitalID = 6 then valuenum ELSE NULL END) AS tempc_mean\n, min(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_min\n, max(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_max\n, avg(case when VitalID = 7 then valuenum ELSE NULL END) AS spo2_mean\n, min(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_min\n, max(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_max\n, avg(case when VitalID = 8 then valuenum ELSE NULL END) AS glucose_mean\n\nFROM  (\n  select ie.subject_id, ie.hadm_id, ie.icustay_id\n  , case\n    when itemid in (211,220045) and valuenum > 0 and valuenum < 300 then 1 -- HeartRate\n    when itemid in (51,442,455,6701,220179,220050) and valuenum > 0 and valuenum < 400 then 2 -- SysBP\n    when itemid in (8368,8440,8441,8555,220180,220051) and valuenum > 0 and valuenum < 300 then 3 -- DiasBP\n    when itemid in (456,52,6702,443,220052,220181,225312) and valuenum > 0 and valuenum < 300 then 4 -- MeanBP\n    when itemid in (615,618,220210,224690) and valuenum > 0 and valuenum < 70 then 5 -- RespRate\n    when itemid in (223761,678) and valuenum > 70 and valuenum < 120  then 6 -- TempF, converted to degC in valuenum call\n    when itemid in (223762,676) and valuenum > 10 and valuenum < 50  then 6 -- TempC\n    when itemid in (646,220277) and valuenum > 0 and valuenum <= 100 then 7 -- SpO2\n    when itemid in (807,811,1529,3745,3744,225664,220621,226537) and valuenum > 0 then 8 -- Glucose\n\n    else null end as vitalid\n      -- convert F to C\n  , case when itemid in (223761,678) then (valuenum-32)/1.8 else valuenum end as valuenum\n\n  from icustays ie\n  left join chartevents ce\n  on ie.icustay_id = ce.icustay_id\n  and ce.charttime between ie.intime and DATETIME_ADD(ie.intime, INTERVAL '1 DAY')\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'SECOND') > 0\n  and DATETIME_DIFF(ce.charttime, ie.intime, 'HOUR') <= 24\n  -- exclude rows marked as error\n  and (ce.error IS NULL or ce.error = 0)\n  where ce.itemid in\n  (\n  -- HEART RATE\n  211, --\"Heart Rate\"\n  220045, --\"Heart Rate\"\n\n  -- Systolic/diastolic\n\n  51, --\tArterial BP [Systolic]\n  442, --\tManual BP [Systolic]\n  455, --\tNBP [Systolic]\n  6701, --\tArterial BP #2 [Systolic]\n  220179, --\tNon Invasive Blood Pressure systolic\n  220050, --\tArterial Blood Pressure systolic\n\n  8368, --\tArterial BP [Diastolic]\n  8440, --\tManual BP [Diastolic]\n  8441, --\tNBP [Diastolic]\n  8555, --\tArterial BP #2 [Diastolic]\n  220180, --\tNon Invasive Blood Pressure diastolic\n  220051, --\tArterial Blood Pressure diastolic\n\n\n  -- MEAN ARTERIAL PRESSURE\n  456, --\"NBP Mean\"\n  52, --\"Arterial BP Mean\"\n  6702, --\tArterial BP Mean #2\n  443, --\tManual BP Mean(calc)\n  220052, --\"Arterial Blood Pressure mean\"\n  220181, --\"Non Invasive Blood Pressure mean\"\n  225312, --\"ART BP mean\"\n\n  -- RESPIRATORY RATE\n  618,--\tRespiratory Rate\n  615,--\tResp Rate (Total)\n  220210,--\tRespiratory Rate\n  224690, --\tRespiratory Rate (Total)\n\n\n  -- SPO2, peripheral\n  646, 220277,\n\n  -- GLUCOSE, both lab and fingerstick\n  807,--\tFingerstick Glucose\n  811,--\tGlucose (70-105)\n  1529,--\tGlucose\n  3745,--\tBloodGlucose\n  3744,--\tBlood Glucose\n  225664,--\tGlucose finger stick\n  220621,--\tGlucose (serum)\n  226537,--\tGlucose (whole blood)\n\n  -- TEMPERATURE\n  223762, -- \"Temperature Celsius\"\n  676,\t-- \"Temperature C\"\n  223761, -- \"Temperature Fahrenheit\"\n  678 --\t\"Temperature F\"\n\n  )\n) pvt\ngroup by pvt.subject_id, pvt.hadm_id, pvt.icustay_id\norder by pvt.subject_id, pvt.hadm_id, pvt.icustay_id", "refs": [], "relation_name": "\"mimic\".\"public\".\"vitals_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.vitals_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:25.109238Z", "name": "compile", "started_at": "2022-07-29T23:01:25.106680Z"}, {"completed_at": "2022-07-29T23:01:25.215495Z", "name": "execute", "started_at": "2022-07-29T23:01:25.110036Z"}]}, "unique_id": "model.mimic.vitals_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.vitals_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.218794Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:01:25.219681", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "unique_id": "model.mimic.weight_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.weight_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.219741Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.weight_first_day", "index": 9, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:01:25.219681", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "9 of 10 START table model public.weight_first_day .............................. [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.220878Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.222016Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:01:25.219681", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "unique_id": "model.mimic.weight_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.weight_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.222411Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.weight_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.weight_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.222757Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.weight_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.226785Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.227568Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "unique_id": "model.mimic.weight_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.weight_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.227994Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.weight_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.243033Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.243887Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.244174Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.244332Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.255267Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.256259Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"weight_first_day__dbt_tmp\"\n  as (\n    -- This query extracts weights for adult ICU patients on their first ICU day.\n-- It does *not* use any information after the first ICU day, as weight is\n-- sometimes used to monitor fluid balance.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\nwith ce as\n(\n    SELECT\n      c.icustay_id\n      -- we take the avg value from roughly first day\n      -- TODO: eliminate obvious outliers if there is a reasonable weight\n      -- (e.g. weight of 180kg and 90kg would remove 180kg instead of taking the median)\n      , AVG(VALUENUM) as Weight_Admit\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (762,226512) -- Admit Wt\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n, dwt as\n(\n    SELECT\n      c.icustay_id\n      , AVG(VALUENUM) as Weight_Daily\n    FROM chartevents c\n    INNER JOIN icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (763,224639) -- Daily Weight\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n-- we split in-hospital/out of hospital echoes as we would like to prioritize in-hospital data\n, echo_hadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoInHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ec.hadm_id = ie.hadm_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where\n            ec.HADM_ID is not null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\n, echo_nohadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoPreHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ie.subject_id = ec.subject_id\n        and ie.intime < DATETIME_ADD(ec.charttime, INTERVAL '1' MONTH)\n        and ie.intime > ec.charttime\n    where\n            ec.HADM_ID is null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\nselect\n    ie.icustay_id\n    , round(cast(\n    case\n        when ce.icustay_id is not null\n            then ce.Weight_Admit\n        when dwt.icustay_id is not null\n            then dwt.Weight_Daily\n        when eh.icustay_id is not null\n            then eh.Weight_EchoInHosp\n        when enh.icustay_id is not null\n            then enh.Weight_EchoPreHosp\n        else null end\n        as numeric), 2)\n    as weight\n\n    -- components\n    , ce.weight_admit\n    , dwt.weight_daily\n    , eh.weight_echoinhosp\n    , enh.weight_echoprehosp\n\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\n-- admission weight\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\n-- daily weights\nleft join dwt\n    on ie.icustay_id = dwt.icustay_id\n\n-- in-hospital echo weight\nleft join echo_hadm eh\n    on ie.icustay_id = eh.icustay_id\n\n-- pre-hospitalization echo weights\nleft join echo_nohadm enh\n    on ie.icustay_id = enh.icustay_id\norder by ie.icustay_id\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\n\n\n  create  table \"mimic\".\"public\".\"weight_first_day__dbt_tmp\"\n  as (\n    -- This query extracts weights for adult ICU patients on their first ICU day.\n-- It does *not* use any information after the first ICU day, as weight is\n-- sometimes used to monitor fluid balance.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\nwith ce as\n(\n    SELECT\n      c.icustay_id\n      -- we take the avg value from roughly first day\n      -- TODO: eliminate obvious outliers if there is a reasonable weight\n      -- (e.g. weight of 180kg and 90kg would remove 180kg instead of taking the median)\n      , AVG(VALUENUM) as Weight_Admit\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (762,226512) -- Admit Wt\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n, dwt as\n(\n    SELECT\n      c.icustay_id\n      , AVG(VALUENUM) as Weight_Daily\n    FROM chartevents c\n    INNER JOIN icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (763,224639) -- Daily Weight\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n-- we split in-hospital/out of hospital echoes as we would like to prioritize in-hospital data\n, echo_hadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoInHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ec.hadm_id = ie.hadm_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where\n            ec.HADM_ID is not null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\n, echo_nohadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoPreHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ie.subject_id = ec.subject_id\n        and ie.intime < DATETIME_ADD(ec.charttime, INTERVAL '1' MONTH)\n        and ie.intime > ec.charttime\n    where\n            ec.HADM_ID is null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\nselect\n    ie.icustay_id\n    , round(cast(\n    case\n        when ce.icustay_id is not null\n            then ce.Weight_Admit\n        when dwt.icustay_id is not null\n            then dwt.Weight_Daily\n        when eh.icustay_id is not null\n            then eh.Weight_EchoInHosp\n        when enh.icustay_id is not null\n            then enh.Weight_EchoPreHosp\n        else null end\n        as numeric), 2)\n    as weight\n\n    -- components\n    , ce.weight_admit\n    , dwt.weight_daily\n    , eh.weight_echoinhosp\n    , enh.weight_echoprehosp\n\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\n-- admission weight\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\n-- daily weights\nleft join dwt\n    on ie.icustay_id = dwt.icustay_id\n\n-- in-hospital echo weight\nleft join echo_hadm eh\n    on ie.icustay_id = eh.icustay_id\n\n-- pre-hospitalization echo weights\nleft join echo_nohadm enh\n    on ie.icustay_id = enh.icustay_id\norder by ie.icustay_id\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.256826Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.14, "status": "SELECT 53432"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 53432 in 0.14 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.401340Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.408049Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\nalter table \"mimic\".\"public\".\"weight_first_day\" rename to \"weight_first_day__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\nalter table \"mimic\".\"public\".\"weight_first_day\" rename to \"weight_first_day__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.408327Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.409256Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.413937Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\nalter table \"mimic\".\"public\".\"weight_first_day__dbt_tmp\" rename to \"weight_first_day\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\nalter table \"mimic\".\"public\".\"weight_first_day__dbt_tmp\" rename to \"weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.414229Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.414992Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.weight_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.417994Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.418256Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.418480Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.425442Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.weight_first_day", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.weight_first_day\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.428251Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.weight_first_day", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"weight_first_day__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.weight_first_day\"} */\ndrop table if exists \"mimic\".\"public\".\"weight_first_day__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.428486Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.430638Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.434174Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.weight_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.weight_first_day: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.434465Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5dd012e0>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5dd012e0>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.435248Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.weight_first_day", "execution_time": 0, "index": 9, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:01:25.219681", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "status": "SELECT 53432", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "9 of 10 OK created table model public.weight_first_day ......................... [\u001b[32mSELECT 53432\u001b[0m in 0.21s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.435757Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:25.436216", "node_name": "weight_first_day", "node_path": "firstday/weight_first_day.sql", "node_started_at": "2022-07-29T23:01:25.219681", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.weight_first_day"}, "run_result": {"adapter_response": {"_message": "SELECT 53432", "code": "SELECT", "rows_affected": 53432}, "agate_table": null, "execution_time": 0.2136828899383545, "failures": null, "message": "SELECT 53432", "node": {"alias": "weight_first_day", "build_path": "target/run/mimic/models/firstday/weight_first_day.sql", "checksum": {"checksum": "61809e0534880d7740cd7d590d3bb52bf1405f76c11092a6a8d3ca26ea8993cf", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/weight_first_day.sql", "compiled_sql": "-- This query extracts weights for adult ICU patients on their first ICU day.\n-- It does *not* use any information after the first ICU day, as weight is\n-- sometimes used to monitor fluid balance.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\nwith ce as\n(\n    SELECT\n      c.icustay_id\n      -- we take the avg value from roughly first day\n      -- TODO: eliminate obvious outliers if there is a reasonable weight\n      -- (e.g. weight of 180kg and 90kg would remove 180kg instead of taking the median)\n      , AVG(VALUENUM) as Weight_Admit\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (762,226512) -- Admit Wt\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n, dwt as\n(\n    SELECT\n      c.icustay_id\n      , AVG(VALUENUM) as Weight_Daily\n    FROM chartevents c\n    INNER JOIN icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (763,224639) -- Daily Weight\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n-- we split in-hospital/out of hospital echoes as we would like to prioritize in-hospital data\n, echo_hadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoInHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ec.hadm_id = ie.hadm_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where\n            ec.HADM_ID is not null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\n, echo_nohadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoPreHosp\n    from \"mimic\".\"public\".\"echo_data\" ec\n    inner join icustays ie\n        on ie.subject_id = ec.subject_id\n        and ie.intime < DATETIME_ADD(ec.charttime, INTERVAL '1' MONTH)\n        and ie.intime > ec.charttime\n    where\n            ec.HADM_ID is null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\nselect\n    ie.icustay_id\n    , round(cast(\n    case\n        when ce.icustay_id is not null\n            then ce.Weight_Admit\n        when dwt.icustay_id is not null\n            then dwt.Weight_Daily\n        when eh.icustay_id is not null\n            then eh.Weight_EchoInHosp\n        when enh.icustay_id is not null\n            then enh.Weight_EchoPreHosp\n        else null end\n        as numeric), 2)\n    as weight\n\n    -- components\n    , ce.weight_admit\n    , dwt.weight_daily\n    , eh.weight_echoinhosp\n    , enh.weight_echoprehosp\n\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\n-- admission weight\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\n-- daily weights\nleft join dwt\n    on ie.icustay_id = dwt.icustay_id\n\n-- in-hospital echo weight\nleft join echo_hadm eh\n    on ie.icustay_id = eh.icustay_id\n\n-- pre-hospitalization echo weights\nleft join echo_nohadm enh\n    on ie.icustay_id = enh.icustay_id\norder by ie.icustay_id", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.134089, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": ["model.mimic.echo_data", "model.mimic.echo_data"]}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "weight_first_day"], "meta": {}, "name": "weight_first_day", "original_file_path": "models/firstday/weight_first_day.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/weight_first_day.sql", "raw_sql": "-- This query extracts weights for adult ICU patients on their first ICU day.\n-- It does *not* use any information after the first ICU day, as weight is\n-- sometimes used to monitor fluid balance.\n\n-- ** Requires the echodata view, generated by concepts/echo-data.sql\n\nwith ce as\n(\n    SELECT\n      c.icustay_id\n      -- we take the avg value from roughly first day\n      -- TODO: eliminate obvious outliers if there is a reasonable weight\n      -- (e.g. weight of 180kg and 90kg would remove 180kg instead of taking the median)\n      , AVG(VALUENUM) as Weight_Admit\n    FROM chartevents c\n    inner join icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (762,226512) -- Admit Wt\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n, dwt as\n(\n    SELECT\n      c.icustay_id\n      , AVG(VALUENUM) as Weight_Daily\n    FROM chartevents c\n    INNER JOIN icustays ie\n        on c.icustay_id = ie.icustay_id\n        and c.charttime <= DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n        and c.charttime > DATETIME_SUB(ie.intime, INTERVAL '1' DAY) -- some fuzziness for admit time\n    WHERE c.valuenum IS NOT NULL\n    AND c.itemid in (763,224639) -- Daily Weight\n    AND c.valuenum != 0\n    -- exclude rows marked as error\n    AND (c.error IS NULL OR c.error = 0)\n    group by c.icustay_id\n)\n-- we split in-hospital/out of hospital echoes as we would like to prioritize in-hospital data\n, echo_hadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoInHosp\n    from {{ref('echo_data')}} ec\n    inner join icustays ie\n        on ec.hadm_id = ie.hadm_id\n        and ec.charttime < DATETIME_ADD(ie.intime, INTERVAL '1' DAY)\n    where\n            ec.HADM_ID is not null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\n, echo_nohadm as\n(\n    select\n        ie.icustay_id\n        , 0.453592*AVG(weight) as Weight_EchoPreHosp\n    from {{ref('echo_data')}} ec\n    inner join icustays ie\n        on ie.subject_id = ec.subject_id\n        and ie.intime < DATETIME_ADD(ec.charttime, INTERVAL '1' MONTH)\n        and ie.intime > ec.charttime\n    where\n            ec.HADM_ID is null\n        and ec.weight is not null\n    group by ie.icustay_id\n)\nselect\n    ie.icustay_id\n    , round(cast(\n    case\n        when ce.icustay_id is not null\n            then ce.Weight_Admit\n        when dwt.icustay_id is not null\n            then dwt.Weight_Daily\n        when eh.icustay_id is not null\n            then eh.Weight_EchoInHosp\n        when enh.icustay_id is not null\n            then enh.Weight_EchoPreHosp\n        else null end\n        as numeric), 2)\n    as weight\n\n    -- components\n    , ce.weight_admit\n    , dwt.weight_daily\n    , eh.weight_echoinhosp\n    , enh.weight_echoprehosp\n\nFROM icustays ie\n\n-- filter to only adults\ninner join patients pat\n    on ie.subject_id = pat.subject_id\n    and ie.intime > DATETIME_ADD(pat.dob, INTERVAL '1' YEAR)\n\n-- admission weight\nleft join ce\n    on ie.icustay_id = ce.icustay_id\n\n-- daily weights\nleft join dwt\n    on ie.icustay_id = dwt.icustay_id\n\n-- in-hospital echo weight\nleft join echo_hadm eh\n    on ie.icustay_id = eh.icustay_id\n\n-- pre-hospitalization echo weights\nleft join echo_nohadm enh\n    on ie.icustay_id = enh.icustay_id\norder by ie.icustay_id", "refs": [["echo_data"], ["echo_data"]], "relation_name": "\"mimic\".\"public\".\"weight_first_day\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.weight_first_day", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:25.227431Z", "name": "compile", "started_at": "2022-07-29T23:01:25.222732Z"}, {"completed_at": "2022-07-29T23:01:25.434141Z", "name": "execute", "started_at": "2022-07-29T23:01:25.228552Z"}]}, "unique_id": "model.mimic.weight_first_day"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.weight_first_day", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.436434Z", "type": "log_line"}
{"code": "Q023", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:01:25.437122", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began running node model.mimic.blood_gas_first_day_arterial", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.437186Z", "type": "log_line"}
{"code": "Q033", "data": {"description": "table model public.blood_gas_first_day_arterial", "index": 10, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:01:25.437122", "node_status": "started", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "10 of 10 START table model public.blood_gas_first_day_arterial ................. [RUN]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.437674Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.438827Z", "type": "log_line"}
{"code": "Q030", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:01:25.437122", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began compiling node model.mimic.blood_gas_first_day_arterial", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.439334Z", "type": "log_line"}
{"code": "Q027", "data": {"unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Compiling model.mimic.blood_gas_first_day_arterial", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.439635Z", "type": "log_line"}
{"code": "Q028", "data": {"unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing injected SQL for node \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.443761Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.444549Z", "type": "log_line"}
{"code": "Q031", "data": {"node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": null, "node_status": "executing", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Began executing node model.mimic.blood_gas_first_day_arterial", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.444979Z", "type": "log_line"}
{"code": "M012", "data": {"msg": "Writing runtime SQL for node \"model.mimic.blood_gas_first_day_arterial\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Writing runtime SQL for node \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.457636Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.459628Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: BEGIN", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.460471Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.461529Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.469616Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.470954Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\n\n\n  create  table \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_tmp\"\n  as (\n    with stg_spo2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- max here is just used to group SpO2 by charttime\n    , max(case when valuenum <= 0 or valuenum > 100 then null else valuenum end) as SpO2\n  FROM chartevents\n  -- o2 sat\n  where ITEMID in\n  (\n    646 -- SpO2\n  , 220277 -- O2 saturation pulseoxymetry\n  )\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg_fio2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- pre-process the FiO2s to ensure they are between 21-100%\n    , max(\n        case\n          when itemid = 223835\n            then case\n              when valuenum > 0 and valuenum <= 1\n                then valuenum * 100\n              -- improperly input data - looks like O2 flow in litres\n              when valuenum > 1 and valuenum < 21\n                then null\n              when valuenum >= 21 and valuenum <= 100\n                then valuenum\n              else null end -- unphysiological\n        when itemid in (3420, 3422)\n        -- all these values are well formatted\n            then valuenum\n        when itemid = 190 and valuenum > 0.20 and valuenum < 1\n        -- well formatted but not in %\n            then valuenum * 100\n      else null end\n    ) as fio2_chartevents\n  FROM chartevents\n  where ITEMID in\n  (\n    3420 -- FiO2\n  , 190 -- FiO2 set\n  , 223835 -- Inspired O2 Fraction (FiO2)\n  , 3422 -- FiO2 [measured]\n  )\n  -- exclude rows marked as error\n  AND (error IS NULL OR error = 0)\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg2 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s1.charttime DESC) as lastRowSpO2\n  , s1.spo2\nfrom \"mimic\".\"public\".\"blood_gas_first_day\" bg\nleft join stg_spo2 s1\n  -- same patient\n  on  bg.icustay_id = s1.icustay_id\n  -- spo2 occurred at most 2 hours before this blood gas\n  and s1.charttime >= DATETIME_SUB(bg.charttime, INTERVAL '2' HOUR)\n  and s1.charttime <= bg.charttime\nwhere bg.po2 is not null\n)\n, stg3 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s2.charttime DESC) as lastRowFiO2\n  , s2.fio2_chartevents\n\n  -- create our specimen prediction\n  ,  1/(1+exp(-(-0.02544\n  +    0.04598 * po2\n  + coalesce(-0.15356 * spo2             , -0.15356 *   97.49420 +    0.13429)\n  + coalesce( 0.00621 * fio2_chartevents ,  0.00621 *   51.49550 +   -0.24958)\n  + coalesce( 0.10559 * hemoglobin       ,  0.10559 *   10.32307 +    0.05954)\n  + coalesce( 0.13251 * so2              ,  0.13251 *   93.66539 +   -0.23172)\n  + coalesce(-0.01511 * pco2             , -0.01511 *   42.08866 +   -0.01630)\n  + coalesce( 0.01480 * fio2             ,  0.01480 *   63.97836 +   -0.31142)\n  + coalesce(-0.00200 * aado2            , -0.00200 *  442.21186 +   -0.01328)\n  + coalesce(-0.03220 * bicarbonate      , -0.03220 *   22.96894 +   -0.06535)\n  + coalesce( 0.05384 * totalco2         ,  0.05384 *   24.72632 +   -0.01405)\n  + coalesce( 0.08202 * lactate          ,  0.08202 *    3.06436 +    0.06038)\n  + coalesce( 0.10956 * ph               ,  0.10956 *    7.36233 +   -0.00617)\n  + coalesce( 0.00848 * o2flow           ,  0.00848 *    7.59362 +   -0.35803)\n  ))) as SPECIMEN_PROB\nfrom stg2 bg\nleft join stg_fio2 s2\n  -- same patient\n  on  bg.icustay_id = s2.icustay_id\n  -- fio2 occurred at most 4 hours before this blood gas\n  and s2.charttime between DATETIME_SUB(bg.charttime, INTERVAL '4' HOUR) and bg.charttime\nwhere bg.lastRowSpO2 = 1 -- only the row with the most recent SpO2 (if no SpO2 found lastRowSpO2 = 1)\n)\n\nselect subject_id, hadm_id,\nicustay_id, charttime\n, specimen -- raw data indicating sample type, only present 80% of the time\n\n-- prediction of specimen for missing data\n, case\n      when SPECIMEN is not null then SPECIMEN\n      when SPECIMEN_PROB > 0.75 then 'ART'\n    else null end as SPECIMEN_PRED\n, specimen_prob\n-- oxygen related parameters\n, so2, spo2 -- note spo2 is FROM chartevents\n, po2, pco2\n, fio2_chartevents, fio2\n, aado2\n-- also calculate AADO2\n, case\n    when  PO2 is not null\n      and pco2 is not null\n      and coalesce(fio2, fio2_chartevents) is not null\n     -- multiple by 100 because FiO2 is in a % but should be a fraction\n      then (coalesce(fio2, fio2_chartevents)/100) * (760 - 47) - (pco2/0.8) - po2\n    else null\n  end as AADO2_calc\n, case\n    when PO2 is not null and coalesce(fio2, fio2_chartevents) is not null\n     -- multiply by 100 because FiO2 is in a % but should be a fraction\n      then 100*PO2/(coalesce(fio2, fio2_chartevents))\n    else null\n  end as PaO2FiO2\n-- acid-base parameters\n, ph, baseexcess\n, bicarbonate, totalco2\n\n-- blood count parameters\n, hematocrit\n, hemoglobin\n, carboxyhemoglobin\n, methemoglobin\n\n-- chemistry\n, chloride, calcium\n, temperature\n, potassium, sodium\n, lactate\n, glucose\n\n-- ventilation stuff that's sometimes input\n, intubated, tidalvolume, ventilationrate, ventilator\n, peep, o2flow\n, requiredo2\n\nfrom stg3\nwhere lastRowFiO2 = 1 -- only the most recent FiO2\n-- restrict it to *only* arterial samples\nand (specimen = 'ART' or specimen_prob > 0.75)\norder by icustay_id, charttime\n  );"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\n\n\n  create  table \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_tmp\"\n  as (\n    with stg_spo2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- max here is just used to group SpO2 by charttime\n    , max(case when valuenum <= 0 or valuenum > 100 then null else valuenum end) as SpO2\n  FROM chartevents\n  -- o2 sat\n  where ITEMID in\n  (\n    646 -- SpO2\n  , 220277 -- O2 saturation pulseoxymetry\n  )\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg_fio2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- pre-process the FiO2s to ensure they are between 21-100%\n    , max(\n        case\n          when itemid = 223835\n            then case\n              when valuenum > 0 and valuenum <= 1\n                then valuenum * 100\n              -- improperly input data - looks like O2 flow in litres\n              when valuenum > 1 and valuenum < 21\n                then null\n              when valuenum >= 21 and valuenum <= 100\n                then valuenum\n              else null end -- unphysiological\n        when itemid in (3420, 3422)\n        -- all these values are well formatted\n            then valuenum\n        when itemid = 190 and valuenum > 0.20 and valuenum < 1\n        -- well formatted but not in %\n            then valuenum * 100\n      else null end\n    ) as fio2_chartevents\n  FROM chartevents\n  where ITEMID in\n  (\n    3420 -- FiO2\n  , 190 -- FiO2 set\n  , 223835 -- Inspired O2 Fraction (FiO2)\n  , 3422 -- FiO2 [measured]\n  )\n  -- exclude rows marked as error\n  AND (error IS NULL OR error = 0)\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg2 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s1.charttime DESC) as lastRowSpO2\n  , s1.spo2\nfrom \"mimic\".\"public\".\"blood_gas_first_day\" bg\nleft join stg_spo2 s1\n  -- same patient\n  on  bg.icustay_id = s1.icustay_id\n  -- spo2 occurred at most 2 hours before this blood gas\n  and s1.charttime >= DATETIME_SUB(bg.charttime, INTERVAL '2' HOUR)\n  and s1.charttime <= bg.charttime\nwhere bg.po2 is not null\n)\n, stg3 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s2.charttime DESC) as lastRowFiO2\n  , s2.fio2_chartevents\n\n  -- create our specimen prediction\n  ,  1/(1+exp(-(-0.02544\n  +    0.04598 * po2\n  + coalesce(-0.15356 * spo2             , -0.15356 *   97.49420 +    0.13429)\n  + coalesce( 0.00621 * fio2_chartevents ,  0.00621 *   51.49550 +   -0.24958)\n  + coalesce( 0.10559 * hemoglobin       ,  0.10559 *   10.32307 +    0.05954)\n  + coalesce( 0.13251 * so2              ,  0.13251 *   93.66539 +   -0.23172)\n  + coalesce(-0.01511 * pco2             , -0.01511 *   42.08866 +   -0.01630)\n  + coalesce( 0.01480 * fio2             ,  0.01480 *   63.97836 +   -0.31142)\n  + coalesce(-0.00200 * aado2            , -0.00200 *  442.21186 +   -0.01328)\n  + coalesce(-0.03220 * bicarbonate      , -0.03220 *   22.96894 +   -0.06535)\n  + coalesce( 0.05384 * totalco2         ,  0.05384 *   24.72632 +   -0.01405)\n  + coalesce( 0.08202 * lactate          ,  0.08202 *    3.06436 +    0.06038)\n  + coalesce( 0.10956 * ph               ,  0.10956 *    7.36233 +   -0.00617)\n  + coalesce( 0.00848 * o2flow           ,  0.00848 *    7.59362 +   -0.35803)\n  ))) as SPECIMEN_PROB\nfrom stg2 bg\nleft join stg_fio2 s2\n  -- same patient\n  on  bg.icustay_id = s2.icustay_id\n  -- fio2 occurred at most 4 hours before this blood gas\n  and s2.charttime between DATETIME_SUB(bg.charttime, INTERVAL '4' HOUR) and bg.charttime\nwhere bg.lastRowSpO2 = 1 -- only the row with the most recent SpO2 (if no SpO2 found lastRowSpO2 = 1)\n)\n\nselect subject_id, hadm_id,\nicustay_id, charttime\n, specimen -- raw data indicating sample type, only present 80% of the time\n\n-- prediction of specimen for missing data\n, case\n      when SPECIMEN is not null then SPECIMEN\n      when SPECIMEN_PROB > 0.75 then 'ART'\n    else null end as SPECIMEN_PRED\n, specimen_prob\n-- oxygen related parameters\n, so2, spo2 -- note spo2 is FROM chartevents\n, po2, pco2\n, fio2_chartevents, fio2\n, aado2\n-- also calculate AADO2\n, case\n    when  PO2 is not null\n      and pco2 is not null\n      and coalesce(fio2, fio2_chartevents) is not null\n     -- multiple by 100 because FiO2 is in a % but should be a fraction\n      then (coalesce(fio2, fio2_chartevents)/100) * (760 - 47) - (pco2/0.8) - po2\n    else null\n  end as AADO2_calc\n, case\n    when PO2 is not null and coalesce(fio2, fio2_chartevents) is not null\n     -- multiply by 100 because FiO2 is in a % but should be a fraction\n      then 100*PO2/(coalesce(fio2, fio2_chartevents))\n    else null\n  end as PaO2FiO2\n-- acid-base parameters\n, ph, baseexcess\n, bicarbonate, totalco2\n\n-- blood count parameters\n, hematocrit\n, hemoglobin\n, carboxyhemoglobin\n, methemoglobin\n\n-- chemistry\n, chloride, calcium\n, temperature\n, potassium, sodium\n, lactate\n, glucose\n\n-- ventilation stuff that's sometimes input\n, intubated, tidalvolume, ventilationrate, ventilator\n, peep, o2flow\n, requiredo2\n\nfrom stg3\nwhere lastRowFiO2 = 1 -- only the most recent FiO2\n-- restrict it to *only* arterial samples\nand (specimen = 'ART' or specimen_prob > 0.75)\norder by icustay_id, charttime\n  );", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.471325Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.02, "status": "SELECT 0"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: SELECT 0 in 0.02 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.494087Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.504032Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day_arterial\" rename to \"blood_gas_first_day_arterial__dbt_backup\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day_arterial\" rename to \"blood_gas_first_day_arterial__dbt_backup\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.504421Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.505351Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.517027Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_tmp\" rename to \"blood_gas_first_day_arterial\""}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\nalter table \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_tmp\" rename to \"blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.517472Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "ALTER TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: ALTER TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.519189Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.527960Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.528798Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: COMMIT", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.529279Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.531846Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"model.mimic.blood_gas_first_day_arterial\"", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.536987Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\ndrop table if exists \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_backup\" cascade"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: /* {\"app\": \"dbt\", \"dbt_version\": \"1.1.1\", \"profile_name\": \"mimic\", \"target_name\": \"dev\", \"node_id\": \"model.mimic.blood_gas_first_day_arterial\"} */\ndrop table if exists \"mimic\".\"public\".\"blood_gas_first_day_arterial__dbt_backup\" cascade", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.537341Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "DROP TABLE"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: DROP TABLE in 0.0 seconds", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.541180Z", "type": "log_line"}
{"code": "Z010", "data": {}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "finished collecting timing info", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.546408Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On model.mimic.blood_gas_first_day_arterial: Close", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.546877Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2dfd00>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '51f6a751-a1bb-44fa-a157-e9f8f43002de', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5d2dfd00>]}", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.548033Z", "type": "log_line"}
{"code": "Q012", "data": {"description": "table model public.blood_gas_first_day_arterial", "execution_time": 0, "index": 10, "node_info": {"materialized": "table", "node_finished_at": null, "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:01:25.437122", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "status": "SELECT 0", "total": 10}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "10 of 10 OK created table model public.blood_gas_first_day_arterial ............ [\u001b[32mSELECT 0\u001b[0m in 0.11s]", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.549551Z", "type": "log_line"}
{"code": "Q024", "data": {"node_info": {"materialized": "table", "node_finished_at": "2022-07-29T23:01:25.551207", "node_name": "blood_gas_first_day_arterial", "node_path": "firstday/blood_gas_first_day_arterial.sql", "node_started_at": "2022-07-29T23:01:25.437122", "node_status": "success", "resource_type": "model", "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "run_result": {"adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0}, "agate_table": null, "execution_time": 0.10958242416381836, "failures": null, "message": "SELECT 0", "node": {"alias": "blood_gas_first_day_arterial", "build_path": "target/run/mimic/models/firstday/blood_gas_first_day_arterial.sql", "checksum": {"checksum": "c2e8d35acd151ff031845b14f52bb8ed7954367b6241a32242674dd2931ba17d", "name": "sha256"}, "columns": {}, "compiled": true, "compiled_path": "target/compiled/mimic/models/firstday/blood_gas_first_day_arterial.sql", "compiled_sql": "with stg_spo2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- max here is just used to group SpO2 by charttime\n    , max(case when valuenum <= 0 or valuenum > 100 then null else valuenum end) as SpO2\n  FROM chartevents\n  -- o2 sat\n  where ITEMID in\n  (\n    646 -- SpO2\n  , 220277 -- O2 saturation pulseoxymetry\n  )\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg_fio2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- pre-process the FiO2s to ensure they are between 21-100%\n    , max(\n        case\n          when itemid = 223835\n            then case\n              when valuenum > 0 and valuenum <= 1\n                then valuenum * 100\n              -- improperly input data - looks like O2 flow in litres\n              when valuenum > 1 and valuenum < 21\n                then null\n              when valuenum >= 21 and valuenum <= 100\n                then valuenum\n              else null end -- unphysiological\n        when itemid in (3420, 3422)\n        -- all these values are well formatted\n            then valuenum\n        when itemid = 190 and valuenum > 0.20 and valuenum < 1\n        -- well formatted but not in %\n            then valuenum * 100\n      else null end\n    ) as fio2_chartevents\n  FROM chartevents\n  where ITEMID in\n  (\n    3420 -- FiO2\n  , 190 -- FiO2 set\n  , 223835 -- Inspired O2 Fraction (FiO2)\n  , 3422 -- FiO2 [measured]\n  )\n  -- exclude rows marked as error\n  AND (error IS NULL OR error = 0)\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg2 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s1.charttime DESC) as lastRowSpO2\n  , s1.spo2\nfrom \"mimic\".\"public\".\"blood_gas_first_day\" bg\nleft join stg_spo2 s1\n  -- same patient\n  on  bg.icustay_id = s1.icustay_id\n  -- spo2 occurred at most 2 hours before this blood gas\n  and s1.charttime >= DATETIME_SUB(bg.charttime, INTERVAL '2' HOUR)\n  and s1.charttime <= bg.charttime\nwhere bg.po2 is not null\n)\n, stg3 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s2.charttime DESC) as lastRowFiO2\n  , s2.fio2_chartevents\n\n  -- create our specimen prediction\n  ,  1/(1+exp(-(-0.02544\n  +    0.04598 * po2\n  + coalesce(-0.15356 * spo2             , -0.15356 *   97.49420 +    0.13429)\n  + coalesce( 0.00621 * fio2_chartevents ,  0.00621 *   51.49550 +   -0.24958)\n  + coalesce( 0.10559 * hemoglobin       ,  0.10559 *   10.32307 +    0.05954)\n  + coalesce( 0.13251 * so2              ,  0.13251 *   93.66539 +   -0.23172)\n  + coalesce(-0.01511 * pco2             , -0.01511 *   42.08866 +   -0.01630)\n  + coalesce( 0.01480 * fio2             ,  0.01480 *   63.97836 +   -0.31142)\n  + coalesce(-0.00200 * aado2            , -0.00200 *  442.21186 +   -0.01328)\n  + coalesce(-0.03220 * bicarbonate      , -0.03220 *   22.96894 +   -0.06535)\n  + coalesce( 0.05384 * totalco2         ,  0.05384 *   24.72632 +   -0.01405)\n  + coalesce( 0.08202 * lactate          ,  0.08202 *    3.06436 +    0.06038)\n  + coalesce( 0.10956 * ph               ,  0.10956 *    7.36233 +   -0.00617)\n  + coalesce( 0.00848 * o2flow           ,  0.00848 *    7.59362 +   -0.35803)\n  ))) as SPECIMEN_PROB\nfrom stg2 bg\nleft join stg_fio2 s2\n  -- same patient\n  on  bg.icustay_id = s2.icustay_id\n  -- fio2 occurred at most 4 hours before this blood gas\n  and s2.charttime between DATETIME_SUB(bg.charttime, INTERVAL '4' HOUR) and bg.charttime\nwhere bg.lastRowSpO2 = 1 -- only the row with the most recent SpO2 (if no SpO2 found lastRowSpO2 = 1)\n)\n\nselect subject_id, hadm_id,\nicustay_id, charttime\n, specimen -- raw data indicating sample type, only present 80% of the time\n\n-- prediction of specimen for missing data\n, case\n      when SPECIMEN is not null then SPECIMEN\n      when SPECIMEN_PROB > 0.75 then 'ART'\n    else null end as SPECIMEN_PRED\n, specimen_prob\n-- oxygen related parameters\n, so2, spo2 -- note spo2 is FROM chartevents\n, po2, pco2\n, fio2_chartevents, fio2\n, aado2\n-- also calculate AADO2\n, case\n    when  PO2 is not null\n      and pco2 is not null\n      and coalesce(fio2, fio2_chartevents) is not null\n     -- multiple by 100 because FiO2 is in a % but should be a fraction\n      then (coalesce(fio2, fio2_chartevents)/100) * (760 - 47) - (pco2/0.8) - po2\n    else null\n  end as AADO2_calc\n, case\n    when PO2 is not null and coalesce(fio2, fio2_chartevents) is not null\n     -- multiply by 100 because FiO2 is in a % but should be a fraction\n      then 100*PO2/(coalesce(fio2, fio2_chartevents))\n    else null\n  end as PaO2FiO2\n-- acid-base parameters\n, ph, baseexcess\n, bicarbonate, totalco2\n\n-- blood count parameters\n, hematocrit\n, hemoglobin\n, carboxyhemoglobin\n, methemoglobin\n\n-- chemistry\n, chloride, calcium\n, temperature\n, potassium, sodium\n, lactate\n, glucose\n\n-- ventilation stuff that's sometimes input\n, intubated, tidalvolume, ventilationrate, ventilator\n, peep, o2flow\n, requiredo2\n\nfrom stg3\nwhere lastRowFiO2 = 1 -- only the most recent FiO2\n-- restrict it to *only* arterial samples\nand (specimen = 'ART' or specimen_prob > 0.75)\norder by icustay_id, charttime", "config": {"alias": null, "column_types": {}, "database": null, "enabled": true, "full_refresh": null, "materialized": "table", "meta": {}, "on_schema_change": "ignore", "persist_docs": {}, "post-hook": [], "pre-hook": [], "quoting": {}, "schema": null, "tags": [], "unique_key": null}, "created_at": 1658942123.1186428, "database": "mimic", "deferred": false, "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": ["model.mimic.blood_gas_first_day"]}, "description": "", "docs": {"show": true}, "extra_ctes": [], "extra_ctes_injected": true, "fqn": ["mimic", "firstday", "blood_gas_first_day_arterial"], "meta": {}, "name": "blood_gas_first_day_arterial", "original_file_path": "models/firstday/blood_gas_first_day_arterial.sql", "package_name": "mimic", "patch_path": null, "path": "firstday/blood_gas_first_day_arterial.sql", "raw_sql": "with stg_spo2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- max here is just used to group SpO2 by charttime\n    , max(case when valuenum <= 0 or valuenum > 100 then null else valuenum end) as SpO2\n  FROM chartevents\n  -- o2 sat\n  where ITEMID in\n  (\n    646 -- SpO2\n  , 220277 -- O2 saturation pulseoxymetry\n  )\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg_fio2 as\n(\n  select subject_id, hadm_id, icustay_id, charttime\n    -- pre-process the FiO2s to ensure they are between 21-100%\n    , max(\n        case\n          when itemid = 223835\n            then case\n              when valuenum > 0 and valuenum <= 1\n                then valuenum * 100\n              -- improperly input data - looks like O2 flow in litres\n              when valuenum > 1 and valuenum < 21\n                then null\n              when valuenum >= 21 and valuenum <= 100\n                then valuenum\n              else null end -- unphysiological\n        when itemid in (3420, 3422)\n        -- all these values are well formatted\n            then valuenum\n        when itemid = 190 and valuenum > 0.20 and valuenum < 1\n        -- well formatted but not in %\n            then valuenum * 100\n      else null end\n    ) as fio2_chartevents\n  FROM chartevents\n  where ITEMID in\n  (\n    3420 -- FiO2\n  , 190 -- FiO2 set\n  , 223835 -- Inspired O2 Fraction (FiO2)\n  , 3422 -- FiO2 [measured]\n  )\n  -- exclude rows marked as error\n  AND (error IS NULL OR error = 0)\n  group by subject_id, hadm_id, icustay_id, charttime\n)\n, stg2 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s1.charttime DESC) as lastRowSpO2\n  , s1.spo2\nfrom {{ref('blood_gas_first_day')}} bg\nleft join stg_spo2 s1\n  -- same patient\n  on  bg.icustay_id = s1.icustay_id\n  -- spo2 occurred at most 2 hours before this blood gas\n  and s1.charttime >= DATETIME_SUB(bg.charttime, INTERVAL '2' HOUR)\n  and s1.charttime <= bg.charttime\nwhere bg.po2 is not null\n)\n, stg3 as\n(\nselect bg.*\n  , ROW_NUMBER() OVER (partition by bg.icustay_id, bg.charttime order by s2.charttime DESC) as lastRowFiO2\n  , s2.fio2_chartevents\n\n  -- create our specimen prediction\n  ,  1/(1+exp(-(-0.02544\n  +    0.04598 * po2\n  + coalesce(-0.15356 * spo2             , -0.15356 *   97.49420 +    0.13429)\n  + coalesce( 0.00621 * fio2_chartevents ,  0.00621 *   51.49550 +   -0.24958)\n  + coalesce( 0.10559 * hemoglobin       ,  0.10559 *   10.32307 +    0.05954)\n  + coalesce( 0.13251 * so2              ,  0.13251 *   93.66539 +   -0.23172)\n  + coalesce(-0.01511 * pco2             , -0.01511 *   42.08866 +   -0.01630)\n  + coalesce( 0.01480 * fio2             ,  0.01480 *   63.97836 +   -0.31142)\n  + coalesce(-0.00200 * aado2            , -0.00200 *  442.21186 +   -0.01328)\n  + coalesce(-0.03220 * bicarbonate      , -0.03220 *   22.96894 +   -0.06535)\n  + coalesce( 0.05384 * totalco2         ,  0.05384 *   24.72632 +   -0.01405)\n  + coalesce( 0.08202 * lactate          ,  0.08202 *    3.06436 +    0.06038)\n  + coalesce( 0.10956 * ph               ,  0.10956 *    7.36233 +   -0.00617)\n  + coalesce( 0.00848 * o2flow           ,  0.00848 *    7.59362 +   -0.35803)\n  ))) as SPECIMEN_PROB\nfrom stg2 bg\nleft join stg_fio2 s2\n  -- same patient\n  on  bg.icustay_id = s2.icustay_id\n  -- fio2 occurred at most 4 hours before this blood gas\n  and s2.charttime between DATETIME_SUB(bg.charttime, INTERVAL '4' HOUR) and bg.charttime\nwhere bg.lastRowSpO2 = 1 -- only the row with the most recent SpO2 (if no SpO2 found lastRowSpO2 = 1)\n)\n\nselect subject_id, hadm_id,\nicustay_id, charttime\n, specimen -- raw data indicating sample type, only present 80% of the time\n\n-- prediction of specimen for missing data\n, case\n      when SPECIMEN is not null then SPECIMEN\n      when SPECIMEN_PROB > 0.75 then 'ART'\n    else null end as SPECIMEN_PRED\n, specimen_prob\n-- oxygen related parameters\n, so2, spo2 -- note spo2 is FROM chartevents\n, po2, pco2\n, fio2_chartevents, fio2\n, aado2\n-- also calculate AADO2\n, case\n    when  PO2 is not null\n      and pco2 is not null\n      and coalesce(fio2, fio2_chartevents) is not null\n     -- multiple by 100 because FiO2 is in a % but should be a fraction\n      then (coalesce(fio2, fio2_chartevents)/100) * (760 - 47) - (pco2/0.8) - po2\n    else null\n  end as AADO2_calc\n, case\n    when PO2 is not null and coalesce(fio2, fio2_chartevents) is not null\n     -- multiply by 100 because FiO2 is in a % but should be a fraction\n      then 100*PO2/(coalesce(fio2, fio2_chartevents))\n    else null\n  end as PaO2FiO2\n-- acid-base parameters\n, ph, baseexcess\n, bicarbonate, totalco2\n\n-- blood count parameters\n, hematocrit\n, hemoglobin\n, carboxyhemoglobin\n, methemoglobin\n\n-- chemistry\n, chloride, calcium\n, temperature\n, potassium, sodium\n, lactate\n, glucose\n\n-- ventilation stuff that's sometimes input\n, intubated, tidalvolume, ventilationrate, ventilator\n, peep, o2flow\n, requiredo2\n\nfrom stg3\nwhere lastRowFiO2 = 1 -- only the most recent FiO2\n-- restrict it to *only* arterial samples\nand (specimen = 'ART' or specimen_prob > 0.75)\norder by icustay_id, charttime", "refs": [["blood_gas_first_day"]], "relation_name": "\"mimic\".\"public\".\"blood_gas_first_day_arterial\"", "resource_type": "model", "root_path": "/home/ceci/Desktop/mimic-dbt", "schema": "public", "sources": [], "tags": [], "unique_id": "model.mimic.blood_gas_first_day_arterial", "unrendered_config": {"materialized": "table"}}, "status": "success", "thread_id": "Thread-1", "timing": [{"completed_at": "2022-07-29T23:01:25.444410Z", "name": "compile", "started_at": "2022-07-29T23:01:25.439613Z"}, {"completed_at": "2022-07-29T23:01:25.546363Z", "name": "execute", "started_at": "2022-07-29T23:01:25.445278Z"}]}, "unique_id": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Finished running node model.mimic.blood_gas_first_day_arterial", "pid": 64737, "thread_name": "Thread-1", "ts": "2022-07-29T23:01:25.551788Z", "type": "log_line"}
{"code": "E005", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Acquiring new postgres connection \"master\"", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.557247Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"master\"", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.558549Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "master", "sql": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: BEGIN", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.559240Z", "type": "log_line"}
{"code": "E037", "data": {"connection_state": "closed"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Opening a new connection, currently in state closed", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.559483Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.01, "status": "BEGIN"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: BEGIN in 0.01 seconds", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.570332Z", "type": "log_line"}
{"code": "E018", "data": {"conn_name": "master"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: COMMIT", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.571792Z", "type": "log_line"}
{"code": "E015", "data": {"conn_name": "master", "conn_type": "postgres"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Using postgres connection \"master\"", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.573097Z", "type": "log_line"}
{"code": "E016", "data": {"conn_name": "master", "sql": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: COMMIT", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.574311Z", "type": "log_line"}
{"code": "E017", "data": {"elapsed": 0.0, "status": "COMMIT"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "SQL status: COMMIT in 0.0 seconds", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.576581Z", "type": "log_line"}
{"code": "E010", "data": {"conn_name": "master"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "On master: Close", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.577267Z", "type": "log_line"}
{"code": "E040", "data": {"execution": " in 6.23s", "stat_line": "10 table models"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "Finished running 10 table models in 6.23s.", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.578488Z", "type": "log_line"}
{"code": "E008", "data": {"conn_name": "master"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Connection 'master' was properly closed.", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.579206Z", "type": "log_line"}
{"code": "E008", "data": {"conn_name": "model.mimic.blood_gas_first_day_arterial"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Connection 'model.mimic.blood_gas_first_day_arterial' was properly closed.", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.579577Z", "type": "log_line"}
{"code": "Z030", "data": {"keyboard_interrupt": false, "num_errors": 0, "num_warnings": 0}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "\u001b[32mCompleted successfully\u001b[0m", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.608635Z", "type": "log_line"}
{"code": "Z023", "data": {"stats": {"error": 0, "pass": 10, "skip": 0, "total": 10, "warn": 0}}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "info", "log_version": 2, "msg": "Done. PASS=10 WARN=0 ERROR=0 SKIP=0 TOTAL=10", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.611587Z", "type": "log_line"}
{"code": "Z040", "data": {"kwargs": "{'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddb5640>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddb5730>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddb54f0>]}"}, "invocation_id": "51f6a751-a1bb-44fa-a157-e9f8f43002de", "level": "debug", "log_version": 2, "msg": "Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddb5640>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddb5730>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6d5ddb54f0>]}", "pid": 64737, "thread_name": "MainThread", "ts": "2022-07-29T23:01:25.614570Z", "type": "log_line"}
